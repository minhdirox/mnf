

-------------------------------------- Minify E:/www/2.7/library/javascript/scriptaculous/lib/prototype.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
x){returnx;}}; ---> var  <--- Class={create:function(){return

[WARNING] Try to use a single 'var' statement per scope.
,arguments);};}}; ---> var  <--- Abstract=new Object();Object.extend

[WARNING] Try to use a single 'var' statement per scope.
{var keys=[];for( ---> var  <--- property in object){keys.push(property

[WARNING] Try to use a single 'var' statement per scope.
{var values=[];for( ---> var  <--- property in object){values.push(object

[WARNING] The variable object has already been declared in the same scope...
this,args=$A(arguments), ---> object <--- =args.shift();returnfunction(

[WARNING] Try to use a single 'var' statement per scope.
);returnthis;}}); ---> var  <--- Try={these:function(){var 

[WARNING] Try to use a single 'var' statement per scope.
function(){var returnValue;for( ---> var  <--- i=0,length=arguments.length;

[WARNING] Try to use a single 'var' statement per scope.
;i<length;i++){ ---> var  <--- lambda=arguments[i];try{returnValue

[WARNING] Try to use a single 'var' statement per scope.
{}}returnreturnValue;}}; ---> var  <--- PeriodicalExecuter=Class.create();PeriodicalExecuter.

[WARNING] Try to use a single 'var' statement per scope.
RegExp(Prototype.ScriptFragment,"img"); ---> var  <--- matchOne=new RegExp(Prototype.ScriptFragment,"im"

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
.map(function(script){return ---> eval <--- (script);});},escapeHTML

[WARNING] Try to use a single 'var' statement per scope.
div=document.createElement("div"); ---> var  <--- text=document.createTextNode(this);div

[WARNING] Try to use a single 'var' statement per scope.
=decodeURIComponent(pair[0]); ---> var  <--- value=pair[1]?decodeURIComponent(pair

[WARNING] Try to use a single 'var' statement per scope.
){returnparts[0];} ---> var  <--- camelized=this.charAt(0)=="-"

[WARNING] Try to use a single 'var' statement per scope.
):parts[0];for( ---> var  <--- i=1;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
.parseQuery=String.prototype.toQueryParams; ---> var  <--- Template=Class.create();Template.

[WARNING] Try to use a single 'var' statement per scope.
]);});}}; ---> var  <--- $break=new Object();var $continue=

[WARNING] Try to use a single 'var' statement per scope.
;var $break=new Object(); ---> var  <--- $continue=new Object();var Enumerable=

[WARNING] Try to use a single 'var' statement per scope.
;var $continue=new Object(); ---> var  <--- Enumerable={each:function(iterator){

[WARNING] Try to use a single 'var' statement per scope.
iterator=args.pop();} ---> var  <--- collections=[this].concat(args)

[WARNING] Try to use a single 'var' statement per scope.
,entries:Enumerable.toArray}); ---> var  <--- $A=Array.from=function(iterable)

[WARNING] Try to use a single 'var' statement per scope.
{var results=[];for( ---> var  <--- i=0,length=iterable.length;

[WARNING] Try to use a single 'var' statement per scope.
{var array=[];for( ---> var  <--- i=0,length=this.length;

[WARNING] Try to use a single 'var' statement per scope.
this[i]);}for( ---> var  <--- i=0,length=arguments.length;

[WARNING] The variable i has already been declared in the same scope...
[i]);}for(var  ---> i <--- =0,length=arguments.length;i

[WARNING] The variable length has already been declared in the same scope...
;}for(var i=0, ---> length <--- =arguments.length;i<length;i

[WARNING] Try to use a single 'var' statement per scope.
].constructor==Array){for( ---> var  <--- j=0,arrayLength=arguments[i]

[WARNING] Try to use a single 'var' statement per scope.
;}}returnarray;};} ---> var  <--- Hash=function(obj){Object.extend

[WARNING] Try to use a single 'var' statement per scope.
{for(var key in this){ ---> var  <--- value=this[key];if(value

[WARNING] Try to use a single 'var' statement per scope.
prototype[key]){continue;} ---> var  <--- pair=[key,value];pair.

[WARNING] Try to use a single 'var' statement per scope.
function(){var result;for( ---> var  <--- i=0,length=arguments.length;

[WARNING] Try to use a single 'var' statement per scope.
;i<length;i++){ ---> var  <--- value=this[arguments[i]];

[WARNING] Try to use a single 'var' statement per scope.
<=this.end;}}); ---> var  <--- $R=function(start,end,exclusive)

[WARNING] Try to use a single 'var' statement per scope.
start,end,exclusive);}; ---> var  <--- Ajax={getTransport:function(){return

[WARNING] Try to use a single 'var' statement per scope.
this);this.setRequestHeaders(); ---> var  <--- body=this.method=="post"?(this

[WARNING] Try to use a single 'var' statement per scope.
this.options.requestHeaders=="object"){ ---> var  <--- extras=this.options.requestHeaders;if(

[WARNING] Try to use a single 'var' statement per scope.
extras.push=="function"){for( ---> var  <--- i=0,length=extras.length;

[WARNING] Try to use a single 'var' statement per scope.
value;});}}for( ---> var  <--- name in headers){this.transport.setRequestHeader

[WARNING] Try to use a single 'var' statement per scope.
Ajax.Request.Events[readyState]; ---> var  <--- transport=this.transport,json=this.

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
.getHeader("X-JSON");returnjson? ---> eval <--- ("("+json+")"):null;

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
evalResponse:function(){try{return ---> eval <--- (this.transport.responseText);}catch

[WARNING] Try to use a single 'var' statement per scope.
success()?"success":"failure"]; ---> var  <--- response=this.transport.responseText;if(

[WARNING] Try to use a single 'var' statement per scope.
parentElement){var results=[]; ---> var  <--- query=document.evaluate(expression,$(

[WARNING] Try to use a single 'var' statement per scope.
XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null);for( ---> var  <--- i=0,length=query.snapshotLength;

[WARNING] Try to use a single 'var' statement per scope.
(q,parentElement);}else{ ---> var  <--- children=($(parentElement)||document.

[WARNING] Try to use a single 'var' statement per scope.
.body).getElementsByTagName("*"); ---> var  <--- elements=[],child;for(var 

[WARNING] Try to use a single 'var' statement per scope.
elements=[],child;for( ---> var  <--- i=0,length=children.length;

[WARNING] Try to use a single 'var' statement per scope.
;if(!window.Element){ ---> var  <--- Element=new Object();}Element.

[WARNING] Try to use a single 'var' statement per scope.
Element.Methods.Simulated);for( ---> var  <--- property in methods){var value=methods[

[WARNING] Try to use a single 'var' statement per scope.
;for(var property in methods){ ---> var  <--- value=methods[property];if(typeof

[WARNING] Try to use a single 'var' statement per scope.
,attribute=pair.last(); ---> var  <--- value=(element[property]||"")

[WARNING] Try to use a single 'var' statement per scope.
=t.names[name];} ---> var  <--- attribute=element.attributes[name];if

[WARNING] Try to use a single 'var' statement per scope.
element.firstChild;while(node){ ---> var  <--- nextNode=node.nextSibling;if(node.

[WARNING] Try to use a single 'var' statement per scope.
defaultView&&document.defaultView.getComputedStyle){ ---> var  <--- css=document.defaultView.getComputedStyle(element,

[WARNING] Try to use a single 'var' statement per scope.
;for(var name in style){ ---> var  <--- value=style[name];if(name

[WARNING] Try to use a single 'var' statement per scope.
,height:element.offsetHeight};} ---> var  <--- els=element.style;var originalVisibility=els

[WARNING] Try to use a single 'var' statement per scope.
;}var els=element.style; ---> var  <--- originalVisibility=els.visibility;var originalPosition=els

[WARNING] Try to use a single 'var' statement per scope.
style;var originalVisibility=els.visibility; ---> var  <--- originalPosition=els.position;var originalDisplay=els

[WARNING] Try to use a single 'var' statement per scope.
visibility;var originalPosition=els.position; ---> var  <--- originalDisplay=els.display;els.visibility=

[WARNING] Try to use a single 'var' statement per scope.
="absolute";els.display="block"; ---> var  <--- originalWidth=element.clientWidth;var originalHeight=element

[WARNING] Try to use a single 'var' statement per scope.
"block";var originalWidth=element.clientWidth; ---> var  <--- originalHeight=element.clientHeight;els.display=

[WARNING] Try to use a single 'var' statement per scope.
"TD"].include(tagName)){ ---> var  <--- div=document.createElement("div");switch

[WARNING] Try to use a single 'var' statement per scope.
extend(Element,Element.Methods); ---> var  <--- _nativeExtensions=false;if(/Konqueror|Safari|KHTML/.test(

[WARNING] Try to use a single 'var' statement per scope.
window[className]){return;} ---> var  <--- klass=window[className]={};

[WARNING] Try to use a single 'var' statement per scope.
=Element.extend.cache;for( ---> var  <--- property in methods){var value=methods[

[WARNING] Try to use a single 'var' statement per scope.
;for(var property in methods){ ---> var  <--- value=methods[property];if(!

[WARNING] Try to use a single 'var' statement per scope.
);_nativeExtensions=true;}}; ---> var  <--- Toggle=new Object();Toggle.display

[WARNING] Try to use a single 'var' statement per scope.
0].childNodes);}}; ---> var  <--- Insertion=new Object();Insertion.Before

[WARNING] Try to use a single 'var' statement per scope.
Element.ClassNames.prototype,Enumerable); ---> var  <--- Selector=Class.create();Selector.

[WARNING] Try to use a single 'var' statement per scope.
).length>0){for( ---> var  <--- i=0,length=clause.length;

[WARNING] Try to use a single 'var' statement per scope.
.name.inspect()+")"; ---> var  <--- splitValueBy=function(delimiter){returnvalue+

[WARNING] Try to use a single 'var' statement per scope.
this.params.tagName||"*"); ---> var  <--- results=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var results=[];for( ---> var  <--- i=0,length=scope.length;

[WARNING] Try to use a single 'var' statement per scope.
document,$A(arguments));} ---> var  <--- Form={reset:function(form){

[WARNING] Try to use a single 'var' statement per scope.
(Element.extend);}for( ---> var  <--- i=0,matchingInputs=[],length

[WARNING] Try to use a single 'var' statement per scope.
;i<length;i++){ ---> var  <--- input=inputs[i];if((

[WARNING] Try to use a single 'var' statement per scope.
);if(value!=undefined){ ---> var  <--- pair={};pair[element.name

[WARNING] Try to use a single 'var' statement per scope.
Element,Form.Element.Methods); ---> var  <--- Field=Form.Element;var $F=Form

[WARNING] Try to use a single 'var' statement per scope.
);var Field=Form.Element; ---> var  <--- $F=Form.Element.getValue;Form.

[WARNING] Try to use a single 'var' statement per scope.
length){returnnull;}for( ---> var  <--- i=0,values=[];i

[WARNING] The variable values has already been declared in the same scope...
;}for(var i=0, ---> values <--- =[];i<length;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<length;i++){ ---> var  <--- opt=element.options[i];if

[WARNING] Try to use a single 'var' statement per scope.
var value=this.getValue(); ---> var  <--- changed=("string"==typeofthis.lastValue&&

[WARNING] Try to use a single 'var' statement per scope.
;if(!window.Event){ ---> var  <--- Event=new Object();}Object.

[WARNING] Try to use a single 'var' statement per scope.
,Event.unloadCache,false);} ---> var  <--- Position={includeScrollOffsets:false,prepare:function

[WARNING] Try to use a single 'var' statement per scope.
.tagName=="BODY"){break;} ---> var  <--- p=Element.getStyle(element,"position")

[WARNING] Try to use a single 'var' statement per scope.
var valueT=0,valueL=0; ---> var  <--- element=forElement;do{valueT+=element.

[WARNING] Try to use a single 'var' statement per scope.
);source=$(source); ---> var  <--- p=Position.page(source);target

[WARNING] Try to use a single 'var' statement per scope.
);target=$(target); ---> var  <--- delta=[0,0];var parent

[WARNING] Try to use a single 'var' statement per scope.
var delta=[0,0]; ---> var  <--- parent=null;if(Element.getStyle(

[WARNING] Try to use a single 'var' statement per scope.
offsets=Position.positionedOffset(element); ---> var  <--- top=offsets[1];var left=

[WARNING] Try to use a single 'var' statement per scope.
;var top=offsets[1]; ---> var  <--- left=offsets[0];var width=

[WARNING] Try to use a single 'var' statement per scope.
;var left=offsets[0]; ---> var  <--- width=element.clientWidth;var height=element

[WARNING] Try to use a single 'var' statement per scope.
];var width=element.clientWidth; ---> var  <--- height=element.clientHeight;element._originalLeft=

[WARNING] Try to use a single 'var' statement per scope.
-(element._originalTop||0); ---> var  <--- left=parseFloat(element.style.left||


-------------------------------------- Minify E:/www/2.7/library/javascript/drxcalendar/css/jscal2.css-------------------------------------- 


[INFO] Using charset UTF-8


-------------------------------------- Minify E:/www/2.7/library/javascript/drxcalendar/js/drxCal.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var defaults={type:"datetime"}; ---> var  <--- options=$.extend(defaults,options)

[WARNING] The variable options has already been declared in the same scope...
defaults={type:"datetime"};var  ---> options <--- =$.extend(defaults,options);

[WARNING] Try to use a single 'var' statement per scope.
$.extend(defaults,options); ---> var  <--- getDateFormat=function(type){var format=

[WARNING] Try to use a single 'var' statement per scope.
;returnformat[type];}; ---> var  <--- updateRelatedField=function(obj,v){if

[WARNING] Try to use a single 'var' statement per scope.
function(){var switchObjId=""; ---> var  <--- o=options;var obj=$(this

[WARNING] Try to use a single 'var' statement per scope.
switchObjId="";var o=options; ---> var  <--- obj=$(this);var toggler=

[WARNING] Try to use a single 'var' statement per scope.
;var obj=$(this); ---> var  <--- toggler="toggler_"+obj.attr("id")

[WARNING] Try to use a single 'var' statement per scope.
after('<span id="'+toggler+'" class="ico_menu a_calendar calButton"></span>'); ---> var  <--- jSwObj="#"+o.switchObj;if(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
);if(switchObjId!=""){ ---> eval <--- ("var tmp = arrCal."+switchObjId);if(typeof(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(typeof(tmp)=="undefined"){ ---> eval <--- ("arrCal."+switchObjId+"= []");}eval

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
("arrCal."+switchObjId+"= []");} ---> eval <--- ("calGroup = arrCal."+switchObjId);i=calGroup.

[WARNING] Try to use a single 'var' statement per scope.
try{var charCode=e.keyCode; ---> var  <--- allowCode=[8,9,13,16

[WARNING] Try to use a single 'var' statement per scope.
WEEK:"%W-%Y",MONTH:"%m-%Y"}; ---> var  <--- arrCalGroup=arrCal[sw_id];if(typeof

[WARNING] Try to use a single 'var' statement per scope.
var calType=sw_obj.val(); ---> var  <--- sw_id=sw_obj.attr("id");switchKpiCal

[WARNING] Try to use a single 'var' statement per scope.
strdate.replace(/[\/,\s,:]/g,"/"); ---> var  <--- aData=strdate.split("/");var 

[WARNING] Try to use a single 'var' statement per scope.
aData=strdate.split("/"); ---> var  <--- dd=parseInt(aData[0],10

[WARNING] Try to use a single 'var' statement per scope.
(aData[0],10); ---> var  <--- mm=parseInt(aData[1],10

[WARNING] Try to use a single 'var' statement per scope.
(aData[1],10); ---> var  <--- yyyy=String((new Date())

[WARNING] Try to use a single 'var' statement per scope.
(aData[2],10); ---> var  <--- hh=parseInt(aData[3],10

[WARNING] Try to use a single 'var' statement per scope.
(aData[3],10); ---> var  <--- ii=parseInt(aData[4],10

[WARNING] Try to use a single 'var' statement per scope.
(aData[4],10); ---> var  <--- xdata=new Date(yyyy,mm-1

[WARNING] Try to use a single 'var' statement per scope.
returnxdata;}break;case"WEEK": ---> var  <--- re=/^\d{1,2}-\d{4}$/;if(!re.test

[WARNING] The variable re has already been declared in the same scope...
xdata;}break;case"WEEK":var  ---> re <--- =/^\d{1,2}-\d{4}$/;if(!re.test(

[WARNING] Try to use a single 'var' statement per scope.
(strdate)){returnfalse;} ---> var  <--- getMaxWeek=function(full_year){dStart=new 

[WARNING] Try to use a single 'var' statement per scope.
+1)/7);}; ---> var  <--- aData=strdate.split("-");if

[WARNING] The variable aData has already been declared in the same scope...
1)/7);};var  ---> aData <--- =strdate.split("-");if(

[WARNING] Try to use a single 'var' statement per scope.
]));break;case"MONTH": ---> var  <--- re=/^\d{1,2}-\d{4}$/;if(!re.test

[WARNING] The variable re has already been declared in the same scope...
));break;case"MONTH":var  ---> re <--- =/^\d{1,2}-\d{4}$/;if(!re.test(

[WARNING] Try to use a single 'var' statement per scope.
(strdate)){returnfalse;} ---> var  <--- aData=strdate.split("-");if

[WARNING] The variable aData has already been declared in the same scope...
strdate)){returnfalse;}var  ---> aData <--- =strdate.split("-");if(

[WARNING] Try to use a single 'var' statement per scope.
):tmp;returntmp;}; ---> var  <--- getWeek=function(d){var determinedate=

[WARNING] Try to use a single 'var' statement per scope.
),determinedate.getDate()); ---> var  <--- D=determinedate.getDay();if(

[WARNING] Try to use a single 'var' statement per scope.
)+(4-D)); ---> var  <--- YN=determinedate.getFullYear();var ZBDoCY

[WARNING] Try to use a single 'var' statement per scope.
var YN=determinedate.getFullYear(); ---> var  <--- ZBDoCY=Math.floor((determinedate.getTime

[WARNING] Try to use a single 'var' statement per scope.
,-6))/86400000); ---> var  <--- WN=1+Math.floor(ZBDoCY/

[WARNING] Try to use a single 'var' statement per scope.
/7);returnWN;}; ---> var  <--- d1=new Date();d1.setFullYear

[WARNING] Try to use a single 'var' statement per scope.
d1.getDate()-numOfdaysPastSinceLastMonday); ---> var  <--- weekNoToday=getWeek(d1);var weeksInTheFuture=

[WARNING] Try to use a single 'var' statement per scope.
;var weekNoToday=getWeek(d1); ---> var  <--- weeksInTheFuture=eval(weekNo-weekNoToday);d1

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
=getWeek(d1);var weeksInTheFuture= ---> eval <--- (weekNo-weekNoToday);d1.setDate(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
.setDate(d1.getDate()+ ---> eval <--- (7*weeksInTheFuture));var rangeIsFrom=

[WARNING] Try to use a single 'var' statement per scope.
+eval(7*weeksInTheFuture)); ---> var  <--- rangeIsFrom=pad(eval(d1.getMonth(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
weeksInTheFuture));var rangeIsFrom=pad( ---> eval <--- (d1.getMonth()+1),

[WARNING] Try to use a single 'var' statement per scope.
msg);}returnfalse;}; ---> var  <--- dfok,dtok;if(require_all&&(df

[WARNING] Try to use a single 'var' statement per scope.
dfOb.val(),type); ---> var  <--- dtok=this.isValid(dtOb.val(


-------------------------------------- Minify E:/www/2.7/library/javascript/jquery/jquery.rotate.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
if(p.angle>=0){ ---> var  <--- rotation=Math.PI*p.angle/

[WARNING] Try to use a single 'var' statement per scope.
p.angle/180;}else{ ---> var  <--- rotation=Math.PI*(360+p

[WARNING] The variable rotation has already been declared in the same scope...
.angle/180;}else{var  ---> rotation <--- =Math.PI*(360+p.

[WARNING] Try to use a single 'var' statement per scope.
+p.angle)/180;} ---> var  <--- costheta=Math.cos(rotation);var 

[WARNING] Try to use a single 'var' statement per scope.
costheta=Math.cos(rotation); ---> var  <--- sintheta=Math.sin(rotation);if

[WARNING] Try to use a single 'var' statement per scope.
.all&&!window.opera){ ---> var  <--- canvas=document.createElement("img");canvas

[WARNING] Try to use a single 'var' statement per scope.
",M22="+costheta+",SizingMethod='auto expand')";}else{ ---> var  <--- canvas=document.createElement("canvas");if

[WARNING] The variable canvas has already been declared in the same scope...
+costheta+",SizingMethod='auto expand')";}else{var  ---> canvas <--- =document.createElement("canvas");if(

[WARNING] Try to use a single 'var' statement per scope.
.abs(sintheta*H);} ---> var  <--- context=canvas.getContext("2d");context


-------------------------------------- Minify E:/www/2.7/library/javascript/jquery/jquery.selectBox.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
){var typeTimer,typeSearch=""; ---> var  <--- init=function(select,data){if

[WARNING] Try to use a single 'var' statement per scope.
.attr("size"))>1; ---> var  <--- settings=data||{};control.addClass

[WARNING] Try to use a single 'var' statement per scope.
"selectBox-disabled");}if(inline){ ---> var  <--- options=getOptions(select,"inline");control

[WARNING] Try to use a single 'var' statement per scope.
[0].style.height){ ---> var  <--- size=select.attr("size")?parseInt

[WARNING] Try to use a single 'var' statement per scope.
.attr("size")):5; ---> var  <--- tmp=control.clone().removeAttr(

[WARNING] Try to use a single 'var' statement per scope.
}disableSelection(control);}else{ ---> var  <--- label=$('<span class="selectBox-label" />'),arrow=$

[WARNING] Try to use a single 'var' statement per scope.
).text()||"\u00A0"); ---> var  <--- options=getOptions(select,"dropdown");options

[WARNING] The variable options has already been declared in the same scope...
.text()||"\u00A0");var  ---> options <--- =getOptions(select,"dropdown");options.

[WARNING] Try to use a single 'var' statement per scope.
settings).hide();}; ---> var  <--- getOptions=function(select,type){var 

[WARNING] Try to use a single 'var' statement per scope.
options);returnoptions;}}; ---> var  <--- destroy=function(select){select=$

[WARNING] Try to use a single 'var' statement per scope.
if(!control){return;} ---> var  <--- options=control.data("selectBox-options");options

[WARNING] Try to use a single 'var' statement per scope.
"selectBox-settings").show();}; ---> var  <--- showMenu=function(select){select=$

[WARNING] Try to use a single 'var' statement per scope.
(settings.menuSpeed);break;} ---> var  <--- li=options.find(".selectBox-selected:first");keepOptionInView

[WARNING] Try to use a single 'var' statement per scope.
hideMenus();});}; ---> var  <--- hideMenus=function(){if($(

[WARNING] Try to use a single 'var' statement per scope.
("selectBox-menuShowing");});}; ---> var  <--- selectOption=function(select,li,event)

[WARNING] Try to use a single 'var' statement per scope.
){li.toggleClass("selectBox-selected"); ---> var  <--- affectedOptions;if(li.index()>

[WARNING] Try to use a single 'var' statement per scope.
(li.text());} ---> var  <--- i=0,selection=[];if

[WARNING] Try to use a single 'var' statement per scope.
"change");}returntrue;}; ---> var  <--- addHover=function(select,li){select

[WARNING] Try to use a single 'var' statement per scope.
li.addClass("selectBox-hover");}; ---> var  <--- removeHover=function(select,li){select

[WARNING] Try to use a single 'var' statement per scope.
).removeClass("selectBox-hover");}; ---> var  <--- keepOptionInView=function(select,li,center)

[WARNING] Try to use a single 'var' statement per scope.
height());}}}; ---> var  <--- handleKeyDown=function(select,event){select

[WARNING] Try to use a single 'var' statement per scope.
(control.hasClass("selectBox-menuShowing")){ ---> var  <--- prev=options.find(".selectBox-hover").prev

[WARNING] Try to use a single 'var' statement per scope.
(control.hasClass("selectBox-menuShowing")){ ---> var  <--- next=options.find(".selectBox-hover").next

[WARNING] Try to use a single 'var' statement per scope.
select);}break;}}; ---> var  <--- handleKeyPress=function(select,event){select

[WARNING] Try to use a single 'var' statement per scope.
,1000);break;}}; ---> var  <--- enable=function(select){select=$

[WARNING] Try to use a single 'var' statement per scope.
control.removeClass("selectBox-disabled");}; ---> var  <--- disable=function(select){select=$

[WARNING] Try to use a single 'var' statement per scope.
control.addClass("selectBox-disabled");}; ---> var  <--- setValue=function(select,value){select

[WARNING] Try to use a single 'var' statement per scope.
if(!control){return;} ---> var  <--- settings=select.data("selectBox-settings"),options

[WARNING] Try to use a single 'var' statement per scope.
.call(select);}}; ---> var  <--- setOptions=function(select,options){select

[WARNING] Try to use a single 'var' statement per scope.
select.html("");for( ---> var  <--- i in data){if(data[i

[WARNING] Try to use a single 'var' statement per scope.
data[i])==="object"){ ---> var  <--- optgroup=$('<optgroup label="'+i+'" />')

[WARNING] Try to use a single 'var' statement per scope.
'<optgroup label="'+i+'" />');for( ---> var  <--- j in data[i]){optgroup.

[WARNING] Try to use a single 'var' statement per scope.
.append(optgroup);}else{ ---> var  <--- option=$('<option value="'+i+'">'+

[WARNING] Try to use a single 'var' statement per scope.
data("selectBox-options").remove(); ---> var  <--- type=control.hasClass("selectBox-dropdown")?"dropdown"

[WARNING] The variable options has already been declared in the same scope...
hasClass("selectBox-dropdown")?"dropdown":"inline", ---> options <--- =getOptions(select,type);control.

[WARNING] Try to use a single 'var' statement per scope.
(options);break;}}; ---> var  <--- disableSelection=function(selector){$(selector

[WARNING] The symbol settings is declared but is apparently never used.
This code can probably be written in a more compact way.
control=select.data("selectBox-control"), ---> settings <--- =select.data("selectBox-settings");if(

[WARNING] The symbol settings is declared but is apparently never used.
This code can probably be written in a more compact way.
control=select.data("selectBox-control"), ---> settings <--- =select.data("selectBox-settings");switch(


-------------------------------------- Minify E:/www/2.7/library/external/XOAD/js/xoad_optimized.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var XOAD_ERROR_USER=1024; ---> var  <--- XOAD_ERROR_TIMEOUT=1025;var xoad={};

[WARNING] Try to use a single 'var' statement per scope.
XOAD_ERROR_USER=1024;var XOAD_ERROR_TIMEOUT=1025; ---> var  <--- xoad={};xoad.errorHandler=null

[WARNING] Try to use a single 'var' statement per scope.
();}catch(e){ ---> var  <--- progIds=["MSXML2.XMLHTTP","Microsoft.XMLHTTP","MSXML2.XMLHTTP.5.0","MSXML2.XMLHTTP.4.0"

[WARNING] Try to use a single 'var' statement per scope.
"Microsoft.XMLHTTP","MSXML2.XMLHTTP.5.0","MSXML2.XMLHTTP.4.0","MSXML2.XMLHTTP.3.0"]; ---> var  <--- success=false;for(var iterator=0

[WARNING] Try to use a single 'var' statement per scope.
];var success=false;for( ---> var  <--- iterator=0;(iterator<progIds.length

[WARNING] Try to use a single 'var' statement per scope.
{var wipeKeys=[];for( ---> var  <--- key in target.__meta){if(typeof

[WARNING] Try to use a single 'var' statement per scope.
wipeKeys.length>0){for( ---> var  <--- iterator=0;iterator<wipeKeys.length;

[WARNING] Try to use a single 'var' statement per scope.
]]=null;}}for( ---> var  <--- key in source.__meta){if(source

[WARNING] The variable key has already been declared in the same scope...
]=null;}}for(var  ---> key <---  in source.__meta){if(source[

[WARNING] Try to use a single 'var' statement per scope.
}var type=typeof(data); ---> var  <--- code="";if(type=="boolean")

[WARNING] Try to use a single 'var' statement per scope.
else{if(type=="string"){ ---> var  <--- length=data.length;for(var iterator

[WARNING] Try to use a single 'var' statement per scope.
var length=data.length;for( ---> var  <--- iterator=0;iterator<data.length;

[WARNING] Try to use a single 'var' statement per scope.
<data.length;iterator++){ ---> var  <--- asciiCode=data.charCodeAt(iterator);if

[WARNING] Try to use a single 'var' statement per scope.
(data.__class)=="undefined"){ ---> var  <--- length=0;if((typeof(data

[WARNING] The variable length has already been declared in the same scope...
data.__class)=="undefined"){var  ---> length <--- =0;if((typeof(data.

[WARNING] Try to use a single 'var' statement per scope.
])!="undefined")){for( ---> var  <--- iterator=0;iterator<data.length;

[WARNING] The variable iterator has already been declared in the same scope...
)!="undefined")){for(var  ---> iterator <--- =0;iterator<data.length;iterator

[WARNING] Try to use a single 'var' statement per scope.
data.length;}else{for( ---> var  <--- key in data){if(/^[0-9]+$/.test

[WARNING] Try to use a single 'var' statement per scope.
data.__meta!=null){for( ---> var  <--- key in data.__meta){code+=xoad

[WARNING] The variable key has already been declared in the same scope...
.__meta!=null){for(var  ---> key <---  in data.__meta){code+=xoad.

[WARNING] Try to use a single 'var' statement per scope.
{var sender=throwArguments[0]; ---> var  <--- method=throwArguments[1];method="on"

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
){returnfalse;}var type= ---> eval <--- ("typeof(obj."+method+")");if(

[WARNING] Try to use a single 'var' statement per scope.
);if(type=="function"){ ---> var  <--- invokeCode="obj."+method+"(";if(

[WARNING] Try to use a single 'var' statement per scope.
(invokeArguments)!="undefined"){for( ---> var  <--- iterator=0;iterator<invokeArguments.length;

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;}}}invokeCode+=")";return ---> eval <--- (invokeCode);}returnfalse;};

[WARNING] Try to use a single 'var' statement per scope.
returnfalse;}var methodCallback=null; ---> var  <--- methodArgs=[];for(var iterator=

[WARNING] Try to use a single 'var' statement per scope.
;var methodArgs=[];for( ---> var  <--- iterator=0;iterator<callArguments.length;

[WARNING] Try to use a single 'var' statement per scope.
];methodArgs.pop();} ---> var  <--- xmlHttp=xoad.getXmlHttp();var requestBody

[WARNING] Try to use a single 'var' statement per scope.
var xmlHttp=xoad.getXmlHttp(); ---> var  <--- requestBody={source:obj,className:obj

[WARNING] Try to use a single 'var' statement per scope.
requestBody=xoad.serialize(requestBody); ---> var  <--- url=obj.__url;if(url.

[WARNING] Try to use a single 'var' statement per scope.
("POST",url,false);} ---> var  <--- callId=null;var callTimeout=obj.getTimeout

[WARNING] Try to use a single 'var' statement per scope.
false);}var callId=null; ---> var  <--- callTimeout=obj.getTimeout();if(

[WARNING] Try to use a single 'var' statement per scope.
;}xoad.callbacks.count++; ---> var  <--- callResult=true;var requestCompleted=function()

[WARNING] Try to use a single 'var' statement per scope.
.count++;var callResult=true; ---> var  <--- requestCompleted=function(){if(typeof(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
if(callId!=null){if( ---> eval <--- ("xoad.callbacks.table.call"+callId+".timeout")){return

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
+".timeout")){returnfalse;} ---> eval <--- ("window.clearTimeout(xoad.callbacks.table.call"+callId+".id)");eval(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
eval("window.clearTimeout(xoad.callbacks.table.call"+callId+".id)"); ---> eval <--- ("xoad.callbacks.table.call"+callId+" = null");}try

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
obj,method]);}try{ ---> eval <--- ("var xoadResponse = "+xmlHttp.responseText+";");

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;}if(callTimeout!=null){ ---> eval <--- ("xoad.callbacks.table.call"+callId+" = {}");eval(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
eval("xoad.callbacks.table.call"+callId+" = {}"); ---> eval <--- ("xoad.callbacks.table.call"+callId+".timeout = false");eval(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
eval("xoad.callbacks.table.call"+callId+".timeout = false"); ---> eval <--- ("xoad.callbacks.table.call"+callId+".source = obj");eval(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
eval("xoad.callbacks.table.call"+callId+".source = obj"); ---> eval <--- ("xoad.callbacks.table.call"+callId+".id = window.setTimeout('xoad.callbacks.table.call"+callId+'.timeout = true; xoad.throwException(xoad.getError(XOAD_ERROR_TIMEOUT, "Timeout."), [xoad.callbacks.table.call'

[WARNING] Try to use a single 'var' statement per scope.
);if(methodCallback==null){ ---> var  <--- response=requestCompleted();if(typeof(

[WARNING] Try to use a single 'var' statement per scope.
;iterator>=0;iterator--){ ---> var  <--- event=xoad.events.table[iterator]

[WARNING] Try to use a single 'var' statement per scope.
;var eventsData=[];for( ---> var  <--- iterator=0;iterator<xoad.events.

[WARNING] Try to use a single 'var' statement per scope.
.table.length;iterator++){ ---> var  <--- event=xoad.events.table[iterator]

[WARNING] Try to use a single 'var' statement per scope.
:event.filter});}} ---> var  <--- xmlHttp=xoad.getXmlHttp();var requestBody

[WARNING] Try to use a single 'var' statement per scope.
var xmlHttp=xoad.getXmlHttp(); ---> var  <--- requestBody=xoad.serialize({eventsCallback:true

[WARNING] Try to use a single 'var' statement per scope.
.lastRefresh,data:eventsData}); ---> var  <--- url=xoad.events.callbackUrl;if(

[WARNING] Try to use a single 'var' statement per scope.
open("POST",url,true); ---> var  <--- callId=xoad.callbacks.count++;var 

[WARNING] Try to use a single 'var' statement per scope.
callId=xoad.callbacks.count++; ---> var  <--- requestCompleted=function(){if(eval(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
var requestCompleted=function(){if( ---> eval <--- ("xoad.callbacks.table.call"+callId+".timeout")){return

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
+".timeout")){returnfalse;} ---> eval <--- ("window.clearTimeout(xoad.callbacks.table.call"+callId+".id)");eval(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
eval("window.clearTimeout(xoad.callbacks.table.call"+callId+".id)"); ---> eval <--- ("xoad.callbacks.table.call"+callId+" = null");if(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
();returnfalse;}try{ ---> eval <--- ("var xoadResponse = "+xmlHttp.responseText+";");

[WARNING] Try to use a single 'var' statement per scope.
.result.length;serverIterator++){ ---> var  <--- serverEvent=xoadResponse.result[serverIterator];for

[WARNING] Try to use a single 'var' statement per scope.
xoadResponse.result[serverIterator];for( ---> var  <--- clientIterator=0;clientIterator<xoad.events.

[WARNING] Try to use a single 'var' statement per scope.
.table.length;clientIterator++){ ---> var  <--- clientEvent=xoad.events.table[clientIterator]

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
.filter==clientEvent.filter)){ ---> eval <--- ("if (typeof(clientEvent.listener."+clientEvent.event+') == "function") { clientEvent.listener.'+clientEvent

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
events.status=1;}}; ---> eval <--- ("xoad.callbacks.table.call"+callId+" = {}");eval(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
eval("xoad.callbacks.table.call"+callId+" = {}"); ---> eval <--- ("xoad.callbacks.table.call"+callId+".timeout = false");eval(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
eval("xoad.callbacks.table.call"+callId+".timeout = false"); ---> eval <--- ("xoad.callbacks.table.call"+callId+".id = window.setTimeout('xoad.callbacks.table.call"+callId+".timeout = true; xoad.queueDispatchEvents();', xoad.events.timeout)"

[WARNING] Try to use a single 'var' statement per scope.
}var eventName=eventArguments[0]; ---> var  <--- eventData=(eventArguments.length>1)?

[WARNING] Try to use a single 'var' statement per scope.
)?eventArguments[1]:null; ---> var  <--- eventFilter=(eventArguments.length>2)?

[WARNING] Try to use a single 'var' statement per scope.
)?eventArguments[2]:null; ---> var  <--- eventId=(eventArguments.length>3)?

[WARNING] Try to use a single 'var' statement per scope.
data:eventData,filter:eventFilter}; ---> var  <--- xmlHttp=xoad.getXmlHttp();var requestBody

[WARNING] Try to use a single 'var' statement per scope.
var xmlHttp=xoad.getXmlHttp(); ---> var  <--- requestBody=xoad.serialize({eventPost:true

[WARNING] Try to use a single 'var' statement per scope.
:eventData,filter:eventFilter}); ---> var  <--- url=xoad.events.callbackUrl;if(

[WARNING] Try to use a single 'var' statement per scope.
open("POST",url,true); ---> var  <--- requestCompleted=function(){if(xmlHttp.

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
eventId);returnfalse;}try{ ---> eval <--- ("var xoadResponse = "+xmlHttp.responseText+";");

[WARNING] Try to use a single 'var' statement per scope.
)+event.substr(1); ---> var  <--- notifyArguments=[];for(var iterator=

[WARNING] Try to use a single 'var' statement per scope.
;var notifyArguments=[];for( ---> var  <--- iterator=1;iterator<arguments.length;

[WARNING] Try to use a single 'var' statement per scope.
arguments[iterator]);}for( ---> var  <--- iterator=0;iterator<xoad.observers.

[WARNING] The variable iterator has already been declared in the same scope...
[iterator]);}for(var  ---> iterator <--- =0;iterator<xoad.observers.length


-------------------------------------- Minify E:/www/2.7/library/external/XOAD/extensions/html/js/html_optimized.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
html.length>0){try{ ---> eval <--- (response.html);}catch(e

[WARNING] Try to use a single 'var' statement per scope.
)=="undefined"){returnnull;} ---> var  <--- formData={};for(var iterator=

[WARNING] Try to use a single 'var' statement per scope.
}var formData={};for( ---> var  <--- iterator=0;iterator<form.elements.

[WARNING] Try to use a single 'var' statement per scope.
.elements.length;iterator++){ ---> var  <--- element=form.elements[iterator];if

[WARNING] Try to use a single 'var' statement per scope.
(element.disabled){continue;} ---> var  <--- elementType=element.tagName.toLowerCase();

[WARNING] Try to use a single 'var' statement per scope.
=element.tagName.toLowerCase(); ---> var  <--- elementName=null;var elementValue=null;if

[WARNING] Try to use a single 'var' statement per scope.
toLowerCase();var elementName=null; ---> var  <--- elementValue=null;if((typeof(element

[WARNING] Try to use a single 'var' statement per scope.
element.value;}else{try{ ---> var  <--- type=eval("typeof(formData."+elementName+")")

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;}else{try{var type= ---> eval <--- ("typeof(formData."+elementName+")");if(

[WARNING] Try to use a single 'var' statement per scope.
);elementValue=[];for( ---> var  <--- optionsIterator=0;optionsIterator<element.options.

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
element.value;}}}try{ ---> eval <--- ("formData."+elementName+" = elementValue;");}catch

[WARNING] Try to use a single 'var' statement per scope.
"undefined"){returnfalse;}for( ---> var  <--- iterator=0;iterator<form.elements.

[WARNING] Try to use a single 'var' statement per scope.
.elements.length;iterator++){ ---> var  <--- element=form.elements[iterator];if

[WARNING] Try to use a single 'var' statement per scope.
(element.disabled){continue;} ---> var  <--- elementType=element.tagName.toLowerCase();

[WARNING] Try to use a single 'var' statement per scope.
=element.tagName.toLowerCase(); ---> var  <--- elementName=null;if((typeof(element

[WARNING] Try to use a single 'var' statement per scope.
replace(/\[\]$/ig,"");}} ---> var  <--- elementValue=null;try{var valueType=eval

[WARNING] Try to use a single 'var' statement per scope.
}}var elementValue=null;try{ ---> var  <--- valueType=eval("typeof(formData."+elementName+")")

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
elementValue=null;try{var valueType= ---> eval <--- ("typeof(formData."+elementName+")");if(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
if(valueType!="undefined"){elementValue= ---> eval <--- ("formData."+elementName);}else{continue

[WARNING] Try to use a single 'var' statement per scope.
element.selectedIndex=0;}for( ---> var  <--- valuesIterator=0;valuesIterator<elementValue.length;

[WARNING] Try to use a single 'var' statement per scope.
.length;valuesIterator++){for( ---> var  <--- optionsIterator=0;optionsIterator<element.options.


-------------------------------------- Minify E:/www/2.7/library/javascript/webticker_lib.js-------------------------------------- 


[INFO] Using charset UTF-8


-------------------------------------- Minify E:/www/2.7/library/javascript/scriptaculous/src/builder.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
this.NODEMAP[elementName]||"div"; ---> var  <--- parentElement=document.createElement(parentTag);try

[WARNING] Try to use a single 'var' statement per scope.
">";}catch(e){} ---> var  <--- element=parentElement.firstChild||null;if(

[WARNING] Try to use a single 'var' statement per scope.
arguments[1]);}else{ ---> var  <--- attrs=this._attributes(arguments[1]

[WARNING] The symbol $ is declared but is apparently never used.
This code can probably be written in a more compact way.
element=this.node("div"); ---> $ <--- (element).update(html.strip(

[WARNING] The symbol $A is declared but is apparently never used.
This code can probably be written in a more compact way.
(Builder,[tag].concat( ---> $A <--- (arguments)));};})


-------------------------------------- Minify E:/www/2.7/library/javascript/scriptaculous/src/controls.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
if(this.options.select){ ---> var  <--- nodes=document.getElementsByClassName(this.options.

[WARNING] Try to use a single 'var' statement per scope.
.collectTextNodesIgnoreClass(selectedElement,"informal");} ---> var  <--- lastTokenPos=this.findLastToken();if(

[WARNING] Try to use a single 'var' statement per scope.
;if(lastTokenPos!=-1){ ---> var  <--- newValue=this.element.value.substr(

[WARNING] Try to use a single 'var' statement per scope.
substr(0,lastTokenPos+1); ---> var  <--- whitespace=this.element.value.substr(

[WARNING] Try to use a single 'var' statement per scope.
<this.entryCount;i++){ ---> var  <--- entry=this.getEntry(i);entry

[WARNING] Try to use a single 'var' statement per scope.
;if(tokenPos!=-1){ ---> var  <--- ret=this.element.value.substr(

[WARNING] Try to use a single 'var' statement per scope.
(/\s+$/,"");}else{ ---> var  <--- ret=this.element.value;}return

[WARNING] The variable ret has already been declared in the same scope...
/\s+$/,"");}else{var  ---> ret <--- =this.element.value;}return/\n/

[WARNING] Try to use a single 'var' statement per scope.
{var lastTokenPos=-1;for( ---> var  <--- i=0;i<this.options.

[WARNING] Try to use a single 'var' statement per scope.
.tokens.length;i++){ ---> var  <--- thisTokenPos=this.element.value.lastIndexOf(

[WARNING] Try to use a single 'var' statement per scope.
instance){var ret=[]; ---> var  <--- partial=[];var entry=instance.

[WARNING] Try to use a single 'var' statement per scope.
[];var partial=[]; ---> var  <--- entry=instance.getToken();var count

[WARNING] Try to use a single 'var' statement per scope.
var entry=instance.getToken(); ---> var  <--- count=0;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
);var count=0;for( ---> var  <--- i=0;i<instance.options.

[WARNING] Try to use a single 'var' statement per scope.
.options.choices;i++){ ---> var  <--- elem=instance.options.array[i]

[WARNING] Try to use a single 'var' statement per scope.
instance.options.array[i]; ---> var  <--- foundPos=instance.options.ignoreCase?elem.

[WARNING] Try to use a single 'var' statement per scope.
text=this.getText();} ---> var  <--- obj=this;if(this.options.

[WARNING] Try to use a single 'var' statement per scope.
{this.options.textarea=false; ---> var  <--- textField=document.createElement("input");textField

[WARNING] Try to use a single 'var' statement per scope.
.highlightcolor;textField.className="editor_field"; ---> var  <--- size=this.options.size||this.

[WARNING] Try to use a single 'var' statement per scope.
{this.options.textarea=true; ---> var  <--- textArea=document.createElement("textarea");textArea

[WARNING] Try to use a single 'var' statement per scope.
){var form=this.form; ---> var  <--- value=this.editField.value;this.

[WARNING] Try to use a single 'var' statement per scope.
selectTag=document.createElement("select"); ---> var  <--- collection=this.options.collection||[]

[WARNING] Try to use a single 'var' statement per scope.
this.options.collection||[]; ---> var  <--- optionTag;collection.each(function(e,

[WARNING] The symbol count is declared but is apparently never used.
This code can probably be written in a more compact way.
entry=instance.getToken();var  ---> count <--- =0;for(var i=0;

[WARNING] The symbol obj is declared but is apparently never used.
This code can probably be written in a more compact way.
=this.getText();}var  ---> obj <--- =this;if(this.options.rows


-------------------------------------- Minify E:/www/2.7/library/javascript/scriptaculous/src/dragdrop.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
){options._containers=[]; ---> var  <--- containment=options.containment;if((typeof

[WARNING] Try to use a single 'var' statement per scope.
this.last_active);}}}; ---> var  <--- Draggables={drags:[],observers:

[WARNING] Try to use a single 'var' statement per scope.
.length;});}}; ---> var  <--- Draggable=Class.create();Draggable.

[WARNING] Try to use a single 'var' statement per scope.
0.7});}});} ---> var  <--- options=Object.extend(defaults,arguments[

[WARNING] Try to use a single 'var' statement per scope.
tag_name=="TEXTAREA")){return;} ---> var  <--- pointer=[Event.pointerX(event),

[WARNING] Try to use a single 'var' statement per scope.
,Event.pointerY(event)]; ---> var  <--- pos=Position.cumulativeOffset(this.element)

[WARNING] Using 'with' is not recommended. Moreover, using 'with' reduces the level of compression!
this.options.scroll==window){ ---> with <--- (this._getWindowScroll(this.options.scroll

[WARNING] Try to use a single 'var' statement per scope.
.options.scroll.offsetHeight);} ---> var  <--- speed=[0,0];if(

[WARNING] Try to use a single 'var' statement per scope.
=revert(this.element);} ---> var  <--- d=this.currentDelta();if(

[WARNING] Try to use a single 'var' statement per scope.
if(this.options.ghosting){ ---> var  <--- r=Position.realOffset(this.element)

[WARNING] Try to use a single 'var' statement per scope.
[1]-Position.deltaY;} ---> var  <--- d=this.currentDelta();pos[

[WARNING] Try to use a single 'var' statement per scope.
scroll.scrollTop-this.originalScrollTop;} ---> var  <--- p=[0,1].map(

[WARNING] Try to use a single 'var' statement per scope.
bind(this));}}} ---> var  <--- style=this.element.style;if(

[WARNING] Try to use a single 'var' statement per scope.
{var current=new Date(); ---> var  <--- delta=current-this.lastScrolled;this.

[WARNING] Using 'with' is not recommended. Moreover, using 'with' reduces the level of compression!
this.options.scroll==window){ ---> with <--- (this._getWindowScroll(this.options.scroll

[WARNING] Try to use a single 'var' statement per scope.
||this.scrollSpeed[1]){ ---> var  <--- d=delta/1000;this.options.

[WARNING] Using 'with' is not recommended. Moreover, using 'with' reduces the level of compression!
var T,L,W,H; ---> with <--- (w.document){if(w.

[WARNING] Try to use a single 'var' statement per scope.
,height:H};}}; ---> var  <--- SortableObserver=Class.create();SortableObserver.

[WARNING] Try to use a single 'var' statement per scope.
this.element);}}}; ---> var  <--- Sortable={SERIALIZE_RULE:/^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,sortables:{

[WARNING] Try to use a single 'var' statement per scope.
);this.destroy(element); ---> var  <--- options_for_draggable={revert:true,scroll:options

[WARNING] Try to use a single 'var' statement per scope.
options_for_draggable.zindex=options.zindex;} ---> var  <--- options_for_droppable={overlap:options.overlap,containment

[WARNING] Try to use a single 'var' statement per scope.
hoverclass,onHover:Sortable.onHover}; ---> var  <--- options_for_tree={onHover:Sortable.onEmptyHover,overlap

[WARNING] Try to use a single 'var' statement per scope.
Sortable.mark(dropon,"after"); ---> var  <--- nextElement=dropon.nextSibling||null;if(

[WARNING] Try to use a single 'var' statement per scope.
null;if(nextElement!=element){ ---> var  <--- oldParentNode=element.parentNode;element.style.

[WARNING] The variable oldParentNode has already been declared in the same scope...
;if(nextElement!=element){var  ---> oldParentNode <--- =element.parentNode;element.style.visibility

[WARNING] Try to use a single 'var' statement per scope.
){var oldParentNode=element.parentNode; ---> var  <--- droponOptions=Sortable.options(dropon);if

[WARNING] Try to use a single 'var' statement per scope.
.isParent(dropon,element)){ ---> var  <--- index;var children=Sortable.findElements(dropon

[WARNING] Try to use a single 'var' statement per scope.
dropon,element)){var index; ---> var  <--- children=Sortable.findElements(dropon,{tag

[WARNING] Try to use a single 'var' statement per scope.
,only:droponOptions.only}); ---> var  <--- child=null;if(children){var 

[WARNING] Try to use a single 'var' statement per scope.
child=null;if(children){ ---> var  <--- offset=Element.offsetSize(dropon,droponOptions.

[WARNING] Try to use a single 'var' statement per scope.
.appendChild(Sortable._marker);} ---> var  <--- offsets=Position.cumulativeOffset(dropon);Sortable

[WARNING] Try to use a single 'var' statement per scope.
,options)||[];for( ---> var  <--- i=0;i<children.length;

[WARNING] Try to use a single 'var' statement per scope.
<children.length;++i){ ---> var  <--- match=children[i].id.match

[WARNING] Try to use a single 'var' statement per scope.
if(!match){continue;} ---> var  <--- child={id:encodeURIComponent(match?match

[WARNING] Try to use a single 'var' statement per scope.
sortableOptions=this.options(element); ---> var  <--- options=Object.extend({tag:sortableOptions

[WARNING] Try to use a single 'var' statement per scope.
arguments[1]||{}); ---> var  <--- root={id:null,parent:null

[WARNING] Try to use a single 'var' statement per scope.
arguments[2]||{}); ---> var  <--- nodeMap={};this.findElements(element

[WARNING] Try to use a single 'var' statement per scope.
arguments[1]||{}); ---> var  <--- name=encodeURIComponent((arguments[1]&&


-------------------------------------- Minify E:/www/2.7/library/javascript/scriptaculous/src/effects.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
(0,4)=="rgb("){ ---> var  <--- cols=this.slice(4,this.

[WARNING] Try to use a single 'var' statement per scope.
-1).split(","); ---> var  <--- i=0;do{color+=parseInt(

[WARNING] Try to use a single 'var' statement per scope.
this.length==4){for( ---> var  <--- i=1;i<4;i++

[WARNING] The variable i has already been declared in the same scope...
.length==4){for(var  ---> i <--- =1;i<4;i++)

[WARNING] Try to use a single 'var' statement per scope.
=$(element).childNodes;} ---> var  <--- options=Object.extend({speed:0.1

[WARNING] Try to use a single 'var' statement per scope.
arguments[2]||{}); ---> var  <--- masterDelay=options.delay;$A(elements)

[WARNING] Try to use a single 'var' statement per scope.
(element,options);}}; ---> var  <--- Effect2=Effect;Effect.Transitions={linear

[WARNING] Try to use a single 'var' statement per scope.
new Date().getTime(); ---> var  <--- position=(typeofeffect.options.queue==

[WARNING] Try to use a single 'var' statement per scope.
().getTime();for( ---> var  <--- i=0,len=this.effects.

[WARNING] Try to use a single 'var' statement per scope.
this.finishOn-this.startOn); ---> var  <--- frame=Math.round(pos*this.

[WARNING] Try to use a single 'var' statement per scope.
if(this.options.scaleFromCenter){ ---> var  <--- topd=(height-this.dims[0

[WARNING] Try to use a single 'var' statement per scope.
.dims[0])/2; ---> var  <--- leftd=(width-this.dims[1

[WARNING] Try to use a single 'var' statement per scope.
]+=this.options.offset;} ---> var  <--- max=window.innerHeight?window.height-

[WARNING] Try to use a single 'var' statement per scope.
var oldOpacity=element.getInlineOpacity(); ---> var  <--- options=Object.extend({from:element

[WARNING] Try to use a single 'var' statement per scope.
down().getStyle("bottom"); ---> var  <--- elementDimensions=element.getDimensions();returnnew 

[WARNING] Try to use a single 'var' statement per scope.
arguments[1]||{}); ---> var  <--- oldStyle={top:element.style.top

[WARNING] Try to use a single 'var' statement per scope.
opacity:element.getInlineOpacity()}; ---> var  <--- dims=element.getDimensions();var initialMoveX

[WARNING] Try to use a single 'var' statement per scope.
var dims=element.getDimensions(); ---> var  <--- initialMoveX,initialMoveY;var moveX,moveY;switch

[WARNING] Try to use a single 'var' statement per scope.
getDimensions();var initialMoveX,initialMoveY; ---> var  <--- moveX,moveY;switch(options.direction)

[WARNING] Try to use a single 'var' statement per scope.
arguments[1]||{}); ---> var  <--- oldStyle={top:element.style.top

[WARNING] Try to use a single 'var' statement per scope.
opacity:element.getInlineOpacity()}; ---> var  <--- dims=element.getDimensions();var moveX

[WARNING] Try to use a single 'var' statement per scope.
var dims=element.getDimensions(); ---> var  <--- moveX,moveY;switch(options.direction)

[WARNING] Try to use a single 'var' statement per scope.
=arguments[1]||{}; ---> var  <--- oldOpacity=element.getInlineOpacity();var transition

[WARNING] Try to use a single 'var' statement per scope.
var oldOpacity=element.getInlineOpacity(); ---> var  <--- transition=options.transition||Effect.Transitions.

[WARNING] Try to use a single 'var' statement per scope.
.transition||Effect.Transitions.sinoidal; ---> var  <--- reverser=function(pos){returntransition(

[WARNING] Try to use a single 'var' statement per scope.
indexOf(":")==-1){ ---> var  <--- cssText="",selector="."+options.

[WARNING] Try to use a single 'var' statement per scope.
.CSS_LENGTH.test(value)){ ---> var  <--- components=value.match(/^([\+\-]?[0-9\.]+)(.*)$/),value

[WARNING] The variable value has already been declared in the same scope...
components=value.match(/^([\+\-]?[0-9\.]+)(.*)$/), ---> value <--- =parseFloat(components[1]),unit

[WARNING] The variable unit has already been declared in the same scope...
=parseFloat(components[1]), ---> unit <--- =(components.length==3)?components

[WARNING] Try to use a single 'var' statement per scope.
[2]:null;}}} ---> var  <--- originalValue=this.element.getStyle(property)

[WARNING] Try to use a single 'var' statement per scope.
.innerHTML='<div style="'+this+'"></div>'; ---> var  <--- style=element.down().style,

[WARNING] The symbol $$ is declared but is apparently never used.
This code can probably be written in a more compact way.
=[$(track.ids)|| ---> $$ <--- (track.ids)].flatten()


-------------------------------------- Minify E:/www/2.7/library/javascript/scriptaculous/src/scriptaculous.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
src.replace(/scriptaculous\.js(\?.*)?$/,""); ---> var  <--- includes=s.src.match(/\?.*load=([a-z,]*)/)

[WARNING] The symbol $A is declared but is apparently never used.
This code can probably be written in a more compact way.
1.5){throw("script.aculo.us requires the Prototype JavaScript framework >= 1.5.0");} ---> $A <--- (document.getElementsByTagName("script")).findAll


-------------------------------------- Minify E:/www/2.7/library/javascript/scriptaculous/src/slider.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
.allowedValues[0]-value); ---> var  <--- newValue=this.allowedValues[0];this

[WARNING] Try to use a single 'var' statement per scope.
handle=Event.element(event); ---> var  <--- pointer=[Event.pointerX(event),

[WARNING] Try to use a single 'var' statement per scope.
,Event.pointerY(event)]; ---> var  <--- track=handle;if(track==this.

[WARNING] Try to use a single 'var' statement per scope.
if(track==this.track){ ---> var  <--- offsets=Position.cumulativeOffset(this.track)

[WARNING] Try to use a single 'var' statement per scope.
this.handleLength/2))); ---> var  <--- offsets=Position.cumulativeOffset(this.activeHandle)

[WARNING] The variable offsets has already been declared in the same scope...
.handleLength/2)));var  ---> offsets <--- =Position.cumulativeOffset(this.activeHandle);

[WARNING] Try to use a single 'var' statement per scope.
activeHandle);this.updateStyles(); ---> var  <--- offsets=Position.cumulativeOffset(this.activeHandle)

[WARNING] The variable offsets has already been declared in the same scope...
);this.updateStyles();var  ---> offsets <--- =Position.cumulativeOffset(this.activeHandle);

[WARNING] Try to use a single 'var' statement per scope.
,Event.pointerY(event)]; ---> var  <--- offsets=Position.cumulativeOffset(this.track)


-------------------------------------- Minify E:/www/2.7/library/javascript/scriptaculous/src/unittest.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
arguments[2]||{}); ---> var  <--- oEvent=document.createEvent("MouseEvents");oEvent

[WARNING] Try to use a single 'var' statement per scope.
arguments[2]||{}); ---> var  <--- oEvent=document.createEvent("KeyEvents");oEvent

[WARNING] Try to use a single 'var' statement per scope.
this.tests=[];for( ---> var  <--- testcase in testcases){if(/^test/.test

[WARNING] Try to use a single 'var' statement per scope.
){var hasFailure=false;for( ---> var  <--- i=0;i<this.tests.

[WARNING] Try to use a single 'var' statement per scope.
function(){var assertions=0; ---> var  <--- failures=0;var errors=0;var 

[WARNING] Try to use a single 'var' statement per scope.
assertions=0;var failures=0; ---> var  <--- errors=0;var messages=[];

[WARNING] Try to use a single 'var' statement per scope.
failures=0;var errors=0; ---> var  <--- messages=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var messages=[];for( ---> var  <--- i=0;i<this.tests.

[WARNING] Try to use a single 'var' statement per scope.
message=arguments[2]||"assertMatch"; ---> var  <--- regex=new RegExp(expected);try{

[WARNING] Try to use a single 'var' statement per scope.
arguments[2]||"assertReturnsTrue";try{ ---> var  <--- m=obj[method];if(!

[WARNING] Try to use a single 'var' statement per scope.
arguments[2]||"assertReturnsFalse";try{ ---> var  <--- m=obj[method];if(!

[WARNING] Try to use a single 'var' statement per scope.
||1).times(operation); ---> var  <--- timeTaken=((new Date())-

[WARNING] Try to use a single 'var' statement per scope.
||1).times(operation); ---> var  <--- timeTaken=((new Date())-

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;this.test=function(){ ---> eval <--- ("with(this){"+test+"}");};

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
){Test.BDDMethods[m]= ---> eval <--- ("function(){var args = $A(arguments);var scope = args.shift();scope."+METHODMAP[m]+".apply(scope,(args || []).concat([this])); }")

[WARNING] Try to use a single 'var' statement per scope.
();var compiledSpec={}; ---> var  <--- titles={};for(specName in spec

[WARNING] Try to use a single 'var' statement per scope.
spec[specName];break;default: ---> var  <--- testName="test"+specName.gsub(/\s+/,

[WARNING] Try to use a single 'var' statement per scope.
/\s+/,"-").camelize(); ---> var  <--- body=spec[specName].toString()

[WARNING] The symbol messages is declared but is apparently never used.
This code can probably be written in a more compact way.
=0;var errors=0;var  ---> messages <--- =[];for(var i=0


-------------------------------------- Minify E:/www/2.7/public/css/img_view.css-------------------------------------- 


[INFO] Using charset UTF-8


-------------------------------------- Minify E:/www/2.7/public/css/login.css-------------------------------------- 


[INFO] Using charset UTF-8


-------------------------------------- Minify E:/www/2.7/public/css/sam_end.css-------------------------------------- 


[INFO] Using charset UTF-8


-------------------------------------- Minify E:/www/2.7/public/css/style.css-------------------------------------- 


[INFO] Using charset UTF-8


-------------------------------------- Minify E:/www/2.7/public/css/style_1260.css-------------------------------------- 


[INFO] Using charset UTF-8


-------------------------------------- Minify E:/www/2.7/public/js/account_home.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
parseInt(parent_div.offsetTop)+16; ---> var  <--- layerTop=ylocation+"px";var layerWidth=document

[WARNING] Try to use a single 'var' statement per scope.
16;var layerTop=ylocation+"px"; ---> var  <--- layerWidth=document.getElementById(layerid).offsetWidth

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById(layerid).offsetWidth; ---> var  <--- xlocation=parseInt(parent_div.offsetLeft);var 

[WARNING] Try to use a single 'var' statement per scope.
xlocation=parseInt(parent_div.offsetLeft); ---> var  <--- layerLeft=xlocation-parseInt(layerWidth)+16

[WARNING] Try to use a single 'var' statement per scope.
,header);switchPanel(""); ---> var  <--- post_lastname=$("txt_lastname").value;var 

[WARNING] Try to use a single 'var' statement per scope.
post_lastname=$("txt_lastname").value; ---> var  <--- post_firstname=$("txt_firstname").value;var 

[WARNING] Try to use a single 'var' statement per scope.
post_firstname=$("txt_firstname").value; ---> var  <--- post_title=$("txt_title").value;var 

[WARNING] Try to use a single 'var' statement per scope.
post_title=$("txt_title").value; ---> var  <--- post_category=$("txt_category").value;var 

[WARNING] Try to use a single 'var' statement per scope.
post_category=$("txt_category").value; ---> var  <--- post_descr=$("txt_descr").value;var 

[WARNING] Try to use a single 'var' statement per scope.
post_descr=$("txt_descr").value; ---> var  <--- post_email=$("txt_email").value;var 

[WARNING] Try to use a single 'var' statement per scope.
post_email=$("txt_email").value; ---> var  <--- post_fax=$("txt_fax").value;var 

[WARNING] Try to use a single 'var' statement per scope.
post_fax=$("txt_fax").value; ---> var  <--- post_telephone=$("txt_telephone").value;var 

[WARNING] Try to use a single 'var' statement per scope.
post_telephone=$("txt_telephone").value; ---> var  <--- post_mobile=$("txt_mobile").value;var 

[WARNING] Try to use a single 'var' statement per scope.
post_mobile=$("txt_mobile").value; ---> var  <--- post_address=$("txt_address").value;var 

[WARNING] Try to use a single 'var' statement per scope.
post_address=$("txt_address").value; ---> var  <--- post_language=$("ddl_language").value;var 

[WARNING] Try to use a single 'var' statement per scope.
post_language=$("ddl_language").value; ---> var  <--- post_list=$("ddl_list").value;callAJAX

[WARNING] The function anyServices_callback has already been declared in the same scope...
;});}var anyServices_callback=function ---> anyServices_callback <--- (result){if(result!==true)


-------------------------------------- Minify E:/www/2.7/public/js/adjust_list_size.js-------------------------------------- 


[INFO] Using charset UTF-8


-------------------------------------- Minify E:/www/2.7/public/js/admin_account.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var AJX_acc_list_by_login; ---> var  <--- AJX_acc_list_by_center;var AJX_acc_log_list;var AJX_acc_create;var intvalSearchForm

[WARNING] Try to use a single 'var' statement per scope.
var AJX_acc_list_by_login;var AJX_acc_list_by_center; ---> var  <--- AJX_acc_log_list;var AJX_acc_create;var intvalSearchForm;var frm_account_list

[WARNING] Try to use a single 'var' statement per scope.
var AJX_acc_list_by_login;var AJX_acc_list_by_center;var AJX_acc_log_list; ---> var  <--- AJX_acc_create;var intvalSearchForm;var frm_account_list;var frm_account_log

[WARNING] Try to use a single 'var' statement per scope.
var AJX_acc_list_by_center;var AJX_acc_log_list;var AJX_acc_create; ---> var  <--- intvalSearchForm;var frm_account_list;var frm_account_log=null;

[WARNING] Try to use a single 'var' statement per scope.
var AJX_acc_log_list;var AJX_acc_create;var intvalSearchForm; ---> var  <--- frm_account_list;var frm_account_log=null;var edit_check=

[WARNING] Try to use a single 'var' statement per scope.
var AJX_acc_create;var intvalSearchForm;var frm_account_list; ---> var  <--- frm_account_log=null;var edit_check=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frm_account_list;var frm_account_log=null; ---> var  <--- edit_check=0;var pageAccount=0;var 

[WARNING] Try to use a single 'var' statement per scope.
frm_account_log=null;var edit_check=0; ---> var  <--- pageAccount=0;var pageLog=0;var 

[WARNING] Try to use a single 'var' statement per scope.
edit_check=0;var pageAccount=0; ---> var  <--- pageLog=0;var accountCenterPage=0;var 

[WARNING] Try to use a single 'var' statement per scope.
pageAccount=0;var pageLog=0; ---> var  <--- accountCenterPage=0;var arrayCenterNamesForSort=new Array(

[WARNING] Try to use a single 'var' statement per scope.
pageLog=0;var accountCenterPage=0; ---> var  <--- arrayCenterNamesForSort=new Array();var arrayCenterNamesForSort_Backup=

[WARNING] Try to use a single 'var' statement per scope.
;var arrayCenterNamesForSort=new Array(); ---> var  <--- arrayCenterNamesForSort_Backup=new Array();var maxCenterHierarchy=

[WARNING] Try to use a single 'var' statement per scope.
;var arrayCenterNamesForSort_Backup=new Array(); ---> var  <--- maxCenterHierarchy=new Array(0);var maxRoleHierarchy

[WARNING] Try to use a single 'var' statement per scope.
var maxCenterHierarchy=new Array(0); ---> var  <--- maxRoleHierarchy=new Array(0);var arrayCenterNew

[WARNING] Try to use a single 'var' statement per scope.
var maxRoleHierarchy=new Array(0); ---> var  <--- arrayCenterNew=new Array(0);var arrayServiceMod

[WARNING] Try to use a single 'var' statement per scope.
var arrayCenterNew=new Array(0); ---> var  <--- arrayServiceMod=new Array(0);var arrayServiceMod_temp

[WARNING] Try to use a single 'var' statement per scope.
var arrayServiceMod=new Array(0); ---> var  <--- arrayServiceMod_temp=new Array(0);functionloadAJAX

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
switchSearchPanel("divSearchAccount");displayHistoryList(); ---> eval <--- (startup_functions);}functionstripVowelAccent(str)

[WARNING] Try to use a single 'var' statement per scope.
(str){var s=str; ---> var  <--- rExps=[/[\xC0-\xC4]/g,/[\xE0-\xE4]/g,/[\xC8-\xCA]/g,/[\xE8-\xEB]/g

[WARNING] Try to use a single 'var' statement per scope.
/[\xC7]/g,/[\xE7]/g,/[\xD9-\xDC]/g,/[\xF9-\xFC]/g]; ---> var  <--- repChar=["A","a","E","e"

[WARNING] Try to use a single 'var' statement per scope.
"c","U","u"];for( ---> var  <--- i=0;i<rExps.length;

[WARNING] Try to use a single 'var' statement per scope.
){var f=document.fAddCenter; ---> var  <--- fname=stripVowelAccent(f.firstname.value)

[WARNING] Try to use a single 'var' statement per scope.
stripVowelAccent(f.firstname.value); ---> var  <--- lname=stripVowelAccent(f.lastname.value)

[WARNING] Try to use a single 'var' statement per scope.
service_current=result.split(","); ---> var  <--- lengthService=service_current.length;var sid;var 

[WARNING] Try to use a single 'var' statement per scope.
);var lengthService=service_current.length; ---> var  <--- sid;var arr_temp=new Array();

[WARNING] Try to use a single 'var' statement per scope.
lengthService=service_current.length;var sid; ---> var  <--- arr_temp=new Array();var d=

[WARNING] Try to use a single 'var' statement per scope.
;var arr_temp=new Array(); ---> var  <--- d=document.getElementById("service_other_list_add");var 

[WARNING] Try to use a single 'var' statement per scope.
d=document.getElementById("service_other_list_add"); ---> var  <--- e=document.getElementById("service_accessible_list");var 

[WARNING] Try to use a single 'var' statement per scope.
e=document.getElementById("service_accessible_list"); ---> var  <--- htmlServiceAccessible;var htmlSpeedLevelHistory;var k=0;

[WARNING] Try to use a single 'var' statement per scope.
.getElementById("service_accessible_list");var htmlServiceAccessible; ---> var  <--- htmlSpeedLevelHistory;var k=0;for(i

[WARNING] Try to use a single 'var' statement per scope.
"service_accessible_list");var htmlServiceAccessible;var htmlSpeedLevelHistory; ---> var  <--- k=0;for(i=0;

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
{str="$('formSearch').onsubmit=function onsubmit(event){"+targetFunction+"();return false;};"; ---> eval <--- (str);}else{intvalSearchForm=setTimeout

[WARNING] Try to use a single 'var' statement per scope.
);var f=document.formSearchCenter; ---> var  <--- msg="";if(f){if

[WARNING] Try to use a single 'var' statement per scope.
){var obj="detail_"+service; ---> var  <--- obj_cmd="cmd_"+service;var d=document

[WARNING] Try to use a single 'var' statement per scope.
service;var obj_cmd="cmd_"+service; ---> var  <--- d=document.getElementById(obj_cmd);d

[WARNING] Try to use a single 'var' statement per scope.
:user}),displayList_callback);} ---> var  <--- displayList_callback=functiondisplayList_callback(result){};

[WARNING] The function displayList_callback has already been declared in the same scope...
,displayList_callback);}var displayList_callback=function ---> displayList_callback <--- (result){};var displayAccountList_callback=function

[WARNING] Try to use a single 'var' statement per scope.
=functiondisplayList_callback(result){}; ---> var  <--- displayAccountList_callback=functiondisplayAccountList_callback(){if(!

[WARNING] The function displayAccountList_callback has already been declared in the same scope...
result){};var displayAccountList_callback=function ---> displayAccountList_callback <--- (){if(!$j("#message")

[WARNING] Try to use a single 'var' statement per scope.
d=document.getElementById("service_other_list_add"); ---> var  <--- e=document.getElementById("service_accessible_list");var 

[WARNING] Try to use a single 'var' statement per scope.
e=document.getElementById("service_accessible_list"); ---> var  <--- obj_html=document.getElementById(sid+"_other")

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById(sid+"_other"); ---> var  <--- obj_html_accessible=document.getElementById(sid+"_access")

[WARNING] Try to use a single 'var' statement per scope.
d=document.getElementById("service_role_list_add"); ---> var  <--- listservice=document.fAddCenter.service_role;var listrole

[WARNING] Try to use a single 'var' statement per scope.
var listservice=document.fAddCenter.service_role; ---> var  <--- listrole=document.fAddCenter.subrole;var sid

[WARNING] Try to use a single 'var' statement per scope.
var listrole=document.fAddCenter.subrole; ---> var  <--- sid=listservice.options[listservice.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
options[listservice.selectedIndex].value; ---> var  <--- sname=listservice.options[listservice.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
options[listservice.selectedIndex].text; ---> var  <--- rid=listrole.options[listrole.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
options[listrole.selectedIndex].value; ---> var  <--- rname=listrole.options[listrole.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
options[listrole.selectedIndex].text; ---> var  <--- msg="";if(sid==-1

[WARNING] Try to use a single 'var' statement per scope.
d=document.getElementById("service_role_list_add"); ---> var  <--- obj_html=document.getElementById(sid+"_"+

[WARNING] Try to use a single 'var' statement per scope.
d=document.getElementById("center_list_add"); ---> var  <--- obj_html=document.getElementById(id);arrayCenter

[WARNING] Try to use a single 'var' statement per scope.
}var list=$(listName); ---> var  <--- id=list.options[list.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
}if(saveCenter(id)){ ---> var  <--- val=list.options[list.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
options[list.selectedIndex].text; ---> var  <--- obj_html=$("center_list_add");var newCenter=

[WARNING] Try to use a single 'var' statement per scope.
;var obj_html=$("center_list_add"); ---> var  <--- newCenter=document.createElement("div");var 

[WARNING] Try to use a single 'var' statement per scope.
newCenter=document.createElement("div"); ---> var  <--- content='<div class="list_center" id="'+id+'"><div class="ls p30" id="'+id+

[WARNING] Try to use a single 'var' statement per scope.
){var f=document.fAddCenter; ---> var  <--- msg=new Array();if((

[WARNING] Try to use a single 'var' statement per scope.
option.value);});} ---> var  <--- arrServiceCategory=new Array(0);if(

[WARNING] Try to use a single 'var' statement per scope.
option.value);});} ---> var  <--- arrServiceCategory=new Array(0);if(

[WARNING] Try to use a single 'var' statement per scope.
",")}),editAccount_callback);} ---> var  <--- editAccount_callback=function(result){if(result

[WARNING] Try to use a single 'var' statement per scope.
);var f=document.formSearch; ---> var  <--- msg="";if(f){if

[WARNING] Try to use a single 'var' statement per scope.
login}),fDeleteAccount_callback);}} ---> var  <--- fDeleteAccount_callback=functionfDeleteAccount_callback(){performSearching()

[WARNING] The function fDeleteAccount_callback has already been declared in the same scope...
fDeleteAccount_callback);}}var fDeleteAccount_callback=function ---> fDeleteAccount_callback <--- (){performSearching();displayHistoryList()

[WARNING] Try to use a single 'var' statement per scope.
var ml=document.forms.fDelete; ---> var  <--- len=ml.elements.length;var ret

[WARNING] Try to use a single 'var' statement per scope.
var len=ml.elements.length; ---> var  <--- ret="";for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
length;var ret="";for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- e=ml.elements[i];var 

[WARNING] Try to use a single 'var' statement per scope.
e=ml.elements[i]; ---> var  <--- gtri=e.name.split("_")

[WARNING] Try to use a single 'var' statement per scope.
display=display;}});} ---> var  <--- post_log_list_order="DESC";var post_log_list_orderby="DATE_ACTION";function

[WARNING] Try to use a single 'var' statement per scope.
});}var post_log_list_order="DESC"; ---> var  <--- post_log_list_orderby="DATE_ACTION";functioncs_displayLogList_sort(sortby,sort

[WARNING] Try to use a single 'var' statement per scope.
var len=arraysource.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
d=document.getElementById("service_accessible_list"); ---> var  <--- listservice=document.fAddCenter.serviceother;if(

[WARNING] Try to use a single 'var' statement per scope.
s_id,ifocus);returnres;} ---> var  <--- listLoading=new Array();functionchangeDefaultCenter(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;}if(allListhasLoaded==true){ ---> eval <--- (callback_function);}}functioncallBack_changeDefaultCenter(id_center

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
+'("'+callback_function+'");';try{ ---> eval <--- (expandFunction);}catch(err){

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
="expand_"+child_div+"();";try{ ---> eval <--- (expandFunction);}catch(err){

[WARNING] Try to use a single 'var' statement per scope.
{var htmlServiceList=$("service_objtype_list"); ---> var  <--- htmlServiceObjCate=$("service_objcate_list");arrayServiceMod.push

[WARNING] Try to use a single 'var' statement per scope.
+del_label+'" align="absmiddle" style="cursor:pointer" onclick="removeCate(\''+id_service+"');\"></span></div></div>"; ---> var  <--- maxServiceOption=$("serviceObjType").options.length

[WARNING] Try to use a single 'var' statement per scope.
options[serviceList.selectedIndex].value; ---> var  <--- cateName=serviceList.options[serviceList.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
options[serviceList.selectedIndex].value; ---> var  <--- cateName=serviceList.options[serviceList.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
var tmpService=new Array(0); ---> var  <--- arrAvailableModServices=available_services.split(",");for

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(){listLoading.pop(); ---> eval <--- (callback_function);});}}function

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(){listLoading.pop(); ---> eval <--- (callback_function);});}}function

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(){listLoading.pop(); ---> eval <--- (callback_function);});}}function

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(){listLoading.pop(); ---> eval <--- (callback_function);});}}function

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(){listLoading.pop(); ---> eval <--- (callback_function);});}}function

[WARNING] The symbol k is declared but is apparently never used.
This code can probably be written in a more compact way.
);var htmlServiceAccessible;var htmlSpeedLevelHistory;var  ---> k <--- =0;for(i=0;i

[WARNING] The symbol $j is declared but is apparently never used.
This code can probably be written in a more compact way.
=functiondisplayAccountList_callback(){if(! ---> $j <--- ("#message").is(":visible")){

[WARNING] The symbol listservice is declared but is apparently never used.
This code can probably be written in a more compact way.
=document.getElementById("service_accessible_list");var  ---> listservice <--- =document.fAddCenter.serviceother;if(sid


-------------------------------------- Minify E:/www/2.7/public/js/admin_announcement.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var AJX_list; ---> var  <--- AJX_log;var AJX_create;var frmSearch;var frm_log

[WARNING] Try to use a single 'var' statement per scope.
var AJX_list;var AJX_log; ---> var  <--- AJX_create;var frmSearch;var frm_log=null;

[WARNING] Try to use a single 'var' statement per scope.
var AJX_list;var AJX_log;var AJX_create; ---> var  <--- frmSearch;var frm_log=null;var edit_check=

[WARNING] Try to use a single 'var' statement per scope.
var AJX_log;var AJX_create;var frmSearch; ---> var  <--- frm_log=null;var edit_check=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frmSearch;var frm_log=null; ---> var  <--- edit_check=0;var pageMainList=0;var 

[WARNING] Try to use a single 'var' statement per scope.
frm_log=null;var edit_check=0; ---> var  <--- pageMainList=0;var logPage=0;Event

[WARNING] Try to use a single 'var' statement per scope.
edit_check=0;var pageMainList=0; ---> var  <--- logPage=0;Event.observe(window,

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
add_right||log_right){displayHistoryList(); ---> eval <--- (startup_functions);}else{showMessage(no_right_to_access

[WARNING] The symbol l is declared but is apparently never used.
This code can probably be written in a more compact way.
);visibleDiv("divPointerSpeed","none"); ---> l <--- ;}}functiondisplayHistoryList(){if(


-------------------------------------- Minify E:/www/2.7/public/js/admin_center.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var listCriteria=null; ---> var  <--- listPage=0;var pageLog=0;var 

[WARNING] Try to use a single 'var' statement per scope.
listCriteria=null;var listPage=0; ---> var  <--- pageLog=0;var defaultCenterForm="";var 

[WARNING] Try to use a single 'var' statement per scope.
listPage=0;var pageLog=0; ---> var  <--- defaultCenterForm="";var post_log_list_order="DESC";var 

[WARNING] Try to use a single 'var' statement per scope.
pageLog=0;var defaultCenterForm=""; ---> var  <--- post_log_list_order="DESC";var post_log_list_orderby="DATE_ACTION";var 

[WARNING] Try to use a single 'var' statement per scope.
defaultCenterForm="";var post_log_list_order="DESC"; ---> var  <--- post_log_list_orderby="DATE_ACTION";var AJX_log_list;var AJX_center_list;

[WARNING] Try to use a single 'var' statement per scope.
post_log_list_order="DESC";var post_log_list_orderby="DATE_ACTION"; ---> var  <--- AJX_log_list;var AJX_center_list;var frm_center_list;var frm_center_log

[WARNING] Try to use a single 'var' statement per scope.
;var post_log_list_orderby="DATE_ACTION";var AJX_log_list; ---> var  <--- AJX_center_list;var frm_center_list;var frm_center_log=null;

[WARNING] Try to use a single 'var' statement per scope.
="DATE_ACTION";var AJX_log_list;var AJX_center_list; ---> var  <--- frm_center_list;var frm_center_log=null;var ajax_flag=

[WARNING] Try to use a single 'var' statement per scope.
var AJX_log_list;var AJX_center_list;var frm_center_list; ---> var  <--- frm_center_log=null;var ajax_flag=new Array(

[WARNING] Try to use a single 'var' statement per scope.
;var frm_center_list;var frm_center_log=null; ---> var  <--- ajax_flag=new Array();var number_of_ajaxcall=

[WARNING] Try to use a single 'var' statement per scope.
;var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;functionabortAjaxCalls(){try

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
switchSearchPanel("searchPanel");displayHistoryList(); ---> eval <--- (startup_functions);}Event.observe(window

[WARNING] Try to use a single 'var' statement per scope.
id:"historyPanel"}));}} ---> var  <--- displayList_callback=functiondisplayList_callback(result){xoad.

[WARNING] The function displayList_callback has already been declared in the same scope...
));}}var displayList_callback=function ---> displayList_callback <--- (result){xoad.html.importForm(

[WARNING] Try to use a single 'var' statement per scope.
(dtStr){var dtCh="/"; ---> var  <--- pos1=dtStr.indexOf(dtCh);var 

[WARNING] Try to use a single 'var' statement per scope.
pos1=dtStr.indexOf(dtCh); ---> var  <--- pos2=dtStr.indexOf(dtCh,pos1+

[WARNING] Try to use a single 'var' statement per scope.
indexOf(dtCh,pos1+1); ---> var  <--- strDay=dtStr.substring(0,pos1)

[WARNING] Try to use a single 'var' statement per scope.
dtStr.substring(0,pos1); ---> var  <--- strMonth=dtStr.substring(pos1+1,

[WARNING] Try to use a single 'var' statement per scope.
substring(pos1+1,pos2); ---> var  <--- strYear=dtStr.substring(pos2+1)

[WARNING] Try to use a single 'var' statement per scope.
+"/"+strYear;returnstr;} ---> var  <--- serviceRemoveable;functioncheckRemoveOk(source){if(


-------------------------------------- Minify E:/www/2.7/public/js/admin_modtag.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var AJX_list; ---> var  <--- AJX_log;var AJX_create;var frmSearch;var frmCategorySearch

[WARNING] Try to use a single 'var' statement per scope.
var AJX_list;var AJX_log; ---> var  <--- AJX_create;var frmSearch;var frmCategorySearch;var frm_log

[WARNING] Try to use a single 'var' statement per scope.
var AJX_list;var AJX_log;var AJX_create; ---> var  <--- frmSearch;var frmCategorySearch;var frm_log=null;

[WARNING] Try to use a single 'var' statement per scope.
var AJX_log;var AJX_create;var frmSearch; ---> var  <--- frmCategorySearch;var frm_log=null;var edit_check=

[WARNING] Try to use a single 'var' statement per scope.
var AJX_create;var frmSearch;var frmCategorySearch; ---> var  <--- frm_log=null;var edit_check=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frmCategorySearch;var frm_log=null; ---> var  <--- edit_check=0;var pageModTagList=0;var 

[WARNING] Try to use a single 'var' statement per scope.
frm_log=null;var edit_check=0; ---> var  <--- pageModTagList=0;var pageModCategoryList=0;var 

[WARNING] Try to use a single 'var' statement per scope.
edit_check=0;var pageModTagList=0; ---> var  <--- pageModCategoryList=0;var logPage=0;Event

[WARNING] Try to use a single 'var' statement per scope.
pageModTagList=0;var pageModCategoryList=0; ---> var  <--- logPage=0;Event.observe(window,

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
switchSearchPanel("divSearchModTag");displayHistoryList(); ---> eval <--- (startup_functions);}functiondisplayHistoryList(){


-------------------------------------- Minify E:/www/2.7/public/js/admin_right.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var frm_role_list;var frm_right_list;

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- frm_role_list;var frm_right_list;var frm_log=null;

[WARNING] Try to use a single 'var' statement per scope.
;var number_of_ajaxcall=0;var frm_role_list; ---> var  <--- frm_right_list;var frm_log=null;var pageListRight=

[WARNING] Try to use a single 'var' statement per scope.
=0;var frm_role_list;var frm_right_list; ---> var  <--- frm_log=null;var pageListRight=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frm_right_list;var frm_log=null; ---> var  <--- pageListRight=0;var pageListRole=0;var 

[WARNING] Try to use a single 'var' statement per scope.
frm_log=null;var pageListRight=0; ---> var  <--- pageListRole=0;var pageLog=0;var 

[WARNING] Try to use a single 'var' statement per scope.
pageListRight=0;var pageListRole=0; ---> var  <--- pageLog=0;var edit_check=0;var 

[WARNING] Try to use a single 'var' statement per scope.
pageListRole=0;var pageLog=0; ---> var  <--- edit_check=0;var formCreateRoleData="";var 

[WARNING] Try to use a single 'var' statement per scope.
pageLog=0;var edit_check=0; ---> var  <--- formCreateRoleData="";var role_sort_field,role_sort_type,right_sort_field

[WARNING] Try to use a single 'var' statement per scope.
edit_check=0;var formCreateRoleData=""; ---> var  <--- role_sort_field,role_sort_type,right_sort_field,right_sort_type;functionabortAjaxCalls

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
){displayLogList();}}} ---> eval <--- (_startup_functions);}functionsearchingRightRole(){

[WARNING] Try to use a single 'var' statement per scope.
deleteAjax_callback);}}returnfalse;} ---> var  <--- deleteAjax_callback=functiondeleteAjax_callback(result){if(

[WARNING] The function deleteAjax_callback has already been declared in the same scope...
}returnfalse;}var deleteAjax_callback=function ---> deleteAjax_callback <--- (result){if(result){showMessage

[WARNING] Try to use a single 'var' statement per scope.
:post_log_list_order});returnfalse;} ---> var  <--- post_log_list_order="DESC";var post_log_list_orderby="DATE_ACTION";function

[WARNING] Try to use a single 'var' statement per scope.
returnfalse;}var post_log_list_order="DESC"; ---> var  <--- post_log_list_orderby="DATE_ACTION";functioncs_displayLogList_sort(sortby,sort

[WARNING] Try to use a single 'var' statement per scope.
);}switchPanelNote("role");} ---> var  <--- modifyRight_callback=functionmodifyRight_callback(result){importForm(

[WARNING] The function modifyRight_callback has already been declared in the same scope...
("role");}var modifyRight_callback=function ---> modifyRight_callback <--- (result){importForm(result[0]

[WARNING] Try to use a single 'var' statement per scope.
functions:arrFunction},insertRightCallBack);} ---> var  <--- insertRightCallBack=functioninsertRightCallBack(result){switchPanel(

[WARNING] The function insertRightCallBack has already been declared in the same scope...
,insertRightCallBack);}var insertRightCallBack=function ---> insertRightCallBack <--- (result){switchPanel("divRightList");changeNavigation

[WARNING] Try to use a single 'var' statement per scope.
{errMessage.push(_message_insert_hierarchy_level_error);} ---> var  <--- sessionValue=$j("#txtSsLength").val()

[WARNING] Try to use a single 'var' statement per scope.
functions:arrFunction},editRightRole_callback);} ---> var  <--- editRightRole_callback=functioneditRightRole_callback(result){if(

[WARNING] The function editRightRole_callback has already been declared in the same scope...
,editRightRole_callback);}var editRightRole_callback=function ---> editRightRole_callback <--- (result){if(result==true&&

[WARNING] Try to use a single 'var' statement per scope.
<a_link.length;i++){ ---> var  <--- a_id=a_link[i].id;var 

[WARNING] Try to use a single 'var' statement per scope.
a_id=a_link[i].id; ---> var  <--- arr_link=a_id.split("k");var 

[WARNING] Try to use a single 'var' statement per scope.
arr_link=a_id.split("k"); ---> var  <--- toolbox_name="toolbox_"+arr_link[1];if

[WARNING] Try to use a single 'var' statement per scope.
.style.display="none";}} ---> var  <--- e_role="";var e_right="";var 

[WARNING] Try to use a single 'var' statement per scope.
"none";}}var e_role=""; ---> var  <--- e_right="";var post_right_desc="";function

[WARNING] Try to use a single 'var' statement per scope.
e_role="";var e_right=""; ---> var  <--- post_right_desc="";functionsearchRightFunction(){frm_right_list

[WARNING] Try to use a single 'var' statement per scope.
else{showMessage(_message_insert_desc_error);}} ---> var  <--- updateRightFunction_callback=functionupdateRightFunction_callback(result){displayHistoryList(

[WARNING] The function updateRightFunction_callback has already been declared in the same scope...
_message_insert_desc_error);}}var updateRightFunction_callback=function ---> updateRightFunction_callback <--- (result){displayHistoryList();};


-------------------------------------- Minify E:/www/2.7/public/js/admin_script.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var post_log_list_order="DESC"; ---> var  <--- post_log_list_orderby="DATE_ACTION";var searchLogFormData=null;var 

[WARNING] Try to use a single 'var' statement per scope.
post_log_list_order="DESC";var post_log_list_orderby="DATE_ACTION"; ---> var  <--- searchLogFormData=null;var edit_check=0;var 

[WARNING] Try to use a single 'var' statement per scope.
post_log_list_orderby="DATE_ACTION";var searchLogFormData=null; ---> var  <--- edit_check=0;var AJX_log_list;var page_log=

[WARNING] Try to use a single 'var' statement per scope.
searchLogFormData=null;var edit_check=0; ---> var  <--- AJX_log_list;var page_log=0;functionloadAJAX(

[WARNING] Try to use a single 'var' statement per scope.
;var edit_check=0;var AJX_log_list; ---> var  <--- page_log=0;functionloadAJAX(){StartClock

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
showMessage(noaccess_view);returnfalse;} ---> eval <--- (startup_scripts);}functiondisplayHistoryList(){

[WARNING] Try to use a single 'var' statement per scope.
(func,scriptNeedIdService)>=0){ ---> var  <--- id_service=$j("#cboService_"+func).val


-------------------------------------- Minify E:/www/2.7/public/js/admin_service.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var listCriteria=null; ---> var  <--- default_tz="";var sort_by="DESC";var 

[WARNING] Try to use a single 'var' statement per scope.
listCriteria=null;var default_tz=""; ---> var  <--- sort_by="DESC";var order_by="DATE_ACTION";var 

[WARNING] Try to use a single 'var' statement per scope.
default_tz="";var sort_by="DESC"; ---> var  <--- order_by="DATE_ACTION";var ajax_flag=new Array(

[WARNING] Try to use a single 'var' statement per scope.
sort_by="DESC";var order_by="DATE_ACTION"; ---> var  <--- ajax_flag=new Array();var number_of_ajaxcall=

[WARNING] Try to use a single 'var' statement per scope.
;var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var frm_service_list;var frm_service_log=

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- frm_service_list;var frm_service_log=null;var pageService=

[WARNING] Try to use a single 'var' statement per scope.
;var number_of_ajaxcall=0;var frm_service_list; ---> var  <--- frm_service_log=null;var pageService=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frm_service_list;var frm_service_log=null; ---> var  <--- pageService=0;var pageLog=0;function

[WARNING] Try to use a single 'var' statement per scope.
frm_service_log=null;var pageService=0; ---> var  <--- pageLog=0;functionloadAJAX(){StartClock

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
);if(startup_functions!=""){ ---> eval <--- (startup_functions);}if(right_log){

[WARNING] Try to use a single 'var' statement per scope.
$("txt_service").value);} ---> var  <--- txt_ct="";if(trimAll($(

[WARNING] Try to use a single 'var' statement per scope.
$("txt_center").value);} ---> var  <--- sl_ct="";if($("sl_country_panel")

[WARNING] Try to use a single 'var' statement per scope.
"sl_country_panel").selectedIndex].value;} ---> var  <--- sl_tz="";if($("sl_timezone_search")

[WARNING] Try to use a single 'var' statement per scope.
"sl_timezone_search").selectedIndex].value;} ---> var  <--- sl_st="";if($("sl_status")

[WARNING] Try to use a single 'var' statement per scope.
}));}returnfalse;} ---> var  <--- displayList_callback=functiondisplayList_callback(result){};

[WARNING] The function displayList_callback has already been declared in the same scope...
}returnfalse;}var displayList_callback=function ---> displayList_callback <--- (result){};functiondisplaySearchPanel()

[WARNING] Try to use a single 'var' statement per scope.
$("txt_service").value);} ---> var  <--- txt_ct="";if(trimAll($(

[WARNING] Try to use a single 'var' statement per scope.
$("txt_center").value);} ---> var  <--- sl_ct="";if($("sl_country_panel")

[WARNING] Try to use a single 'var' statement per scope.
"sl_country_panel").selectedIndex].value;} ---> var  <--- sl_tz="";if($("sl_timezone_search")

[WARNING] Try to use a single 'var' statement per scope.
"sl_timezone_search").selectedIndex].value;} ---> var  <--- sl_st="";if($("sl_status")

[WARNING] Try to use a single 'var' statement per scope.
(id_service){var tz=0; ---> var  <--- is_cron_active=0;var widget_x=0;var 

[WARNING] Try to use a single 'var' statement per scope.
tz=0;var is_cron_active=0; ---> var  <--- widget_x=0;var widget_y=0;var 

[WARNING] Try to use a single 'var' statement per scope.
is_cron_active=0;var widget_x=0; ---> var  <--- widget_y=0;var widget_z=0;var 

[WARNING] Try to use a single 'var' statement per scope.
widget_x=0;var widget_y=0; ---> var  <--- widget_z=0;var anim_lock=0;var 

[WARNING] Try to use a single 'var' statement per scope.
widget_y=0;var widget_z=0; ---> var  <--- anim_lock=0;var is_mod_cron_active=0;var 

[WARNING] Try to use a single 'var' statement per scope.
widget_z=0;var anim_lock=0; ---> var  <--- is_mod_cron_active=0;var callback_url="";var 

[WARNING] Try to use a single 'var' statement per scope.
anim_lock=0;var is_mod_cron_active=0; ---> var  <--- callback_url="";var status="";var 

[WARNING] Try to use a single 'var' statement per scope.
is_mod_cron_active=0;var callback_url=""; ---> var  <--- status="";var min_mt="";var 

[WARNING] Try to use a single 'var' statement per scope.
callback_url="";var status=""; ---> var  <--- min_mt="";var max_mt="";var 

[WARNING] Try to use a single 'var' statement per scope.
status="";var min_mt=""; ---> var  <--- max_mt="";var mess_id="";var 

[WARNING] Try to use a single 'var' statement per scope.
min_mt="";var max_mt=""; ---> var  <--- mess_id="";var tyle_lb="";var 

[WARNING] Try to use a single 'var' statement per scope.
max_mt="";var mess_id=""; ---> var  <--- tyle_lb="";var photo_small_size=null;var 

[WARNING] Try to use a single 'var' statement per scope.
mess_id="";var tyle_lb=""; ---> var  <--- photo_small_size=null;var photo_large_size=null;var 

[WARNING] Try to use a single 'var' statement per scope.
tyle_lb="";var photo_small_size=null; ---> var  <--- photo_large_size=null;var photo_url=null;var 

[WARNING] Try to use a single 'var' statement per scope.
photo_small_size=null;var photo_large_size=null; ---> var  <--- photo_url=null;var photo_secret_key=null;var 

[WARNING] Try to use a single 'var' statement per scope.
photo_large_size=null;var photo_url=null; ---> var  <--- photo_secret_key=null;var premium_mt="";var 

[WARNING] Try to use a single 'var' statement per scope.
photo_url=null;var photo_secret_key=null; ---> var  <--- premium_mt="";var local_start="";var 

[WARNING] Try to use a single 'var' statement per scope.
photo_secret_key=null;var premium_mt=""; ---> var  <--- local_start="";var local_start_regular=/^[0-9]{1,2}$/;var 

[WARNING] Try to use a single 'var' statement per scope.
premium_mt="";var local_start=""; ---> var  <--- local_start_regular=/^[0-9]{1,2}$/;var vp_lifespan="";var 

[WARNING] Try to use a single 'var' statement per scope.
local_start="";var local_start_regular=/^[0-9]{1,2}$/; ---> var  <--- vp_lifespan="";var vp_eol="";var 

[WARNING] Try to use a single 'var' statement per scope.
local_start_regular=/^[0-9]{1,2}$/;var vp_lifespan=""; ---> var  <--- vp_eol="";var vp_mngt="";if

[WARNING] Try to use a single 'var' statement per scope.
vp_lifespan="";var vp_eol=""; ---> var  <--- vp_mngt="";if($("is_photo")

[WARNING] Try to use a single 'var' statement per scope.
}}}}}}}}} ---> var  <--- updateService_callback=functionupdateService_callback(result){if(

[WARNING] The function updateService_callback has already been declared in the same scope...
}}}}}var updateService_callback=function ---> updateService_callback <--- (result){if(result=="NO_CHAMGE")

[WARNING] Try to use a single 'var' statement per scope.
saveService(){var tz=0; ---> var  <--- country=0;var is_cron_active=0;var 

[WARNING] Try to use a single 'var' statement per scope.
tz=0;var country=0; ---> var  <--- is_cron_active=0;var widget_x=0;var 

[WARNING] Try to use a single 'var' statement per scope.
country=0;var is_cron_active=0; ---> var  <--- widget_x=0;var widget_y=0;var 

[WARNING] Try to use a single 'var' statement per scope.
is_cron_active=0;var widget_x=0; ---> var  <--- widget_y=0;var widget_z=0;var 

[WARNING] Try to use a single 'var' statement per scope.
widget_x=0;var widget_y=0; ---> var  <--- widget_z=0;var anim_lock=0;var 

[WARNING] Try to use a single 'var' statement per scope.
widget_y=0;var widget_z=0; ---> var  <--- anim_lock=0;var is_mod_cron_active=0;var 

[WARNING] Try to use a single 'var' statement per scope.
widget_z=0;var anim_lock=0; ---> var  <--- is_mod_cron_active=0;var callback_url="";var 

[WARNING] Try to use a single 'var' statement per scope.
anim_lock=0;var is_mod_cron_active=0; ---> var  <--- callback_url="";var status="";var 

[WARNING] Try to use a single 'var' statement per scope.
is_mod_cron_active=0;var callback_url=""; ---> var  <--- status="";var min_mt="";var 

[WARNING] Try to use a single 'var' statement per scope.
callback_url="";var status=""; ---> var  <--- min_mt="";var max_mt="";var 

[WARNING] Try to use a single 'var' statement per scope.
status="";var min_mt=""; ---> var  <--- max_mt="";var mess_id="";var 

[WARNING] Try to use a single 'var' statement per scope.
min_mt="";var max_mt=""; ---> var  <--- mess_id="";var tyle_lb="";var 

[WARNING] Try to use a single 'var' statement per scope.
max_mt="";var mess_id=""; ---> var  <--- tyle_lb="";var photo_small_size=null;var 

[WARNING] Try to use a single 'var' statement per scope.
mess_id="";var tyle_lb=""; ---> var  <--- photo_small_size=null;var photo_large_size=null;var 

[WARNING] Try to use a single 'var' statement per scope.
tyle_lb="";var photo_small_size=null; ---> var  <--- photo_large_size=null;var photo_url=null;var 

[WARNING] Try to use a single 'var' statement per scope.
photo_small_size=null;var photo_large_size=null; ---> var  <--- photo_url=null;var photo_secret_key=null;var 

[WARNING] Try to use a single 'var' statement per scope.
photo_large_size=null;var photo_url=null; ---> var  <--- photo_secret_key=null;var premium_mt="";var 

[WARNING] Try to use a single 'var' statement per scope.
photo_url=null;var photo_secret_key=null; ---> var  <--- premium_mt="";var local_start="";var 

[WARNING] Try to use a single 'var' statement per scope.
photo_secret_key=null;var premium_mt=""; ---> var  <--- local_start="";var local_start_regular=/^[0-9]{1,2}$/;if

[WARNING] Try to use a single 'var' statement per scope.
premium_mt="";var local_start=""; ---> var  <--- local_start_regular=/^[0-9]{1,2}$/;if($("is_photo")

[WARNING] Try to use a single 'var' statement per scope.
}}}}}}}}} ---> var  <--- saveService_callback=functionsaveService_callback(result){visibleDiv(

[WARNING] The function saveService_callback has already been declared in the same scope...
}}}}}var saveService_callback=function ---> saveService_callback <--- (result){visibleDiv("message","none")

[WARNING] Try to use a single 'var' statement per scope.
id_service}),removeService_callback);}} ---> var  <--- removeService_callback=functionremoveService_callback(result){if(

[WARNING] The function removeService_callback has already been declared in the same scope...
removeService_callback);}}var removeService_callback=function ---> removeService_callback <--- (result){if(result!=true)

[WARNING] Try to use a single 'var' statement per scope.
objNavi.innerHTML=" -> "+header_text;} ---> var  <--- serviceCategoryPage=1;var serviceCategoryOrderByColumn="NAME";var 

[WARNING] Try to use a single 'var' statement per scope.
+header_text;}var serviceCategoryPage=1; ---> var  <--- serviceCategoryOrderByColumn="NAME";var serviceCategoryOrderByDirection="ASC";var 

[WARNING] Try to use a single 'var' statement per scope.
serviceCategoryPage=1;var serviceCategoryOrderByColumn="NAME"; ---> var  <--- serviceCategoryOrderByDirection="ASC";var frm_service_category_list=null;var 

[WARNING] Try to use a single 'var' statement per scope.
serviceCategoryOrderByColumn="NAME";var serviceCategoryOrderByDirection="ASC"; ---> var  <--- frm_service_category_list=null;var formServiceCategory=null;function

[WARNING] Try to use a single 'var' statement per scope.
serviceCategoryOrderByDirection="ASC";var frm_service_category_list=null; ---> var  <--- formServiceCategory=null;functiondisplayServiceCategoryList(){list_service_category

[WARNING] Try to use a single 'var' statement per scope.
selectedService=document.getElementById("serviceCategory_selectedServices"); ---> var  <--- selectedServiceLength=selectedService.options.length;if(

[WARNING] Try to use a single 'var' statement per scope.
){var fakeName="category_"+idCategory; ---> var  <--- form={};form[fakeName]=

[WARNING] Try to use a single 'var' statement per scope.
selectedService=document.getElementById("serviceCategory_selectedServices"); ---> var  <--- selectedServiceLength=selectedService.options.length;if(

[WARNING] The symbol local_start_regular is declared but is apparently never used.
This code can probably be written in a more compact way.
="";var local_start="";var  ---> local_start_regular <--- =/^[0-9]{1,2}$/;var vp_lifespan="";var vp_eol

[WARNING] The symbol local_start_regular is declared but is apparently never used.
This code can probably be written in a more compact way.
="";var local_start="";var  ---> local_start_regular <--- =/^[0-9]{1,2}$/;if($("is_photo")!=


-------------------------------------- Minify E:/www/2.7/public/js/admin_timezone.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var frm_timezone_log;var pageLog=

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- frm_timezone_log;var pageLog=0;var edit_check=

[WARNING] Try to use a single 'var' statement per scope.
;var number_of_ajaxcall=0;var frm_timezone_log; ---> var  <--- pageLog=0;var edit_check=0;function

[WARNING] Try to use a single 'var' statement per scope.
;var frm_timezone_log;var pageLog=0; ---> var  <--- edit_check=0;functionloadAJAX(){StartClock

[WARNING] Try to use a single 'var' statement per scope.
:"timezone_list_paging_range"},displayTimezone_callback);}} ---> var  <--- displayTimezone_callback=functiondisplayTimezone_callback(result){cbotimezone=

[WARNING] The function displayTimezone_callback has already been declared in the same scope...
displayTimezone_callback);}}var displayTimezone_callback=function ---> displayTimezone_callback <--- (result){cbotimezone=$("cbotimezone")

[WARNING] Try to use a single 'var' statement per scope.
("listcontain");var message_error_diff=_message_error_diff; ---> var  <--- message_error_diff_numeric=_message_error_diff_numeric;var message_error_timezone=_message_error_timezone;error_message

[WARNING] Try to use a single 'var' statement per scope.
message_error_diff=_message_error_diff;var message_error_diff_numeric=_message_error_diff_numeric; ---> var  <--- message_error_timezone=_message_error_timezone;error_message="";valuediff=

[WARNING] Try to use a single 'var' statement per scope.
visibleDiv("message","none");}} ---> var  <--- addTimezone_callback=functionaddTimezone_callback(result){};

[WARNING] The function addTimezone_callback has already been declared in the same scope...
"none");}}var addTimezone_callback=function ---> addTimezone_callback <--- (result){};functionremoveTimezone(id_timezone

[WARNING] Try to use a single 'var' statement per scope.
{sortTimezone("cbotimezone");}}} ---> var  <--- removeTimezone_callback=functionremoveTimezone_callback(result){};

[WARNING] The function removeTimezone_callback has already been declared in the same scope...
);}}}var removeTimezone_callback=function ---> removeTimezone_callback <--- (result){};functionsaveTimezone()

[WARNING] Try to use a single 'var' statement per scope.
=null;}var message_error_diff=_message_error_diff; ---> var  <--- message_error_diff_numeric=_message_error_diff_numeric;var error_message="";if

[WARNING] Try to use a single 'var' statement per scope.
message_error_diff=_message_error_diff;var message_error_diff_numeric=_message_error_diff_numeric; ---> var  <--- error_message="";if(time_diff=="")

[WARNING] Try to use a single 'var' statement per scope.
){time_diff=parseFloat(time_diff); ---> var  <--- timezone_item={timezone_id:timezone_id,time_diff:time_diff

[WARNING] Try to use a single 'var' statement per scope.
){time_diff=parseFloat(time_diff); ---> var  <--- timezone_item={timezone_id:timezone_id,time_diff:time_diff

[WARNING] The variable timezone_item has already been declared in the same scope...
{time_diff=parseFloat(time_diff);var  ---> timezone_item <--- ={timezone_id:timezone_id,time_diff:time_diff}

[WARNING] Try to use a single 'var' statement per scope.
}}if(is_exist==false){ ---> var  <--- timezone_item={timezone_id:_timezone_list[i][

[WARNING] The variable timezone_item has already been declared in the same scope...
}if(is_exist==false){var  ---> timezone_item <--- ={timezone_id:_timezone_list[i]["ID"

[WARNING] Try to use a single 'var' statement per scope.
:"")},saveTimezone_callback);} ---> var  <--- saveTimezone_callback=functionsaveTimezone_callback(result){if(

[WARNING] The function saveTimezone_callback has already been declared in the same scope...
,saveTimezone_callback);}var saveTimezone_callback=function ---> saveTimezone_callback <--- (result){if(result==true)

[WARNING] The symbol message_error_diff_numeric is declared but is apparently never used.
This code can probably be written in a more compact way.
"listcontain");var message_error_diff=_message_error_diff;var  ---> message_error_diff_numeric <--- =_message_error_diff_numeric;var message_error_timezone=_message_error_timezone;error_message=

[WARNING] The symbol message_error_diff_numeric is declared but is apparently never used.
This code can probably be written in a more compact way.
null;}var message_error_diff=_message_error_diff;var  ---> message_error_diff_numeric <--- =_message_error_diff_numeric;var error_message="";if(


-------------------------------------- Minify E:/www/2.7/public/js/admin_vp.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var serviceData={}; ---> var  <--- initSearch=false;var serviceReturn="0";var 

[WARNING] Try to use a single 'var' statement per scope.
={};var initSearch=false; ---> var  <--- serviceReturn="0";var nickNameReturn="";var 

[WARNING] Try to use a single 'var' statement per scope.
initSearch=false;var serviceReturn="0"; ---> var  <--- nickNameReturn="";var vpGroupIdReturn="";var 

[WARNING] Try to use a single 'var' statement per scope.
serviceReturn="0";var nickNameReturn=""; ---> var  <--- vpGroupIdReturn="";var serviceVpGroupReturn="0";var 

[WARNING] Try to use a single 'var' statement per scope.
nickNameReturn="";var vpGroupIdReturn=""; ---> var  <--- serviceVpGroupReturn="0";var initSearch_Group=false;var 

[WARNING] Try to use a single 'var' statement per scope.
vpGroupIdReturn="";var serviceVpGroupReturn="0"; ---> var  <--- initSearch_Group=false;var calledFromAddGroupAction=false;var 

[WARNING] Try to use a single 'var' statement per scope.
serviceVpGroupReturn="0";var initSearch_Group=false; ---> var  <--- calledFromAddGroupAction=false;var searchLogFormData=null;var 

[WARNING] Try to use a single 'var' statement per scope.
initSearch_Group=false;var calledFromAddGroupAction=false; ---> var  <--- searchLogFormData=null;var frm_vp_list;var frm_vp_list_;

[WARNING] Try to use a single 'var' statement per scope.
calledFromAddGroupAction=false;var searchLogFormData=null; ---> var  <--- frm_vp_list;var frm_vp_list_;var ajax_flag=new Array

[WARNING] Try to use a single 'var' statement per scope.
;var searchLogFormData=null;var frm_vp_list; ---> var  <--- frm_vp_list_;var ajax_flag=new Array();

[WARNING] Try to use a single 'var' statement per scope.
=null;var frm_vp_list;var frm_vp_list_; ---> var  <--- ajax_flag=new Array();var number_of_ajaxcall=

[WARNING] Try to use a single 'var' statement per scope.
;var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var check_modification=0;var 

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- check_modification=0;var VpGroupServiceArray=$H()

[WARNING] Try to use a single 'var' statement per scope.
number_of_ajaxcall=0;var check_modification=0; ---> var  <--- VpGroupServiceArray=$H();var ChatRoomServiceArray=$H

[WARNING] Try to use a single 'var' statement per scope.
0;var VpGroupServiceArray=$H(); ---> var  <--- ChatRoomServiceArray=$H();var CenterServiceArray=$H

[WARNING] Try to use a single 'var' statement per scope.
);var ChatRoomServiceArray=$H(); ---> var  <--- CenterServiceArray=$H();var Vp_Group_value=0

[WARNING] Try to use a single 'var' statement per scope.
);var CenterServiceArray=$H(); ---> var  <--- Vp_Group_value=0;var Center_value=0;var 

[WARNING] Try to use a single 'var' statement per scope.
$H();var Vp_Group_value=0; ---> var  <--- Center_value=0;var ChatRoom_value=0;var 

[WARNING] Try to use a single 'var' statement per scope.
Vp_Group_value=0;var Center_value=0; ---> var  <--- ChatRoom_value=0;var chatroomCbo="";var 

[WARNING] Try to use a single 'var' statement per scope.
Center_value=0;var ChatRoom_value=0; ---> var  <--- chatroomCbo="";var chatroomSelectedIndex=0;var 

[WARNING] Try to use a single 'var' statement per scope.
ChatRoom_value=0;var chatroomCbo=""; ---> var  <--- chatroomSelectedIndex=0;var centerCbo="";var 

[WARNING] Try to use a single 'var' statement per scope.
chatroomCbo="";var chatroomSelectedIndex=0; ---> var  <--- centerCbo="";var centerSelectedIndex=0;var 

[WARNING] Try to use a single 'var' statement per scope.
chatroomSelectedIndex=0;var centerCbo=""; ---> var  <--- centerSelectedIndex=0;var vpGroupCbo="";var 

[WARNING] Try to use a single 'var' statement per scope.
centerCbo="";var centerSelectedIndex=0; ---> var  <--- vpGroupCbo="";var vpgroupSelectedIndex=0;var 

[WARNING] Try to use a single 'var' statement per scope.
centerSelectedIndex=0;var vpGroupCbo=""; ---> var  <--- vpgroupSelectedIndex=0;var Vp_Group_value_=0;var 

[WARNING] Try to use a single 'var' statement per scope.
vpGroupCbo="";var vpgroupSelectedIndex=0; ---> var  <--- Vp_Group_value_=0;var Center_value_=0;var 

[WARNING] Try to use a single 'var' statement per scope.
vpgroupSelectedIndex=0;var Vp_Group_value_=0; ---> var  <--- Center_value_=0;var Vp_Group_cbo='<option value="0">[VP Group]</option>';var 

[WARNING] Try to use a single 'var' statement per scope.
Vp_Group_value_=0;var Center_value_=0; ---> var  <--- Vp_Group_cbo='<option value="0">[VP Group]</option>';var Center_cbo='<option value="0">[Center]</option>';var 

[WARNING] Try to use a single 'var' statement per scope.
Center_value_=0;var Vp_Group_cbo='<option value="0">[VP Group]</option>'; ---> var  <--- Center_cbo='<option value="0">[Center]</option>';var ChatRoom_cbo='<option value="0">[Chatroom]</option>';var 

[WARNING] Try to use a single 'var' statement per scope.
Vp_Group_cbo='<option value="0">[VP Group]</option>';var Center_cbo='<option value="0">[Center]</option>'; ---> var  <--- ChatRoom_cbo='<option value="0">[Chatroom]</option>';var Vp_Group_cbo_='<option value="0">[VP Group]</option>';var 

[WARNING] Try to use a single 'var' statement per scope.
Center_cbo='<option value="0">[Center]</option>';var ChatRoom_cbo='<option value="0">[Chatroom]</option>'; ---> var  <--- Vp_Group_cbo_='<option value="0">[VP Group]</option>';var Center_cbo_='<option value="0">[Center]</option>';var 

[WARNING] Try to use a single 'var' statement per scope.
ChatRoom_cbo='<option value="0">[Chatroom]</option>';var Vp_Group_cbo_='<option value="0">[VP Group]</option>'; ---> var  <--- Center_cbo_='<option value="0">[Center]</option>';var vpGroupListPage=0;var 

[WARNING] Try to use a single 'var' statement per scope.
Vp_Group_cbo_='<option value="0">[VP Group]</option>';var Center_cbo_='<option value="0">[Center]</option>'; ---> var  <--- vpGroupListPage=0;var vpListPage=0;var 

[WARNING] Try to use a single 'var' statement per scope.
Center_cbo_='<option value="0">[Center]</option>';var vpGroupListPage=0; ---> var  <--- vpListPage=0;var vpLogListPage=0;var 

[WARNING] Try to use a single 'var' statement per scope.
vpGroupListPage=0;var vpListPage=0; ---> var  <--- vpLogListPage=0;var column_sort_signal_c=1;var 

[WARNING] Try to use a single 'var' statement per scope.
vpListPage=0;var vpLogListPage=0; ---> var  <--- column_sort_signal_c=1;var type_sort_signal_c=0;var 

[WARNING] Try to use a single 'var' statement per scope.
vpLogListPage=0;var column_sort_signal_c=1; ---> var  <--- type_sort_signal_c=0;var column_sort_signal_b=1;var 

[WARNING] Try to use a single 'var' statement per scope.
column_sort_signal_c=1;var type_sort_signal_c=0; ---> var  <--- column_sort_signal_b=1;var type_sort_signal_b=0;var 

[WARNING] Try to use a single 'var' statement per scope.
type_sort_signal_c=0;var column_sort_signal_b=1; ---> var  <--- type_sort_signal_b=0;var linhcanh=0;var 

[WARNING] Try to use a single 'var' statement per scope.
column_sort_signal_b=1;var type_sort_signal_b=0; ---> var  <--- linhcanh=0;var cboVpGroupEditDefault="";var 

[WARNING] Try to use a single 'var' statement per scope.
type_sort_signal_b=0;var linhcanh=0; ---> var  <--- cboVpGroupEditDefault="";var cboVpGroupEditSelectedIndexDefault=0;var 

[WARNING] Try to use a single 'var' statement per scope.
linhcanh=0;var cboVpGroupEditDefault=""; ---> var  <--- cboVpGroupEditSelectedIndexDefault=0;var centerGroupEdit=0;var 

[WARNING] Try to use a single 'var' statement per scope.
cboVpGroupEditDefault="";var cboVpGroupEditSelectedIndexDefault=0; ---> var  <--- centerGroupEdit=0;var debug_str="";var 

[WARNING] Try to use a single 'var' statement per scope.
cboVpGroupEditSelectedIndexDefault=0;var centerGroupEdit=0; ---> var  <--- debug_str="";var post_log_list_order="DESC";var 

[WARNING] Try to use a single 'var' statement per scope.
centerGroupEdit=0;var debug_str=""; ---> var  <--- post_log_list_order="DESC";var post_log_list_orderby="DATE_ACTION";var 

[WARNING] Try to use a single 'var' statement per scope.
debug_str="";var post_log_list_order="DESC"; ---> var  <--- post_log_list_orderby="DATE_ACTION";var change_name=0;var 

[WARNING] Try to use a single 'var' statement per scope.
post_log_list_order="DESC";var post_log_list_orderby="DATE_ACTION"; ---> var  <--- change_name=0;var flagServiceIsTPA=false;var 

[WARNING] Try to use a single 'var' statement per scope.
post_log_list_orderby="DATE_ACTION";var change_name=0; ---> var  <--- flagServiceIsTPA=false;var TPAService=Array()

[WARNING] Try to use a single 'var' statement per scope.
change_name=0;var flagServiceIsTPA=false; ---> var  <--- TPAService=Array();var txtChatRoom;function

[WARNING] Try to use a single 'var' statement per scope.
false;var TPAService=Array(); ---> var  <--- txtChatRoom;functionabortAjaxCalls(){try{for

[WARNING] Try to use a single 'var' statement per scope.
"#"+obj_service).val(); ---> var  <--- data=idService==0?serviceData:{1

[WARNING] Try to use a single 'var' statement per scope.
,pos:pos});}} ---> var  <--- displayVpGroupList_callback=functiondisplayVpGroup_callback(result){visibleDiv(

[WARNING] Try to use a single 'var' statement per scope.
pos:pos},vpdetail_callback);} ---> var  <--- vpdetail_callback=functionvpdetail_callback(result){if(

[WARNING] The function vpdetail_callback has already been declared in the same scope...
,vpdetail_callback);}var vpdetail_callback=function ---> vpdetail_callback <--- (result){if(result!=true)

[WARNING] Try to use a single 'var' statement per scope.
;switchPanel("");}}; ---> var  <--- vpSortField,vpSortType;functionclickDisplayVpList(){visibleDiv

[WARNING] Try to use a single 'var' statement per scope.
},displayVpList_callback);returnfalse;} ---> var  <--- displayVpList_callback=functiondisplayVpList_callback(result){if(

[WARNING] The function displayVpList_callback has already been declared in the same scope...
;returnfalse;}var displayVpList_callback=function ---> displayVpList_callback <--- (result){if(result==false)

[WARNING] Try to use a single 'var' statement per scope.
},displayVpCreate_callback);returnfalse;} ---> var  <--- displayVpCreate_callback=functiondisplayVpCreate_callback(result){_service_chatroom_arr=

[WARNING] The function displayVpCreate_callback has already been declared in the same scope...
;returnfalse;}var displayVpCreate_callback=function ---> displayVpCreate_callback <--- (result){_service_chatroom_arr=$H(result)

[WARNING] Try to use a single 'var' statement per scope.
("frmCreateVp")},createVp_callback);} ---> var  <--- createVp_callback=functioncreateVp_callback(result){if(

[WARNING] The function createVp_callback has already been declared in the same scope...
,createVp_callback);}var createVp_callback=function ---> createVp_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
pos:pos},displayModifyVp_callback);} ---> var  <--- displayModifyVp_callback=functiondisplayModifyVp_callback(result){if(

[WARNING] The function displayModifyVp_callback has already been declared in the same scope...
,displayModifyVp_callback);}var displayModifyVp_callback=function ---> displayModifyVp_callback <--- (result){if(result!=null&&

[WARNING] Try to use a single 'var' statement per scope.
id_service:id_service},modifyVp_callback);} ---> var  <--- modifyVp_callback=functionmodifyVp_callback(result){if(

[WARNING] The function modifyVp_callback has already been declared in the same scope...
,modifyVp_callback);}var modifyVp_callback=function ---> modifyVp_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
:vp_id_arr},deleteVp_callback);}} ---> var  <--- deleteVp_callback=functiondeleteVp_callback(result){if(

[WARNING] The function deleteVp_callback has already been declared in the same scope...
deleteVp_callback);}}var deleteVp_callback=function ---> deleteVp_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
sort_type:sort_type},displayVpGroupAllocate_callback);} ---> var  <--- _sorttype=1;var _sortname=0;var 

[WARNING] Try to use a single 'var' statement per scope.
displayVpGroupAllocate_callback);}var _sorttype=1; ---> var  <--- _sortname=0;var _page=1;var 

[WARNING] Try to use a single 'var' statement per scope.
_sorttype=1;var _sortname=0; ---> var  <--- _page=1;var _status=0;function

[WARNING] Try to use a single 'var' statement per scope.
_sortname=0;var _page=1; ---> var  <--- _status=0;functiondisplayVpClone(vp_id,id_service

[WARNING] Try to use a single 'var' statement per scope.
,displayVpClone_callback);showRightPanel();} ---> var  <--- displayVpClone_callback=functiondisplayVpClone_callback(result){if(

[WARNING] The function displayVpClone_callback has already been declared in the same scope...
showRightPanel();}var displayVpClone_callback=function ---> displayVpClone_callback <--- (result){if(result[0]

[WARNING] Try to use a single 'var' statement per scope.
cloneVp_callback);}}returnfalse;} ---> var  <--- cloneVp_callback=functioncloneVp_callback(result){if(

[WARNING] The function cloneVp_callback has already been declared in the same scope...
}returnfalse;}var cloneVp_callback=function ---> cloneVp_callback <--- (result){if(result!=true)

[WARNING] Try to use a single 'var' statement per scope.
importForm("frmAnimationLogSearch",searchLogFormData);}} ---> var  <--- serviceMaxMt=160;functioncheckPopMaxSize(text_id,max_id

[WARNING] Try to use a single 'var' statement per scope.
pos:pos},displayVpGroupEdit_callback);} ---> var  <--- displayVpGroupEdit_callback=functiondisplayVpGroupEdit_callback(){centerGroupEdit=$

[WARNING] The function displayVpGroupEdit_callback has already been declared in the same scope...
,displayVpGroupEdit_callback);}var displayVpGroupEdit_callback=function ---> displayVpGroupEdit_callback <--- (){centerGroupEdit=$("cboSearchCenter_gAdd").

[WARNING] Try to use a single 'var' statement per scope.
:percent},deleteVpGroup_callback);}} ---> var  <--- deleteVpGroup_callback=functiondeleteVpGroup_callback(result){if(

[WARNING] The function deleteVpGroup_callback has already been declared in the same scope...
deleteVpGroup_callback);}}var deleteVpGroup_callback=function ---> deleteVpGroup_callback <--- (result){if(result){setTimeout

[WARNING] Try to use a single 'var' statement per scope.
;searchVpGroupList();}}}; ---> var  <--- displayVpGroupListAfterRefresh_callback=functiondisplayVpGroupListAfterRefresh_callback(result){if(

[WARNING] The function displayVpGroupListAfterRefresh_callback has already been declared in the same scope...
;}}};var displayVpGroupListAfterRefresh_callback=function ---> displayVpGroupListAfterRefresh_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
value=vpGroupIdReturn;}}}}; ---> var  <--- submitVpGroupAddForm_callback=functionsubmitVpGroupAddForm_callback(result){if(

[WARNING] The function submitVpGroupAddForm_callback has already been declared in the same scope...
}}}};var submitVpGroupAddForm_callback=function ---> submitVpGroupAddForm_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
{showMessage(result);}}; ---> var  <--- submitVpGroupEditForm_callback=functionsubmitVpGroupEditForm_callback(result){if(

[WARNING] The function submitVpGroupEditForm_callback has already been declared in the same scope...
);}};var submitVpGroupEditForm_callback=function ---> submitVpGroupEditForm_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
varifyAddForm(){var string=""; ---> var  <--- service=$("cboSearchService_gAdd").value;if

[WARNING] Try to use a single 'var' statement per scope.
){string+=("Service is empty<br>");} ---> var  <--- vp_group_name=$("txtVpGroupName").value;if

[WARNING] Try to use a single 'var' statement per scope.
){string+=("VP group name is empty<br>");} ---> var  <--- owner=$("cboSearchCenter_gAdd").value;if

[WARNING] Try to use a single 'var' statement per scope.
showMessage(ok);returnfalse;} ---> var  <--- max_ref=$("flag_b").childNodes.length

[WARNING] Try to use a single 'var' statement per scope.
$("flag_b").childNodes.length; ---> var  <--- vpGroupedIdArray=new Array();var divList=

[WARNING] Try to use a single 'var' statement per scope.
;var vpGroupedIdArray=new Array(); ---> var  <--- divList=document.getElementsByName("idvp");var 

[WARNING] Try to use a single 'var' statement per scope.
divList=document.getElementsByName("idvp"); ---> var  <--- divList=$A(divList);var i=

[WARNING] The variable divList has already been declared in the same scope...
=document.getElementsByName("idvp");var  ---> divList <--- =$A(divList);var i=0

[WARNING] Try to use a single 'var' statement per scope.
;var divList=$A(divList); ---> var  <--- i=0;divList.each(function(

[WARNING] Try to use a single 'var' statement per scope.
==0){vpGroupedIdArray=null;} ---> var  <--- nicknameList="";var divList_=document.getElementsByName

[WARNING] Try to use a single 'var' statement per scope.
=null;}var nicknameList=""; ---> var  <--- divList_=document.getElementsByName("nickname");var 

[WARNING] Try to use a single 'var' statement per scope.
divList_=document.getElementsByName("nickname"); ---> var  <--- divList_=$A(divList_);divList_.each

[WARNING] The variable divList_ has already been declared in the same scope...
=document.getElementsByName("nickname");var  ---> divList_ <--- =$A(divList_);divList_.each(

[WARNING] Try to use a single 'var' statement per scope.
showMessage(ok);returnfalse;} ---> var  <--- max_ref=$("flag_b").childNodes.length

[WARNING] Try to use a single 'var' statement per scope.
$("flag_b").childNodes.length; ---> var  <--- vpGroupedIdArray=new Array();var divList=

[WARNING] Try to use a single 'var' statement per scope.
;var vpGroupedIdArray=new Array(); ---> var  <--- divList=document.getElementsByName("idvp");var 

[WARNING] Try to use a single 'var' statement per scope.
divList=document.getElementsByName("idvp"); ---> var  <--- divList=$A(divList);var i=

[WARNING] The variable divList has already been declared in the same scope...
=document.getElementsByName("idvp");var  ---> divList <--- =$A(divList);var i=0

[WARNING] Try to use a single 'var' statement per scope.
;var divList=$A(divList); ---> var  <--- i=0;divList.each(function(

[WARNING] Try to use a single 'var' statement per scope.
==0){vpGroupedIdArray=null;} ---> var  <--- nicknameList="";var divList_=document.getElementsByName

[WARNING] Try to use a single 'var' statement per scope.
=null;}var nicknameList=""; ---> var  <--- divList_=document.getElementsByName("nickname");var 

[WARNING] Try to use a single 'var' statement per scope.
divList_=document.getElementsByName("nickname"); ---> var  <--- divList_=$A(divList_);divList_.each

[WARNING] The variable divList_ has already been declared in the same scope...
=document.getElementsByName("nickname");var  ---> divList_ <--- =$A(divList_);divList_.each(

[WARNING] Try to use a single 'var' statement per scope.
service=$("cboSearchService_gAdd").value; ---> var  <--- owner=$("cboSearchCenter_gAdd").value;if

[WARNING] Try to use a single 'var' statement per scope.
value;if(id_vp_group!=null){ ---> var  <--- go_to=confirm(_msg_center_change_confirm);if(go_to

[WARNING] Try to use a single 'var' statement per scope.
){var divName="available_"+id; ---> var  <--- newDivID=("grouped_"+id);$(

[WARNING] Try to use a single 'var' statement per scope.
$(divName).id=newDivID; ---> var  <--- e=$(newDivID).childNodes[15

[WARNING] Try to use a single 'var' statement per scope.
(newDivID).childNodes[15]; ---> var  <--- removeIcon=("<a href='javascript:moveToAvailableVpList("+id+")'><img border='0' width='16' height='16' align='absmiddle' title='REMOVE' src= '"+delete_icon

[WARNING] Try to use a single 'var' statement per scope.
){var divName="grouped_"+id; ---> var  <--- newDivID=("available_"+id);$(

[WARNING] Try to use a single 'var' statement per scope.
$(divName).id=newDivID; ---> var  <--- e=$(newDivID).childNodes[15

[WARNING] Try to use a single 'var' statement per scope.
(newDivID).childNodes[15]; ---> var  <--- addIcon=("<a href='javascript:moveToGroupedVpList("+id+")'><img width='16' height='16' border='0' align='absmiddle' title='REMOVE' src= '"+add_icon

[WARNING] Try to use a single 'var' statement per scope.
0;}column_sort_signal_c=column;for( ---> var  <--- i=1;i<=11;i+=

[WARNING] Try to use a single 'var' statement per scope.
[3].innerHTML="";} ---> var  <--- sort_icon=up_icon;if(type_sort_signal_c==1)

[WARNING] Try to use a single 'var' statement per scope.
.innerHTML="<img border='0' align='absmiddle' width='16' height='16' src= '"+sort_icon+"'/>"; ---> var  <--- availableVps=new Array();var divList=

[WARNING] Try to use a single 'var' statement per scope.
;var availableVps=new Array(); ---> var  <--- divList=document.getElementsByName("idvp");var 

[WARNING] Try to use a single 'var' statement per scope.
divList=document.getElementsByName("idvp"); ---> var  <--- divList=$A(divList);var i=

[WARNING] The variable divList has already been declared in the same scope...
=document.getElementsByName("idvp");var  ---> divList <--- =$A(divList);var i=0

[WARNING] Try to use a single 'var' statement per scope.
;var divList=$A(divList); ---> var  <--- i=0;divList.each(function(

[WARNING] The variable i has already been declared in the same scope...
var divList=$A(divList);var  ---> i <--- =0;divList.each(function(node

[WARNING] Try to use a single 'var' statement per scope.
0;}column_sort_signal_b=column;for( ---> var  <--- i=1;i<=11;i+=

[WARNING] Try to use a single 'var' statement per scope.
[3].innerHTML="";} ---> var  <--- sort_icon=up_icon;if(type_sort_signal_b==1)

[WARNING] Try to use a single 'var' statement per scope.
.innerHTML="<img border='0' width='16' height='16' align='absmiddle' src= '"+sort_icon+"'/>"; ---> var  <--- groupedVps=new Array();var divList=

[WARNING] Try to use a single 'var' statement per scope.
;var groupedVps=new Array(); ---> var  <--- divList=document.getElementsByName("idvp");var 

[WARNING] Try to use a single 'var' statement per scope.
divList=document.getElementsByName("idvp"); ---> var  <--- divList=$A(divList);var i=

[WARNING] The variable divList has already been declared in the same scope...
=document.getElementsByName("idvp");var  ---> divList <--- =$A(divList);var i=0

[WARNING] Try to use a single 'var' statement per scope.
;var divList=$A(divList); ---> var  <--- i=0;divList.each(function(

[WARNING] The variable i has already been declared in the same scope...
var divList=$A(divList);var  ---> i <--- =0;divList.each(function(node

[WARNING] Try to use a single 'var' statement per scope.
("txtServiceId").value;}else{ ---> var  <--- id_service=$("cboService").value;}

[WARNING] The variable id_service has already been declared in the same scope...
"txtServiceId").value;}else{var  ---> id_service <--- =$("cboService").value;}var 

[WARNING] Try to use a single 'var' statement per scope.
=$("cboService").value;} ---> var  <--- id_center=$("cboCenter").value;callAjaxJquery

[WARNING] Try to use a single 'var' statement per scope.
selected=true;var Vp_Group_cbo='<option value="0">[VP Group]</option>'; ---> var  <--- ChatRoom_cbo='<option value="0">[Chatroom]</option>';var Center_cbo='<option value="0">[Center]</option>';$

[WARNING] Try to use a single 'var' statement per scope.
Vp_Group_cbo='<option value="0">[VP Group]</option>';var ChatRoom_cbo='<option value="0">[Chatroom]</option>'; ---> var  <--- Center_cbo='<option value="0">[Center]</option>';$("cboVpGroup").innerHTML

[WARNING] The symbol max_ref is declared but is apparently never used.
This code can probably be written in a more compact way.
(ok);returnfalse;}var  ---> max_ref <--- =$("flag_b").childNodes.length;

[WARNING] The symbol max_ref is declared but is apparently never used.
This code can probably be written in a more compact way.
(ok);returnfalse;}var  ---> max_ref <--- =$("flag_b").childNodes.length;

[WARNING] The symbol ChatRoom_cbo is declared but is apparently never used.
This code can probably be written in a more compact way.
=true;var Vp_Group_cbo='<option value="0">[VP Group]</option>';var  ---> ChatRoom_cbo <--- ='<option value="0">[Chatroom]</option>';var Center_cbo='<option value="0">[Center]</option>';$(


-------------------------------------- Minify E:/www/2.7/public/js/admin_widget.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var AJX_log; ---> var  <--- AJX_widget;var AJX_widget_add;var AJX_quickview;var frm_widget

[WARNING] Try to use a single 'var' statement per scope.
var AJX_log;var AJX_widget; ---> var  <--- AJX_widget_add;var AJX_quickview;var frm_widget;var frm_widget_mod

[WARNING] Try to use a single 'var' statement per scope.
var AJX_log;var AJX_widget;var AJX_widget_add; ---> var  <--- AJX_quickview;var frm_widget;var frm_widget_mod;var widget_page

[WARNING] Try to use a single 'var' statement per scope.
var AJX_widget;var AJX_widget_add;var AJX_quickview; ---> var  <--- frm_widget;var frm_widget_mod;var widget_page;var widget_orderby

[WARNING] Try to use a single 'var' statement per scope.
var AJX_widget_add;var AJX_quickview;var frm_widget; ---> var  <--- frm_widget_mod;var widget_page;var widget_orderby;var widget_order

[WARNING] Try to use a single 'var' statement per scope.
var AJX_quickview;var frm_widget;var frm_widget_mod; ---> var  <--- widget_page;var widget_orderby;var widget_order;var widget_page_mod

[WARNING] Try to use a single 'var' statement per scope.
var frm_widget;var frm_widget_mod;var widget_page; ---> var  <--- widget_orderby;var widget_order;var widget_page_mod;var widget_orderby_mod

[WARNING] Try to use a single 'var' statement per scope.
var frm_widget_mod;var widget_page;var widget_orderby; ---> var  <--- widget_order;var widget_page_mod;var widget_orderby_mod;var widget_order_mod

[WARNING] Try to use a single 'var' statement per scope.
var widget_page;var widget_orderby;var widget_order; ---> var  <--- widget_page_mod;var widget_orderby_mod;var widget_order_mod;var frm_log

[WARNING] Try to use a single 'var' statement per scope.
var widget_orderby;var widget_order;var widget_page_mod; ---> var  <--- widget_orderby_mod;var widget_order_mod;var frm_log=null;

[WARNING] Try to use a single 'var' statement per scope.
var widget_order;var widget_page_mod;var widget_orderby_mod; ---> var  <--- widget_order_mod;var frm_log=null;var log_page;

[WARNING] Try to use a single 'var' statement per scope.
var widget_page_mod;var widget_orderby_mod;var widget_order_mod; ---> var  <--- frm_log=null;var log_page;var log_orderby;

[WARNING] Try to use a single 'var' statement per scope.
;var widget_order_mod;var frm_log=null; ---> var  <--- log_page;var log_orderby;var log_order;var posted

[WARNING] Try to use a single 'var' statement per scope.
;var frm_log=null;var log_page; ---> var  <--- log_orderby;var log_order;var posted=false;

[WARNING] Try to use a single 'var' statement per scope.
=null;var log_page;var log_orderby; ---> var  <--- log_order;var posted=false;var exportExcelFunction=

[WARNING] Try to use a single 'var' statement per scope.
var log_page;var log_orderby;var log_order; ---> var  <--- posted=false;var exportExcelFunction="";function

[WARNING] Try to use a single 'var' statement per scope.
;var log_order;var posted=false; ---> var  <--- exportExcelFunction="";functionexportExcel(){eval

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
exportExcelFunction="";functionexportExcel(){ ---> eval <--- (exportExcelFunction);}functionloadAJAX(){

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
""){performSearching(0);} ---> eval <--- (startup_functions);}functionloadQuickViewPanel(){

[WARNING] Try to use a single 'var' statement per scope.
else{checkWidgetExistAndActive(false);}} ---> var  <--- checkWidgetExistAndActive=functioncheckWidgetExistAndActive(result){if(

[WARNING] The function checkWidgetExistAndActive has already been declared in the same scope...
false);}}var checkWidgetExistAndActive=function ---> checkWidgetExistAndActive <--- (result){if(!result){

[WARNING] Try to use a single 'var' statement per scope.
).value},processSubmit);} ---> var  <--- processSubmit=functionprocessSubmit(result){if(

[WARNING] The function processSubmit has already been declared in the same scope...
,processSubmit);}var processSubmit=function ---> processSubmit <--- (result){if(result){switchPanel

[WARNING] Try to use a single 'var' statement per scope.
:Ids},reLoadList);}} ---> var  <--- reLoadList=functionreLoadList(message_type){switch(

[WARNING] The function reLoadList has already been declared in the same scope...
reLoadList);}}var reLoadList=function ---> reLoadList <--- (message_type){switch(message_type){case

[WARNING] Try to use a single 'var' statement per scope.
url=$("f_url").value; ---> var  <--- param=new Array(0);var tmp

[WARNING] Try to use a single 'var' statement per scope.
var param=new Array(0); ---> var  <--- tmp=new Array(4);tmp[

[WARNING] Try to use a single 'var' statement per scope.
(tmp[i]);}} ---> var  <--- strParam=param.join("&");if

[WARNING] Try to use a single 'var' statement per scope.
else{checkWidgetExistAndActiveMod(false);}} ---> var  <--- checkWidgetExistAndActiveMod=functioncheckWidgetExistAndActiveMod(result){if(

[WARNING] The function checkWidgetExistAndActiveMod has already been declared in the same scope...
false);}}var checkWidgetExistAndActiveMod=function ---> checkWidgetExistAndActiveMod <--- (result){if(!result){

[WARNING] Try to use a single 'var' statement per scope.
).value},processSubmitMod);} ---> var  <--- processSubmitMod=functionprocessSubmitMod(result){if(

[WARNING] The function processSubmitMod has already been declared in the same scope...
,processSubmitMod);}var processSubmitMod=function ---> processSubmitMod <--- (result){if(result){switchPanel

[WARNING] Try to use a single 'var' statement per scope.
(message_error_url+"check from Server");}}; ---> var  <--- reLoadListMod=functionreLoadList(message_type){switch(

[WARNING] The function reLoadList has already been declared in the same scope...
);}};var reLoadListMod=function ---> reLoadList <--- (message_type){switch(message_type){case

[WARNING] Try to use a single 'var' statement per scope.
url=$("f_url").value; ---> var  <--- param=new Array(0);var tmp

[WARNING] Try to use a single 'var' statement per scope.
var param=new Array(0); ---> var  <--- tmp=new Array(4);tmp[

[WARNING] Try to use a single 'var' statement per scope.
(tmp[i]);}} ---> var  <--- strParam=param.join("&");if


-------------------------------------- Minify E:/www/2.7/public/js/animation.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var _window_pop_up=null; ---> var  <--- AJX_msq_history;var AJX_msq_myaccount_panel;var AJX_log_list;var Ajx_comment_process

[WARNING] Try to use a single 'var' statement per scope.
var _window_pop_up=null;var AJX_msq_history; ---> var  <--- AJX_msq_myaccount_panel;var AJX_log_list;var Ajx_comment_process;var AJX_getMessage

[WARNING] Try to use a single 'var' statement per scope.
=null;var AJX_msq_history;var AJX_msq_myaccount_panel; ---> var  <--- AJX_log_list;var Ajx_comment_process;var AJX_getMessage;var frm_mq_log

[WARNING] Try to use a single 'var' statement per scope.
var AJX_msq_history;var AJX_msq_myaccount_panel;var AJX_log_list; ---> var  <--- Ajx_comment_process;var AJX_getMessage;var frm_mq_log;var pageLog

[WARNING] Try to use a single 'var' statement per scope.
var AJX_msq_myaccount_panel;var AJX_log_list;var Ajx_comment_process; ---> var  <--- AJX_getMessage;var frm_mq_log;var pageLog=0;

[WARNING] Try to use a single 'var' statement per scope.
var AJX_log_list;var Ajx_comment_process;var AJX_getMessage; ---> var  <--- frm_mq_log;var pageLog=0;var viewStyle=

[WARNING] Try to use a single 'var' statement per scope.
var Ajx_comment_process;var AJX_getMessage;var frm_mq_log; ---> var  <--- pageLog=0;var viewStyle=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frm_mq_log;var pageLog=0; ---> var  <--- viewStyle=0;var currentPage="";function

[WARNING] Try to use a single 'var' statement per scope.
pageLog=0;var viewStyle=0; ---> var  <--- currentPage="";functiongetNextMessage(stat,diff_srv

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
}));}getCacheMessage(); ---> eval <--- (startup_functions);}functiondisplayHistoryList(){

[WARNING] Try to use a single 'var' statement per scope.
,displayCommentHistory_callback);}returnfalse;} ---> var  <--- displayCommentHistory_callback=functiondisplayCommentHistory_callback(){removeBoxLoading("COMMENT"

[WARNING] The function displayCommentHistory_callback has already been declared in the same scope...
}returnfalse;}var displayCommentHistory_callback=function ---> displayCommentHistory_callback <--- (){removeBoxLoading("COMMENT");if(

[WARNING] Try to use a single 'var' statement per scope.
else{showMessage("Please enter reply message");}} ---> var  <--- sendSMS_callback=functionsendSMS_callback(){};function

[WARNING] The function sendSMS_callback has already been declared in the same scope...
"Please enter reply message");}}var sendSMS_callback=function ---> sendSMS_callback <--- (){};functionshowDialogPanel(){

[WARNING] Try to use a single 'var' statement per scope.
:viewStyle}),showDialogPanel_callback);} ---> var  <--- showDialogPanel_callback=functionshowDialogPanel_callback(){removeBoxLoading("DIALOG"

[WARNING] The function showDialogPanel_callback has already been declared in the same scope...
,showDialogPanel_callback);}var showDialogPanel_callback=function ---> showDialogPanel_callback <--- (){removeBoxLoading("DIALOG");};

[WARNING] Try to use a single 'var' statement per scope.
service_id}),displayNotificationForm_callback);}} ---> var  <--- displayNotificationForm_callback=functiondisplayNotificationForm_callback(){removeBoxLoading("NOTIFICATION"

[WARNING] The function displayNotificationForm_callback has already been declared in the same scope...
displayNotificationForm_callback);}}var displayNotificationForm_callback=function ---> displayNotificationForm_callback <--- (){removeBoxLoading("NOTIFICATION");};

[WARNING] Try to use a single 'var' statement per scope.
,displayPerformance_callback);}performance_panel_load++;} ---> var  <--- displayPerformance_callback=functiondisplayPerformance_callback(){removeBoxLoading("PERFORMANCE"

[WARNING] The function displayPerformance_callback has already been declared in the same scope...
}performance_panel_load++;}var displayPerformance_callback=function ---> displayPerformance_callback <--- (){removeBoxLoading("PERFORMANCE");};

[WARNING] Try to use a single 'var' statement per scope.
0}),displayPanelVPInfo_callback);}} ---> var  <--- displayPanelVPInfo_callback=functiondisplayPanelVPInfo_callback(result){removeBoxLoading(

[WARNING] The function displayPanelVPInfo_callback has already been declared in the same scope...
displayPanelVPInfo_callback);}}var displayPanelVPInfo_callback=function ---> displayPanelVPInfo_callback <--- (result){removeBoxLoading("VP_BOX");if

[WARNING] Try to use a single 'var' statement per scope.
0}),displayPanelRealProfileInfo_callback);}} ---> var  <--- displayPanelRealProfileInfo_callback=functiondisplayPanelRealProfileInfo(result){removeBoxLoading(

[WARNING] The function displayPanelRealProfileInfo has already been declared in the same scope...
displayPanelRealProfileInfo_callback);}}var displayPanelRealProfileInfo_callback=function ---> displayPanelRealProfileInfo <--- (result){removeBoxLoading("RP_BOX");if

[WARNING] Try to use a single 'var' statement per scope.
id_log:id_log}));}} ---> var  <--- post_log_list_order="DESC";var post_log_list_orderby="DATE_ACTION";function

[WARNING] Try to use a single 'var' statement per scope.
);}}var post_log_list_order="DESC"; ---> var  <--- post_log_list_orderby="DATE_ACTION";functioncs_displayLogList_sort(sortby,sort

[WARNING] Try to use a single 'var' statement per scope.
display=display;}});} ---> var  <--- searchLog_callback=functionsearchLog_callback(result){if(

[WARNING] The function searchLog_callback has already been declared in the same scope...
}});}var searchLog_callback=function ---> searchLog_callback <--- (result){if(result!=true)

[WARNING] Try to use a single 'var' statement per scope.
){displayPanelLogHistory();}}} ---> var  <--- displayAnimation_callback=functiondisplayAnimation_callback(result){if(

[WARNING] The function displayAnimation_callback has already been declared in the same scope...
);}}}var displayAnimation_callback=function ---> displayAnimation_callback <--- (result){if(_window!="")

[WARNING] Try to use a single 'var' statement per scope.
,view_style:viewStyle}));} ---> var  <--- popup_name="";functionpopUp(URL,vp_id

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("page"+id+" = window.open(URL, popup_name, 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=0,width=300,height=308,left = 362,top = 234');");}function

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("page"+id+" = window.open(URL, popup_name, 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=0,width=300,height=408,left = 362,top = 234');");}function

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("page"+id+" = window.open(URL, popup_name, 'toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=286,height=210,left = 362,top = 234');");}function

[WARNING] Try to use a single 'var' statement per scope.
(true);}return;}} ---> var  <--- tfocus;functiontoggleAnimation(status){elements=

[WARNING] Try to use a single 'var' statement per scope.
comment}),deleteComment_callback);}} ---> var  <--- deleteComment_callback=functiondeleteComment_callback(result){if(

[WARNING] The function deleteComment_callback has already been declared in the same scope...
deleteComment_callback);}}var deleteComment_callback=function ---> deleteComment_callback <--- (result){if(result==true)

[WARNING] The symbol URL is declared but is apparently never used.
This code can probably be written in a more compact way.
;id=day.getTime(); ---> URL <--- =URL_ROOT+"animation/commentEdit/id/"+comment_id+"/service_id/"+service_id


-------------------------------------- Minify E:/www/2.7/public/js/animation_widget.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
}functionwidget_assignOnclickFunctionSendButton(functionName){if( ---> eval <--- ("typeof "+functionName+" == 'function'")){$

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
){$("btSend").onclick= ---> eval <--- (functionName);}}


-------------------------------------- Minify E:/www/2.7/public/js/common.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var emptyFunction=function(){}; ---> var  <--- exportSince=0;functiongenerateCatchException(object,func

[WARNING] Try to use a single 'var' statement per scope.
{var tmpDate=new Date(); ---> var  <--- miliSecNow=tmpDate.getTime();if(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
if(miliSecNow-exportSince<500){ ---> eval <--- ("className = "+object+"['__oriclass']");args.

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
object+"."+func+"(callback);";} ---> eval <--- (command);returnres;}functionreplaceSpecialValue

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;exportSince=d.getTime(); ---> eval <--- (function_name);}var exportInterval;functionpopupExportList

[WARNING] Try to use a single 'var' statement per scope.
();eval(function_name);} ---> var  <--- exportInterval;functionpopupExportList(url){ajax_running_indicator=

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
object+"."+func+"(callback);";} ---> eval <--- (command);$(args.id)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;command+="alert(result);";command+="});"; ---> eval <--- (command);}functionpaging_ajax_call(object,

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;command+="alert(result);";command+="});"; ---> eval <--- (command);returnfalse;}functionisValidDateTime

[WARNING] Try to use a single 'var' statement per scope.
=="Y"){var reg1=/^\d{2}(\-|\/|\.)\d{1,2}\1\d{1,2}$/; ---> var  <--- reg2=/^\d{4}(\-|\/|\.)\d{1,2}\1\d{1,2}$/;}else{if(format

[WARNING] Try to use a single 'var' statement per scope.
(1,2)=="Y"){ ---> var  <--- reg1=/^\d{1,2}(\-|\/|\.)\d{2}\1\d{1,2}$/;var reg2=/^\d{1,2}(\-|\/|\.)\d{4}\1\d{1,2}$/;}

[WARNING] The variable reg1 has already been declared in the same scope...
1,2)=="Y"){var  ---> reg1 <--- =/^\d{1,2}(\-|\/|\.)\d{2}\1\d{1,2}$/;var reg2=/^\d{1,2}(\-|\/|\.)\d{4}\1\d{1,2}$/;}else

[WARNING] Try to use a single 'var' statement per scope.
=="Y"){var reg1=/^\d{1,2}(\-|\/|\.)\d{2}\1\d{1,2}$/; ---> var  <--- reg2=/^\d{1,2}(\-|\/|\.)\d{4}\1\d{1,2}$/;}else{var reg1=

[WARNING] The variable reg2 has already been declared in the same scope...
"Y"){var reg1=/^\d{1,2}(\-|\/|\.)\d{2}\1\d{1,2}$/;var  ---> reg2 <--- =/^\d{1,2}(\-|\/|\.)\d{4}\1\d{1,2}$/;}else{var reg1=/^\d{1,2}(\-|\/|\.)\d{1,2}\1\d{2}$/

[WARNING] Try to use a single 'var' statement per scope.
;var reg2=/^\d{1,2}(\-|\/|\.)\d{4}\1\d{1,2}$/;}else{ ---> var  <--- reg1=/^\d{1,2}(\-|\/|\.)\d{1,2}\1\d{2}$/;var reg2=/^\d{1,2}(\-|\/|\.)\d{1,2}\1\d{4}$/;}

[WARNING] The variable reg1 has already been declared in the same scope...
var reg2=/^\d{1,2}(\-|\/|\.)\d{4}\1\d{1,2}$/;}else{var  ---> reg1 <--- =/^\d{1,2}(\-|\/|\.)\d{1,2}\1\d{2}$/;var reg2=/^\d{1,2}(\-|\/|\.)\d{1,2}\1\d{4}$/;}}

[WARNING] Try to use a single 'var' statement per scope.
;}else{var reg1=/^\d{1,2}(\-|\/|\.)\d{1,2}\1\d{2}$/; ---> var  <--- reg2=/^\d{1,2}(\-|\/|\.)\d{1,2}\1\d{4}$/;}}if((reg1

[WARNING] The variable reg2 has already been declared in the same scope...
}else{var reg1=/^\d{1,2}(\-|\/|\.)\d{1,2}\1\d{2}$/;var  ---> reg2 <--- =/^\d{1,2}(\-|\/|\.)\d{1,2}\1\d{4}$/;}}if((reg1.

[WARNING] Try to use a single 'var' statement per scope.
==false)){returnfalse;} ---> var  <--- parts=dateStr.split(RegExp.$1)

[WARNING] Try to use a single 'var' statement per scope.
(0,1)=="M"){ ---> var  <--- mm=parts[0];}else{

[WARNING] Try to use a single 'var' statement per scope.
(1,2)=="M"){ ---> var  <--- mm=parts[1];}else{

[WARNING] The variable mm has already been declared in the same scope...
1,2)=="M"){var  ---> mm <--- =parts[1];}else{var 

[WARNING] Try to use a single 'var' statement per scope.
=parts[1];}else{ ---> var  <--- mm=parts[2];}}if

[WARNING] The variable mm has already been declared in the same scope...
parts[1];}else{var  ---> mm <--- =parts[2];}}if(

[WARNING] Try to use a single 'var' statement per scope.
(0,1)=="D"){ ---> var  <--- dd=parts[0];}else{

[WARNING] Try to use a single 'var' statement per scope.
(1,2)=="D"){ ---> var  <--- dd=parts[1];}else{

[WARNING] The variable dd has already been declared in the same scope...
1,2)=="D"){var  ---> dd <--- =parts[1];}else{var 

[WARNING] Try to use a single 'var' statement per scope.
=parts[1];}else{ ---> var  <--- dd=parts[2];}}if

[WARNING] The variable dd has already been declared in the same scope...
parts[1];}else{var  ---> dd <--- =parts[2];}}if(

[WARNING] Try to use a single 'var' statement per scope.
(0,1)=="Y"){ ---> var  <--- yy=parts[0];}else{

[WARNING] Try to use a single 'var' statement per scope.
(1,2)=="Y"){ ---> var  <--- yy=parts[1];}else{

[WARNING] The variable yy has already been declared in the same scope...
1,2)=="Y"){var  ---> yy <--- =parts[1];}else{var 

[WARNING] Try to use a single 'var' statement per scope.
=parts[1];}else{ ---> var  <--- yy=parts[2];}}if

[WARNING] The variable yy has already been declared in the same scope...
parts[1];}else{var  ---> yy <--- =parts[2];}}if(

[WARNING] Try to use a single 'var' statement per scope.
+1900).toString();} ---> var  <--- dt=new Date(parseFloat(yy),

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
object+"."+func+"(callback);";} ---> eval <--- (command);returnres;}functioncallAJAXForHomePage

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
object+"."+func+"(callback);";} ---> eval <--- (command);returnres;}functionprivate_convert_datetime_full_format

[WARNING] Try to use a single 'var' statement per scope.
(dtStr){var dtCh="/"; ---> var  <--- pos1=dtStr.indexOf(dtCh);var 

[WARNING] Try to use a single 'var' statement per scope.
pos1=dtStr.indexOf(dtCh); ---> var  <--- pos2=dtStr.indexOf(dtCh,pos1+

[WARNING] Try to use a single 'var' statement per scope.
indexOf(dtCh,pos1+1); ---> var  <--- strDay=dtStr.substring(0,pos1)

[WARNING] Try to use a single 'var' statement per scope.
dtStr.substring(0,pos1); ---> var  <--- strMonth=dtStr.substring(pos1+1,

[WARNING] Try to use a single 'var' statement per scope.
substring(pos1+1,pos2); ---> var  <--- strYear=dtStr.substring(pos2+1)

[WARNING] Try to use a single 'var' statement per scope.
{returnfalse;}returntrue;} ---> var  <--- clockID=0;var dbDate=new Date(

[WARNING] Try to use a single 'var' statement per scope.
returntrue;}var clockID=0; ---> var  <--- dbDate=new Date();var miliSecIncre=

[WARNING] Try to use a single 'var' statement per scope.
;var dbDate=new Date(); ---> var  <--- miliSecIncre=0;functionUpdateClock(){if

[WARNING] Try to use a single 'var' statement per scope.
1000+miliSecIncre);miliSecIncre+=60000; ---> var  <--- date=ttDate.getDate();if(

[WARNING] Try to use a single 'var' statement per scope.
"0"+date.toString();} ---> var  <--- month=(ttDate.getMonth()+1

[WARNING] Try to use a single 'var' statement per scope.
"0"+month.toString();} ---> var  <--- year=ttDate.getFullYear().toString(

[WARNING] Try to use a single 'var' statement per scope.
).substring(2,4); ---> var  <--- hour=ttDate.getHours();if(

[WARNING] Try to use a single 'var' statement per scope.
"0"+hour.toString();} ---> var  <--- min=ttDate.getMinutes();if(

[WARNING] Try to use a single 'var' statement per scope.
{var tmpDate=new Date(); ---> var  <--- miliSecNow=tmpDate.getTime();if(

[WARNING] Try to use a single 'var' statement per scope.
;args._function=func;for( ---> var  <--- i in args){args[i]=

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
.hide();}return;} ---> eval <--- (msg.html);if(callback!=

[WARNING] Try to use a single 'var' statement per scope.
)=="undefined"){returnnull;} ---> var  <--- formData={};for(var iterator=

[WARNING] Try to use a single 'var' statement per scope.
}var formData={};for( ---> var  <--- iterator=0;iterator<form.elements.

[WARNING] Try to use a single 'var' statement per scope.
.elements.length;iterator++){ ---> var  <--- element=form.elements[iterator];if

[WARNING] Try to use a single 'var' statement per scope.
(element.disabled){continue;} ---> var  <--- elementType=element.tagName.toLowerCase();

[WARNING] Try to use a single 'var' statement per scope.
=element.tagName.toLowerCase(); ---> var  <--- elementName=null;var elementValue=null;if

[WARNING] Try to use a single 'var' statement per scope.
toLowerCase();var elementName=null; ---> var  <--- elementValue=null;if((typeof(element

[WARNING] Try to use a single 'var' statement per scope.
element.value;}else{try{ ---> var  <--- type=eval("typeof(formData."+elementName+")")

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;}else{try{var type= ---> eval <--- ("typeof(formData."+elementName+")");if(

[WARNING] Try to use a single 'var' statement per scope.
);elementValue=[];for( ---> var  <--- optionsIterator=0;optionsIterator<element.options.

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
element.value;}}}try{ ---> eval <--- ("formData."+elementName+" = elementValue;");}catch

[WARNING] Try to use a single 'var' statement per scope.
"undefined"){returnfalse;}for( ---> var  <--- iterator=0;iterator<form.elements.

[WARNING] Try to use a single 'var' statement per scope.
.elements.length;iterator++){ ---> var  <--- element=form.elements[iterator];if

[WARNING] Try to use a single 'var' statement per scope.
(element.disabled){continue;} ---> var  <--- elementType=element.tagName.toLowerCase();

[WARNING] Try to use a single 'var' statement per scope.
=element.tagName.toLowerCase(); ---> var  <--- elementName=null;if((typeof(element

[WARNING] Try to use a single 'var' statement per scope.
replace(/\[\]$/ig,"");}} ---> var  <--- elementValue=null;try{var valueType=eval

[WARNING] Try to use a single 'var' statement per scope.
}}var elementValue=null;try{ ---> var  <--- valueType=eval("typeof(formData."+elementName+")")

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
elementValue=null;try{var valueType= ---> eval <--- ("typeof(formData."+elementName+")");if(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
if(valueType!="undefined"){elementValue= ---> eval <--- ("formData."+elementName);}else{continue

[WARNING] Try to use a single 'var' statement per scope.
element.selectedIndex=0;}for( ---> var  <--- valuesIterator=0;valuesIterator<elementValue.length;

[WARNING] Try to use a single 'var' statement per scope.
.length;valuesIterator++){for( ---> var  <--- optionsIterator=0;optionsIterator<element.options.

[WARNING] Try to use a single 'var' statement per scope.
var val_date_from=new Date(date_from_full_format); ---> var  <--- val_date_to=new Date(date_to_full_format);if(

[WARNING] Try to use a single 'var' statement per scope.
.length){var patt=/\/(moder|anim)ation\//g; ---> var  <--- isAnimating=(patt.test(location.href


-------------------------------------- Minify E:/www/2.7/public/js/customer_support.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var AJX_quickview,AJX_loglist,AJX_logdetail,AJX_rplist; ---> var  <--- frm_log,frm_rp;var logPage,rpPage;var 

[WARNING] Try to use a single 'var' statement per scope.
AJX_logdetail,AJX_rplist;var frm_log,frm_rp; ---> var  <--- logPage,rpPage;var rpIds;functionloadQuickViewPanel(

[WARNING] Try to use a single 'var' statement per scope.
frm_log,frm_rp;var logPage,rpPage; ---> var  <--- rpIds;functionloadQuickViewPanel(){if(AJX_quickview

[WARNING] Try to use a single 'var' statement per scope.
rpIds}),reLoadList);}} ---> var  <--- reLoadList=functionreLoadList(message_type){switch(

[WARNING] The function reLoadList has already been declared in the same scope...
reLoadList);}}var reLoadList=function ---> reLoadList <--- (message_type){switch(message_type){case


-------------------------------------- Minify E:/www/2.7/public/js/detect_timeout.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
new Date(readCookie("date_last_enter")); ---> var  <--- today=new Date();difference=today

[WARNING] The symbol $j is declared but is apparently never used.
This code can probably be written in a more compact way.
"load",function(){var allCalObj= ---> $j <--- ("input[drxtype='cal']");if(allCalObj.length)


-------------------------------------- Minify E:/www/2.7/public/js/function.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
{var copyOption=new Array(); ---> var  <--- tmp;var k=0;optId=$

[WARNING] Try to use a single 'var' statement per scope.
=new Array();var tmp; ---> var  <--- k=0;optId=$(optId)

[WARNING] Try to use a single 'var' statement per scope.
except.split(",");for( ---> var  <--- i=0;i<optId.options.

[WARNING] Try to use a single 'var' statement per scope.
].value)==-1){ ---> var  <--- t_class=optId[i].className!="undefine"

[WARNING] Try to use a single 'var' statement per scope.
optId[i].className:""; ---> var  <--- t=optId[i].text.toLowerCase

[WARNING] Try to use a single 'var' statement per scope.
}copyOption.sort();for( ---> var  <--- i=optId.options.length-1;

[WARNING] The variable i has already been declared in the same scope...
copyOption.sort();for(var  ---> i <--- =optId.options.length-1;i

[WARNING] Try to use a single 'var' statement per scope.
i]=null;}}for( ---> var  <--- i=0;i<copyOption.length;

[WARNING] The variable i has already been declared in the same scope...
]=null;}}for(var  ---> i <--- =0;i<copyOption.length;i

[WARNING] Try to use a single 'var' statement per scope.
[i].split("_|_"); ---> var  <--- t=optId.options.length;optId.

[WARNING] The variable t has already been declared in the same scope...
i].split("_|_");var  ---> t <--- =optId.options.length;optId.options

[WARNING] Try to use a single 'var' statement per scope.
record1[0].toLowerCase(); ---> var  <--- value2=record2[0].toLowerCase()

[WARNING] Try to use a single 'var' statement per scope.
record1[0].toLowerCase(); ---> var  <--- value2=record2[0].toLowerCase()

[WARNING] Try to use a single 'var' statement per scope.
.style.display=state;}} ---> var  <--- messageTimeout=0;functionshowMessage(message){

[WARNING] Try to use a single 'var' statement per scope.
(obj).attr("text_status"); ---> var  <--- newStatus=Math.abs(currentStatus-1)

[WARNING] Try to use a single 'var' statement per scope.
;}catch(ex){}} ---> var  <--- navRecordPosition=0;var navNextFunction="";var 

[WARNING] Try to use a single 'var' statement per scope.
){}}var navRecordPosition=0; ---> var  <--- navNextFunction="";var navScriptObj="";function

[WARNING] Try to use a single 'var' statement per scope.
navRecordPosition=0;var navNextFunction=""; ---> var  <--- navScriptObj="";functionnavRetrieveRecord(type,function_name

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
+param+"',{dbPos:"+navRecordPosition+"});"; ---> eval <--- (script);}catch(ex){

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
{try{navNextFunction=navScriptObj.submitJsCallBack; ---> eval <--- (navScriptObj.submitJs);}catch(ex

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
+param+"','"+navRecordPosition+"','fromNav');"; ---> eval <--- (script);}catch(ex){

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
""){returnfalse;}try{ ---> eval <--- (navNextFunction);}catch(ex){

[WARNING] Try to use a single 'var' statement per scope.
.bind("keyup",navAssignJsHandler);} ---> var  <--- navAssignJsHandler=function(e){if(isObjEmpty

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
37&&navScriptObj.previousJs!=undefined){ ---> eval <--- (navScriptObj.previousJs);}else{if

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
39&&navScriptObj.nextJs!=undefined){ ---> eval <--- (navScriptObj.nextJs);}}}catch

[WARNING] Try to use a single 'var' statement per scope.
(obj){var re=/^([0-9]*[0-9]$)/; ---> var  <--- sNumber=obj.value;if(sNumber.

[WARNING] Try to use a single 'var' statement per scope.
ml=document.forms[obj]; ---> var  <--- len=ml.elements.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=ml.elements.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- e=ml.elements[i];var 

[WARNING] Try to use a single 'var' statement per scope.
e=ml.elements[i]; ---> var  <--- gtri=e.name.split("_")

[WARNING] Try to use a single 'var' statement per scope.
*60*60*1000)); ---> var  <--- expires="; expires="+date.toGMTString();

[WARNING] Try to use a single 'var' statement per scope.
date.toGMTString();}else{ ---> var  <--- expires="";}document.cookie=name

[WARNING] The variable expires has already been declared in the same scope...
.toGMTString();}else{var  ---> expires <--- ="";}document.cookie=name+

[WARNING] Try to use a single 'var' statement per scope.
){var nameEQ=name+"="; ---> var  <--- ca=document.cookie.split(";")

[WARNING] Try to use a single 'var' statement per scope.
cookie.split(";");for( ---> var  <--- i=0;i<ca.length;

[WARNING] Try to use a single 'var' statement per scope.
<ca.length;i++){ ---> var  <--- c=ca[i];while(c

[WARNING] Try to use a single 'var' statement per scope.
name,"",-1);} ---> var  <--- imgWin;functionobjPreview(type,id){

[WARNING] Try to use a single 'var' statement per scope.
$("item_content"+id).innerHTML; ---> var  <--- html=new Array();var popupTitle=

[WARNING] Try to use a single 'var' statement per scope.
;var html=new Array(); ---> var  <--- popupTitle="Moderation Preview Object";if(type==1)

[WARNING] Try to use a single 'var' statement per scope.
){if(type==1){ ---> var  <--- defaultWidth=700;xHeight=200;PositionY=

[WARNING] Try to use a single 'var' statement per scope.
,height){var content=URL; ---> var  <--- html=new Array();var popupTitle=

[WARNING] Try to use a single 'var' statement per scope.
;var html=new Array(); ---> var  <--- popupTitle="Profile Image";defaultWidth=height;defaultHeight=


-------------------------------------- Minify E:/www/2.7/public/js/hierarchy.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var AJX_hm_list; ---> var  <--- AJX_hm_my_list;var AJX_hm_create;var AJX_hm_action_log;var frm_hm_list

[WARNING] Try to use a single 'var' statement per scope.
var AJX_hm_list;var AJX_hm_my_list; ---> var  <--- AJX_hm_create;var AJX_hm_action_log;var frm_hm_list;var page_hierarchy

[WARNING] Try to use a single 'var' statement per scope.
var AJX_hm_list;var AJX_hm_my_list;var AJX_hm_create; ---> var  <--- AJX_hm_action_log;var frm_hm_list;var page_hierarchy=0;

[WARNING] Try to use a single 'var' statement per scope.
var AJX_hm_my_list;var AJX_hm_create;var AJX_hm_action_log; ---> var  <--- frm_hm_list;var page_hierarchy=0;var page_my_hierarchy=

[WARNING] Try to use a single 'var' statement per scope.
var AJX_hm_create;var AJX_hm_action_log;var frm_hm_list; ---> var  <--- page_hierarchy=0;var page_my_hierarchy=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frm_hm_list;var page_hierarchy=0; ---> var  <--- page_my_hierarchy=0;var my_center_hierarchies="";var 

[WARNING] Try to use a single 'var' statement per scope.
page_hierarchy=0;var page_my_hierarchy=0; ---> var  <--- my_center_hierarchies="";var frm_my_hm_list;Array.prototype

[WARNING] Try to use a single 'var' statement per scope.
page_my_hierarchy=0;var my_center_hierarchies=""; ---> var  <--- frm_my_hm_list;Array.prototype.findIndex=function(

[WARNING] Try to use a single 'var' statement per scope.
{var ctr=-1;for( ---> var  <--- i=0;i<this.length;

[WARNING] Try to use a single 'var' statement per scope.
i;}}returnctr;}; ---> var  <--- arrSelectedAccounts=new Array();functionselected_account_update(

[WARNING] Try to use a single 'var' statement per scope.
.cumulativeOffset($("selected_account_drag wrt")); ---> var  <--- x=mouse[0];var y=

[WARNING] Try to use a single 'var' statement per scope.
;var x=mouse[0]; ---> var  <--- y=mouse[1];for(i

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;i<=4;i++){ ---> eval <--- ("var list_size = $('list_"+i+"_title').getDimensions();");eval(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
eval("var list_size = $('list_"+i+"_title').getDimensions();"); ---> eval <--- ("var list_position = Position.cumulativeOffset($('list_"+i+"_title'));");if(

[WARNING] Try to use a single 'var' statement per scope.
droped_level=0;var list_id=""; ---> var  <--- canDrag=true;if(level!=1&&

[WARNING] Try to use a single 'var' statement per scope.
level!=1&&level!=0){ ---> var  <--- x=level-1;eval("var list = list_"+

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
){var x=level-1; ---> eval <--- ("var list = list_"+x);if(list.

[WARNING] Try to use a single 'var' statement per scope.
=="out"?"ls p15":"ls p15 ls_light");} ---> var  <--- accountIconType=new String();accountIconType[1

[WARNING] Try to use a single 'var' statement per scope.
{var element=$("list_tree"); ---> var  <--- tmp_array=new Array();var tmp_account_all,

[WARNING] Try to use a single 'var' statement per scope.
;var tmp_array=new Array(); ---> var  <--- tmp_account_all,tmp_account_delete,tmp_account_name,tmp_account_type;if(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;j<=4;j++){ ---> eval <--- ("var list = list_"+j);list.sort(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
){}functionremoveRecusiveLevel(level){ ---> eval <--- ("var list = list_"+level);if(list.

[WARNING] Try to use a single 'var' statement per scope.
var accountCanNotRemove=new Array(0); ---> var  <--- oldList=new Array(0);oldList=

[WARNING] Try to use a single 'var' statement per scope.
default_list_1,default_list_2,default_list_3,default_list_4); ---> var  <--- newList=new Array(0);newList=

[WARNING] Try to use a single 'var' statement per scope.
list_2,list_3,list_4);for( ---> var  <--- i=0;i<oldList.length;

[WARNING] Try to use a single 'var' statement per scope.
);if(index<0){ ---> var  <--- tmpArray=oldList[i].split("~|~"

[WARNING] Try to use a single 'var' statement per scope.
var accountCanNotRemove=new Array(0); ---> var  <--- oldList=new Array(0);oldList=

[WARNING] Try to use a single 'var' statement per scope.
default_list_2,default_list_3,default_list_4);for( ---> var  <--- i=0;i<oldList.length;

[WARNING] Try to use a single 'var' statement per scope.
<oldList.length;i++){ ---> var  <--- tmpArray=oldList[i].split("~|~"

[WARNING] Try to use a single 'var' statement per scope.
);alert(list_4);}} ---> var  <--- displayCenterHierarchyHistory_post_id_center;functiondisplayCenterHierarchyHistory_paging(page){displayCenterHierarchyHistory(

[WARNING] Try to use a single 'var' statement per scope.
(dtStr){var dtCh="/"; ---> var  <--- pos1=dtStr.indexOf(dtCh);var 

[WARNING] Try to use a single 'var' statement per scope.
pos1=dtStr.indexOf(dtCh); ---> var  <--- pos2=dtStr.indexOf(dtCh,pos1+

[WARNING] Try to use a single 'var' statement per scope.
indexOf(dtCh,pos1+1); ---> var  <--- strDay=dtStr.substring(0,pos1)

[WARNING] Try to use a single 'var' statement per scope.
dtStr.substring(0,pos1); ---> var  <--- strMonth=dtStr.substring(pos1+1,

[WARNING] Try to use a single 'var' statement per scope.
substring(pos1+1,pos2); ---> var  <--- strYear=dtStr.substring(pos2+1)

[WARNING] Try to use a single 'var' statement per scope.
:del_center_id}),reload_hierarchy_list);} ---> var  <--- reload_hierarchy_list=functionreload_hierarchy_list(){if(current_list_view

[WARNING] The function reload_hierarchy_list has already been declared in the same scope...
,reload_hierarchy_list);}var reload_hierarchy_list=function ---> reload_hierarchy_list <--- (){if(current_list_view=="all_hierarchy"){

[WARNING] Try to use a single 'var' statement per scope.
else{listMyHierarchy();}}; ---> var  <--- keep_message=false;functionTrimString(sInString){

[WARNING] Try to use a single 'var' statement per scope.
{var copyOption_bottom=new Array(); ---> var  <--- copyOption_top=new Array();var tmp;

[WARNING] Try to use a single 'var' statement per scope.
;var copyOption_top=new Array(); ---> var  <--- tmp;var k=0;var m=

[WARNING] Try to use a single 'var' statement per scope.
=new Array();var tmp; ---> var  <--- k=0;var m=0;optId

[WARNING] Try to use a single 'var' statement per scope.
;var tmp;var k=0; ---> var  <--- m=0;optId=$(optId)

[WARNING] Try to use a single 'var' statement per scope.
except.split(",");for( ---> var  <--- i=0;i<optId.options.

[WARNING] Try to use a single 'var' statement per scope.
].value)==-1){ ---> var  <--- t_class=optId[i].className!="undefine"

[WARNING] Try to use a single 'var' statement per scope.
optId[i].className:""; ---> var  <--- t=optId[i].text.toLowerCase

[WARNING] Try to use a single 'var' statement per scope.
;copyOption_top.sort();for( ---> var  <--- i=optId.options.length-1;

[WARNING] The variable i has already been declared in the same scope...
copyOption_top.sort();for(var  ---> i <--- =optId.options.length-1;i

[WARNING] Try to use a single 'var' statement per scope.
i]=null;}}for( ---> var  <--- i=0;i<copyOption_top.length;

[WARNING] The variable i has already been declared in the same scope...
]=null;}}for(var  ---> i <--- =0;i<copyOption_top.length;i

[WARNING] Try to use a single 'var' statement per scope.
[i].split("_|_"); ---> var  <--- t=optId.options.length;optId.

[WARNING] The variable t has already been declared in the same scope...
i].split("_|_");var  ---> t <--- =optId.options.length;optId.options

[WARNING] Try to use a single 'var' statement per scope.
tmp[3];}}for( ---> var  <--- i=0;i<copyOption_bottom.length;

[WARNING] The variable i has already been declared in the same scope...
[3];}}for(var  ---> i <--- =0;i<copyOption_bottom.length;i

[WARNING] Try to use a single 'var' statement per scope.
[i].split("_|_"); ---> var  <--- t=optId.options.length;optId.

[WARNING] The variable t has already been declared in the same scope...
i].split("_|_");var  ---> t <--- =optId.options.length;optId.options


-------------------------------------- Minify E:/www/2.7/public/js/marketing_alertsetup.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var frm_mo_list;var frm_mt_list;

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- frm_mo_list;var frm_mt_list;var frm_log;var frm_alert_list

[WARNING] Try to use a single 'var' statement per scope.
;var number_of_ajaxcall=0;var frm_mo_list; ---> var  <--- frm_mt_list;var frm_log;var frm_alert_list;var pageLog

[WARNING] Try to use a single 'var' statement per scope.
=0;var frm_mo_list;var frm_mt_list; ---> var  <--- frm_log;var frm_alert_list;var pageLog=0;

[WARNING] Try to use a single 'var' statement per scope.
var frm_mo_list;var frm_mt_list;var frm_log; ---> var  <--- frm_alert_list;var pageLog=0;var pageListMt=

[WARNING] Try to use a single 'var' statement per scope.
var frm_mt_list;var frm_log;var frm_alert_list; ---> var  <--- pageLog=0;var pageListMt=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frm_alert_list;var pageLog=0; ---> var  <--- pageListMt=0;var pageListMo=0;var 

[WARNING] Try to use a single 'var' statement per scope.
pageLog=0;var pageListMt=0; ---> var  <--- pageListMo=0;var AlertServiceList;var pageListAlert=

[WARNING] Try to use a single 'var' statement per scope.
pageListMt=0;var pageListMo=0; ---> var  <--- AlertServiceList;var pageListAlert=0;var exportExcelFunction=

[WARNING] Try to use a single 'var' statement per scope.
;var pageListMo=0;var AlertServiceList; ---> var  <--- pageListAlert=0;var exportExcelFunction="";var 

[WARNING] Try to use a single 'var' statement per scope.
;var AlertServiceList;var pageListAlert=0; ---> var  <--- exportExcelFunction="";var serviceMaxMt=0;var 

[WARNING] Try to use a single 'var' statement per scope.
pageListAlert=0;var exportExcelFunction=""; ---> var  <--- serviceMaxMt=0;var serviceMinMt=0;var 

[WARNING] Try to use a single 'var' statement per scope.
exportExcelFunction="";var serviceMaxMt=0; ---> var  <--- serviceMinMt=0;var editHTMLdata=null;var 

[WARNING] Try to use a single 'var' statement per scope.
serviceMaxMt=0;var serviceMinMt=0; ---> var  <--- editHTMLdata=null;var allowedAction="Cancel RP, Mode to Ban, Mode to Cocoon, Mode to Mute, Mode to Normal, and Mode to Real";function

[WARNING] Try to use a single 'var' statement per scope.
serviceMinMt=0;var editHTMLdata=null; ---> var  <--- allowedAction="Cancel RP, Mode to Ban, Mode to Cocoon, Mode to Mute, Mode to Normal, and Mode to Real";functionabortAjaxCalls(){for

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(log_right){displayHistoryList();} ---> eval <--- (startup_functions);}Event.observe(window

[WARNING] Try to use a single 'var' statement per scope.
serviceMinMt=0;var getFirstMax=true; ---> var  <--- id_service;var MIN_MT;var MAX_MT;var isTPA

[WARNING] Try to use a single 'var' statement per scope.
;var getFirstMax=true;var id_service; ---> var  <--- MIN_MT;var MAX_MT;var isTPA=0;

[WARNING] Try to use a single 'var' statement per scope.
=true;var id_service;var MIN_MT; ---> var  <--- MAX_MT;var isTPA=0;jQuery("#selected_services option"

[WARNING] Try to use a single 'var' statement per scope.
var id_service;var MIN_MT;var MAX_MT; ---> var  <--- isTPA=0;jQuery("#selected_services option").each

[WARNING] Try to use a single 'var' statement per scope.
){var f=document.fAdd; ---> var  <--- message=new drxMessage();if(f

[WARNING] Try to use a single 'var' statement per scope.
).val()==1){ ---> var  <--- length=jQuery("#recommended_message").val()

[WARNING] Try to use a single 'var' statement per scope.
(s){var result=true; ---> var  <--- numberDot=0;if(s[0]

[WARNING] Try to use a single 'var' statement per scope.
){var f=document.fAdd; ---> var  <--- message=new drxMessage();if(f

[WARNING] Try to use a single 'var' statement per scope.
).val()==1){ ---> var  <--- length=jQuery("#recommended_message").val()

[WARNING] Try to use a single 'var' statement per scope.
){var f=document.fFobiddenEdit; ---> var  <--- message=new drxMessage();if(f

[WARNING] Try to use a single 'var' statement per scope.
){var f=document.fFobiddenAdd; ---> var  <--- message=new drxMessage();if(f

[WARNING] Try to use a single 'var' statement per scope.
:"center_form"}),createAlertSetupForm_callback);} ---> var  <--- createAlertSetupForm_callback=functioncreateAlertSetupForm_callback(result){$j(

[WARNING] The function createAlertSetupForm_callback has already been declared in the same scope...
,createAlertSetupForm_callback);}var createAlertSetupForm_callback=function ---> createAlertSetupForm_callback <--- (result){$j("#recommended_message").bind

[WARNING] Try to use a single 'var' statement per scope.
var ml=document.forms.fDelete; ---> var  <--- len=ml.elements.length;var ret

[WARNING] Try to use a single 'var' statement per scope.
var len=ml.elements.length; ---> var  <--- ret="";for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
length;var ret="";for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- e=ml.elements[i];var 

[WARNING] Try to use a single 'var' statement per scope.
e=ml.elements[i]; ---> var  <--- gtri=e.name.split("_")

[WARNING] Try to use a single 'var' statement per scope.
var ml=document.forms.fDelete; ---> var  <--- len=ml.elements.length;var ret

[WARNING] Try to use a single 'var' statement per scope.
var len=ml.elements.length; ---> var  <--- ret="";for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
length;var ret="";for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- e=ml.elements[i];var 

[WARNING] Try to use a single 'var' statement per scope.
e=ml.elements[i]; ---> var  <--- gtri=e.name.split("_")

[WARNING] Try to use a single 'var' statement per scope.
("message","none");var pageListMt_or_Mo; ---> var  <--- function_call;var form_use;function_call=keyword_type=="mt"

[WARNING] Try to use a single 'var' statement per scope.
"none");var pageListMt_or_Mo;var function_call; ---> var  <--- form_use;function_call=keyword_type=="mt"?"getFobiddenWordsMtList":

[WARNING] Try to use a single 'var' statement per scope.
id:"historyPanel"}));}} ---> var  <--- displayList_callback=functiondisplayList_callback(result){};

[WARNING] The function displayList_callback has already been declared in the same scope...
));}}var displayList_callback=function ---> displayList_callback <--- (result){};functionswitchPanel(panel

[WARNING] Try to use a single 'var' statement per scope.
display=display;}});} ---> var  <--- post_log_list_order="DESC";var post_log_list_orderby="DATE_ACTION";function

[WARNING] Try to use a single 'var' statement per scope.
});}var post_log_list_order="DESC"; ---> var  <--- post_log_list_orderby="DATE_ACTION";functioncs_displayLogList_sort(sortby,sort

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(exportExcelFunction==""){return;} ---> eval <--- (exportExcelFunction);returntrue;}


-------------------------------------- Minify E:/www/2.7/public/js/marketing_audit_management.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var frm_nf_list;var frm_nf_log;

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- frm_nf_list;var frm_nf_log;var pageLog=0;

[WARNING] Try to use a single 'var' statement per scope.
;var number_of_ajaxcall=0;var frm_nf_list; ---> var  <--- frm_nf_log;var pageLog=0;var pageList=

[WARNING] Try to use a single 'var' statement per scope.
=0;var frm_nf_list;var frm_nf_log; ---> var  <--- pageLog=0;var pageList=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frm_nf_log;var pageLog=0; ---> var  <--- pageList=0;var frm_audit_search=null;function

[WARNING] Try to use a single 'var' statement per scope.
pageLog=0;var pageList=0; ---> var  <--- frm_audit_search=null;functionabortAjaxCalls(){for

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
{StartClock();displaySearchPanel(); ---> eval <--- (startup_function);displayHistoryList();}Event

[WARNING] Try to use a single 'var' statement per scope.
{var objAuditCriteria=$("audit_criteria"); ---> var  <--- objCoef=$("coef_form");var objServiceUsing=

[WARNING] Try to use a single 'var' statement per scope.
;var objCoef=$("coef_form"); ---> var  <--- objServiceUsing=$("list_service_using").options;var 

[WARNING] Try to use a single 'var' statement per scope.
objServiceUsing=$("list_service_using").options; ---> var  <--- message=new drxMessage();if(objAuditCriteria

[WARNING] Try to use a single 'var' statement per scope.
{var objAuditCriteria=$("audit_criteria"); ---> var  <--- objCoef=$("coef_form");var objServiceUsing=

[WARNING] Try to use a single 'var' statement per scope.
;var objCoef=$("coef_form"); ---> var  <--- objServiceUsing=$("list_service_using").options;var 

[WARNING] Try to use a single 'var' statement per scope.
objServiceUsing=$("list_service_using").options; ---> var  <--- message=new drxMessage();if(objAuditCriteria

[WARNING] Try to use a single 'var' statement per scope.
id:"historyPanel"}));}} ---> var  <--- displayList_callback=functiondisplayList_callback(result){};

[WARNING] The function displayList_callback has already been declared in the same scope...
));}}var displayList_callback=function ---> displayList_callback <--- (result){};functionswitchPanel(panel

[WARNING] Try to use a single 'var' statement per scope.
display=display;}});} ---> var  <--- post_log_list_order="DESC";var post_log_list_orderby="DATE_ACTION";function

[WARNING] Try to use a single 'var' statement per scope.
});}var post_log_list_order="DESC"; ---> var  <--- post_log_list_orderby="DATE_ACTION";functioncs_displayLogList_sort(sortby,sort


-------------------------------------- Minify E:/www/2.7/public/js/marketing_dialog.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var intvalMQ; ---> var  <--- frm_mq_list;var frm_dialog_list;var frm_dialog_comments_list;var AJX_msq

[WARNING] Try to use a single 'var' statement per scope.
var intvalMQ;var frm_mq_list; ---> var  <--- frm_dialog_list;var frm_dialog_comments_list;var AJX_msq;var AJX_log

[WARNING] Try to use a single 'var' statement per scope.
var intvalMQ;var frm_mq_list;var frm_dialog_list; ---> var  <--- frm_dialog_comments_list;var AJX_msq;var AJX_log;var AJX_logdetail

[WARNING] Try to use a single 'var' statement per scope.
var frm_mq_list;var frm_dialog_list;var frm_dialog_comments_list; ---> var  <--- AJX_msq;var AJX_log;var AJX_logdetail;var page_temp

[WARNING] Try to use a single 'var' statement per scope.
var frm_dialog_list;var frm_dialog_comments_list;var AJX_msq; ---> var  <--- AJX_log;var AJX_logdetail;var page_temp=0;

[WARNING] Try to use a single 'var' statement per scope.
var frm_dialog_comments_list;var AJX_msq;var AJX_log; ---> var  <--- AJX_logdetail;var page_temp=0;var page_DS=

[WARNING] Try to use a single 'var' statement per scope.
var AJX_msq;var AJX_log;var AJX_logdetail; ---> var  <--- page_temp=0;var page_DS=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var AJX_logdetail;var page_temp=0; ---> var  <--- page_DS=0;var VPRPChatroomArray=$H()

[WARNING] Try to use a single 'var' statement per scope.
page_temp=0;var page_DS=0; ---> var  <--- VPRPChatroomArray=$H();var logPage=0

[WARNING] Try to use a single 'var' statement per scope.
0;var VPRPChatroomArray=$H(); ---> var  <--- logPage=0;var frm_log;functiondisplayDialogSearch(

[WARNING] Try to use a single 'var' statement per scope.
$H();var logPage=0; ---> var  <--- frm_log;functiondisplayDialogSearch(){if(intvalMQ

[WARNING] Try to use a single 'var' statement per scope.
(str){var result=true; ---> var  <--- operator="";var strLength=str.length

[WARNING] Try to use a single 'var' statement per scope.
result=true;var operator=""; ---> var  <--- strLength=str.length;var subStr;if

[WARNING] Try to use a single 'var' statement per scope.
"";var strLength=str.length; ---> var  <--- subStr;if(strLength==1){if

[WARNING] Try to use a single 'var' statement per scope.
,numberPop){var result=true; ---> var  <--- serviceID=service.options[service.options.

[WARNING] Try to use a single 'var' statement per scope.
service.options.selectedIndex].value; ---> var  <--- errorMsg="";if(serviceID==-1

[WARNING] Try to use a single 'var' statement per scope.
(service){var result=true; ---> var  <--- serviceID=service.options[service.options.

[WARNING] Try to use a single 'var' statement per scope.
service.options.selectedIndex].value; ---> var  <--- errorMsg="";if(serviceID==-1

[WARNING] Try to use a single 'var' statement per scope.
}var dateObj=new drxDateValidator(); ---> var  <--- dateActivityFrom=dateObj.isValid($j("#txtDateActivity")

[WARNING] Try to use a single 'var' statement per scope.
("#txtDateActivity").val()); ---> var  <--- dateActivityTo=dateObj.isValid($j("#txtDateActivityUntil")

[WARNING] Try to use a single 'var' statement per scope.
(msg_invalid_range_content);returnfalse;}} ---> var  <--- argString=getAgrString();if(!argString

[WARNING] Try to use a single 'var' statement per scope.
(!argString){returnfalse;} ---> var  <--- serviceIndex=$("service_list").selectedIndex;$

[WARNING] Try to use a single 'var' statement per scope.
;var service=$("service_com_list"); ---> var  <--- rpNickName=$("txtRpNickName_com");var vpNickName=

[WARNING] Try to use a single 'var' statement per scope.
;var rpNickName=$("txtRpNickName_com"); ---> var  <--- vpNickName=$("txtVpNickName_com");var serviceID=

[WARNING] Try to use a single 'var' statement per scope.
;var vpNickName=$("txtVpNickName_com"); ---> var  <--- serviceID=service.options[service.options.

[WARNING] Try to use a single 'var' statement per scope.
service.options.selectedIndex].value; ---> var  <--- centerID=$("center_com_list").value;var 

[WARNING] Try to use a single 'var' statement per scope.
centerID=$("center_com_list").value; ---> var  <--- account=$("txtAccount_com");var comment=

[WARNING] Try to use a single 'var' statement per scope.
;var account=$("txtAccount_com"); ---> var  <--- comment=$("txtComment_com");var vp_chatroom=

[WARNING] Try to use a single 'var' statement per scope.
;var comment=$("txtComment_com"); ---> var  <--- vp_chatroom=$("vp_chatroom_list");var rp_chatroom=

[WARNING] Try to use a single 'var' statement per scope.
;var vp_chatroom=$("vp_chatroom_list"); ---> var  <--- rp_chatroom=$("rp_chatroom_list");var category=

[WARNING] Try to use a single 'var' statement per scope.
;var rp_chatroom=$("rp_chatroom_list"); ---> var  <--- category=$("rp_category_comment");var formValueArray=

[WARNING] Try to use a single 'var' statement per scope.
;var category=$("rp_category_comment"); ---> var  <--- formValueArray=new Array;var argString="";

[WARNING] Try to use a single 'var' statement per scope.
"rp_category_comment");var formValueArray=new Array; ---> var  <--- argString="";if(validateService(service)

[WARNING] Try to use a single 'var' statement per scope.
}argString+=formValueArray[i];} ---> var  <--- serviceIndex=$("service_com_list").selectedIndex;$

[WARNING] Try to use a single 'var' statement per scope.
{var service=$("service_list"); ---> var  <--- rpNickName=$("txtRpNickName");var vpNickName=

[WARNING] Try to use a single 'var' statement per scope.
;var rpNickName=$("txtRpNickName"); ---> var  <--- vpNickName=$("txtVpNickName");var initiator=

[WARNING] Try to use a single 'var' statement per scope.
;var vpNickName=$("txtVpNickName"); ---> var  <--- initiator=$("initiator");var vp_chatroom=

[WARNING] Try to use a single 'var' statement per scope.
;var initiator=$("initiator"); ---> var  <--- vp_chatroom=$("vp_chatroom");var rp_chatroom=

[WARNING] Try to use a single 'var' statement per scope.
;var vp_chatroom=$("vp_chatroom"); ---> var  <--- rp_chatroom=$("rp_chatroom");var beginDate=

[WARNING] Try to use a single 'var' statement per scope.
;var rp_chatroom=$("rp_chatroom"); ---> var  <--- beginDate=$("txtBeginDate");var lastDateMo=

[WARNING] Try to use a single 'var' statement per scope.
;var beginDate=$("txtBeginDate"); ---> var  <--- lastDateMo=$("txtDateLastMo");var numberRpMsg=

[WARNING] Try to use a single 'var' statement per scope.
;var lastDateMo=$("txtDateLastMo"); ---> var  <--- numberRpMsg=$("txtNbRpMsg");var numberVpMsg=

[WARNING] Try to use a single 'var' statement per scope.
;var numberRpMsg=$("txtNbRpMsg"); ---> var  <--- numberVpMsg=$("txtNbVpMsg");var ratioVpRp=

[WARNING] Try to use a single 'var' statement per scope.
;var numberVpMsg=$("txtNbVpMsg"); ---> var  <--- ratioVpRp=$("txtRatioVpRp");var numberEvent=

[WARNING] Try to use a single 'var' statement per scope.
;var ratioVpRp=$("txtRatioVpRp"); ---> var  <--- numberEvent=$("txtNbOfEvent");var numberPop=

[WARNING] Try to use a single 'var' statement per scope.
;var numberEvent=$("txtNbOfEvent"); ---> var  <--- numberPop=$("txtNbOfPop");var serviceID=

[WARNING] Try to use a single 'var' statement per scope.
;var numberPop=$("txtNbOfPop"); ---> var  <--- serviceID=service.options[service.options.

[WARNING] Try to use a single 'var' statement per scope.
service.options.selectedIndex].value; ---> var  <--- centerID=$("centers").value;var 

[WARNING] Try to use a single 'var' statement per scope.
centerID=$("centers").value; ---> var  <--- account=$("txtAccount");var beginDateUntil=

[WARNING] Try to use a single 'var' statement per scope.
;var account=$("txtAccount"); ---> var  <--- beginDateUntil=$("txtBeginDateUntil");var lastDateMoUntil=

[WARNING] Try to use a single 'var' statement per scope.
;var beginDateUntil=$("txtBeginDateUntil"); ---> var  <--- lastDateMoUntil=$("txtDateLastMoUntil");var category=

[WARNING] Try to use a single 'var' statement per scope.
;var lastDateMoUntil=$("txtDateLastMoUntil"); ---> var  <--- category=$("rp_category_dialog");var activityDate=

[WARNING] Try to use a single 'var' statement per scope.
;var category=$("rp_category_dialog"); ---> var  <--- activityDate=$("txtDateActivity");var activityDateUntil=

[WARNING] Try to use a single 'var' statement per scope.
;var activityDate=$("txtDateActivity"); ---> var  <--- activityDateUntil=$("txtDateActivityUntil");var formValueArray=

[WARNING] Try to use a single 'var' statement per scope.
;var activityDateUntil=$("txtDateActivityUntil"); ---> var  <--- formValueArray=new Array;var argString="";

[WARNING] Try to use a single 'var' statement per scope.
"txtDateActivityUntil");var formValueArray=new Array; ---> var  <--- argString="";if(validate(service,

[WARNING] Try to use a single 'var' statement per scope.
{var service=$("service_com_list"); ---> var  <--- rpNickName=$("txtRpNickName_com");var vpNickName=

[WARNING] Try to use a single 'var' statement per scope.
;var rpNickName=$("txtRpNickName_com"); ---> var  <--- vpNickName=$("txtVpNickName_com");var serviceID=

[WARNING] Try to use a single 'var' statement per scope.
;var vpNickName=$("txtVpNickName_com"); ---> var  <--- serviceID=service.options[service.options.

[WARNING] Try to use a single 'var' statement per scope.
service.options.selectedIndex].value; ---> var  <--- centerID=$("center_com_list").value;var 

[WARNING] Try to use a single 'var' statement per scope.
centerID=$("center_com_list").value; ---> var  <--- account=$("txtAccount_com");var comment=

[WARNING] Try to use a single 'var' statement per scope.
;var account=$("txtAccount_com"); ---> var  <--- comment=$("txtComment_com");var vp_chatroom=

[WARNING] Try to use a single 'var' statement per scope.
;var comment=$("txtComment_com"); ---> var  <--- vp_chatroom=$("vp_chatroom_list");var rp_chatroom=

[WARNING] Try to use a single 'var' statement per scope.
;var vp_chatroom=$("vp_chatroom_list"); ---> var  <--- rp_chatroom=$("rp_chatroom_list");var formValueArray=

[WARNING] Try to use a single 'var' statement per scope.
;var rp_chatroom=$("rp_chatroom_list"); ---> var  <--- formValueArray=new Array;var argString="";

[WARNING] Try to use a single 'var' statement per scope.
"rp_chatroom_list");var formValueArray=new Array; ---> var  <--- argString="";var category=$("rp_category_comment"

[WARNING] Try to use a single 'var' statement per scope.
=new Array;var argString=""; ---> var  <--- category=$("rp_category_comment");if(validateService

[WARNING] Try to use a single 'var' statement per scope.
(dtStr){var dtCh="/"; ---> var  <--- pos1=dtStr.indexOf(dtCh);var 

[WARNING] Try to use a single 'var' statement per scope.
pos1=dtStr.indexOf(dtCh); ---> var  <--- pos2=dtStr.indexOf(dtCh,pos1+

[WARNING] Try to use a single 'var' statement per scope.
indexOf(dtCh,pos1+1); ---> var  <--- strDay=dtStr.substring(0,pos1)

[WARNING] Try to use a single 'var' statement per scope.
dtStr.substring(0,pos1); ---> var  <--- strMonth=dtStr.substring(pos1+1,

[WARNING] Try to use a single 'var' statement per scope.
substring(pos1+1,pos2); ---> var  <--- strYear=dtStr.substring(pos2+1)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
screen.width-popupWidth)/2; ---> eval <--- ("windowPopup = window.open(URL, popup_name, 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width= "+popupWidth+" ,height = "+popupHeight+" ,left = "

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
screen.width-popupWidth)/2; ---> eval <--- ("windowPopup = window.open(URL, popup_name, 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width= "+popupWidth+" ,height = "+popupHeight+" ,left = "

[WARNING] Try to use a single 'var' statement per scope.
str_replace=="xxx"){returntrue;} ---> var  <--- str_replace_nd=str_replace.replace("xxx","")

[WARNING] Try to use a single 'var' statement per scope.
"yyy");returnstr_replace_nd=="yyy";} ---> var  <--- popupDialogAllocation;functionshowDialogAllocation(mq_id){URL=

[WARNING] Try to use a single 'var' statement per scope.
(flag){var VP_RP_Chatroom_cbo=""; ---> var  <--- RP_Chatroom_cbo='<option value="">[RP Chatroom]</option>';var VP_Chatroom_cbo='<option value="">[VP Chatroom]</option>';if

[WARNING] Try to use a single 'var' statement per scope.
VP_RP_Chatroom_cbo="";var RP_Chatroom_cbo='<option value="">[RP Chatroom]</option>'; ---> var  <--- VP_Chatroom_cbo='<option value="">[VP Chatroom]</option>';if(flag==1)

[WARNING] Try to use a single 'var' statement per scope.
'<option value="">[VP Chatroom]</option>';if(flag==1){ ---> var  <--- selectedService=$("service_list").value;}

[WARNING] Try to use a single 'var' statement per scope.
;}if(flag==2){ ---> var  <--- selectedService=$("service_com_list").value;}

[WARNING] The variable selectedService has already been declared in the same scope...
}if(flag==2){var  ---> selectedService <--- =$("service_com_list").value;}if

[WARNING] Try to use a single 'var' statement per scope.
(VPRPChatroomArray[selectedService]!=null){ ---> var  <--- VP_RP=VPRPChatroomArray[selectedService];var VP_RP_key_array=

[WARNING] Try to use a single 'var' statement per scope.
{var VP_RP=VPRPChatroomArray[selectedService]; ---> var  <--- VP_RP_key_array=VP_RP.keys();var VP_RP_name_array

[WARNING] Try to use a single 'var' statement per scope.
var VP_RP_key_array=VP_RP.keys(); ---> var  <--- VP_RP_name_array=VP_RP.values();var length

[WARNING] Try to use a single 'var' statement per scope.
var VP_RP_name_array=VP_RP.values(); ---> var  <--- length=VP_RP_key_array.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var length=VP_RP_key_array.length;for( ---> var  <--- i=0;i<length;i++

[WARNING] The symbol result is declared but is apparently never used.
This code can probably be written in a more compact way.
;}functionisNumberFormat(str){var  ---> result <--- =true;var operator="";var strLength

[WARNING] The symbol subStr is declared but is apparently never used.
This code can probably be written in a more compact way.
;var strLength=str.length;var  ---> subStr <--- ;if(strLength==1){if(


-------------------------------------- Minify E:/www/2.7/public/js/marketing_notification.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var frm_nf_list;var frm_moder_list;

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- frm_nf_list;var frm_moder_list;var frm_nf_log;var pageLog

[WARNING] Try to use a single 'var' statement per scope.
;var number_of_ajaxcall=0;var frm_nf_list; ---> var  <--- frm_moder_list;var frm_nf_log;var pageLog=0;

[WARNING] Try to use a single 'var' statement per scope.
=0;var frm_nf_list;var frm_moder_list; ---> var  <--- frm_nf_log;var pageLog=0;var pageList=

[WARNING] Try to use a single 'var' statement per scope.
var frm_nf_list;var frm_moder_list;var frm_nf_log; ---> var  <--- pageLog=0;var pageList=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frm_nf_log;var pageLog=0; ---> var  <--- pageList=0;var order_by="REPORT";var 

[WARNING] Try to use a single 'var' statement per scope.
pageLog=0;var pageList=0; ---> var  <--- order_by="REPORT";var order_type="ASC";var 

[WARNING] Try to use a single 'var' statement per scope.
pageList=0;var order_by="REPORT"; ---> var  <--- order_type="ASC";var pageModerLog=0;var 

[WARNING] Try to use a single 'var' statement per scope.
order_by="REPORT";var order_type="ASC"; ---> var  <--- pageModerLog=0;var pageModerList=0;var 

[WARNING] Try to use a single 'var' statement per scope.
order_type="ASC";var pageModerLog=0; ---> var  <--- pageModerList=0;var moder_order_by="REPORT";var 

[WARNING] Try to use a single 'var' statement per scope.
pageModerLog=0;var pageModerList=0; ---> var  <--- moder_order_by="REPORT";var moder_order_type="ASC";var 

[WARNING] Try to use a single 'var' statement per scope.
pageModerList=0;var moder_order_by="REPORT"; ---> var  <--- moder_order_type="ASC";var services_not_accessible=new Array(

[WARNING] Try to use a single 'var' statement per scope.
moder_order_by="REPORT";var moder_order_type="ASC"; ---> var  <--- services_not_accessible=new Array();var serviceMaxMt=

[WARNING] Try to use a single 'var' statement per scope.
;var services_not_accessible=new Array(); ---> var  <--- serviceMaxMt=0;var serviceMinMt=0;var 

[WARNING] Try to use a single 'var' statement per scope.
Array();var serviceMaxMt=0; ---> var  <--- serviceMinMt=0;var exportExcelFunction="";var 

[WARNING] Try to use a single 'var' statement per scope.
serviceMaxMt=0;var serviceMinMt=0; ---> var  <--- exportExcelFunction="";var editHTMLdata=null;var 

[WARNING] Try to use a single 'var' statement per scope.
serviceMinMt=0;var exportExcelFunction=""; ---> var  <--- editHTMLdata=null;var allowedAction="Cancel RP, Mode to Ban, Mode to Cocoon, Mode to Mute, Mode to Normal, and Mode to Real";function

[WARNING] Try to use a single 'var' statement per scope.
exportExcelFunction="";var editHTMLdata=null; ---> var  <--- allowedAction="Cancel RP, Mode to Ban, Mode to Cocoon, Mode to Mute, Mode to Normal, and Mode to Real";functionabortAjaxCalls(){for

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
=0;}functionloadAJAX(){ ---> eval <--- (startup_function);StartClock();displaySearchPanel(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
,loadAJAX);functionexportExcel(){ ---> eval <--- (exportExcelFunction);}functionbindJsRecommendMessage(){

[WARNING] Try to use a single 'var' statement per scope.
).val()==1){ ---> var  <--- length=jQuery("#recommended_message").val()

[WARNING] Try to use a single 'var' statement per scope.
pos:pos},callback_fEditReport);} ---> var  <--- callback_fEditReport=function(){bindJsRecommendMessage();

[WARNING] Try to use a single 'var' statement per scope.
).val()==1){ ---> var  <--- length=jQuery("#recommended_message").val()

[WARNING] Try to use a single 'var' statement per scope.
obj_srv=document.getElementsByName("key_srv"); ---> var  <--- obj_act=document.getElementsByName("key_act");var 

[WARNING] Try to use a single 'var' statement per scope.
obj_act=document.getElementsByName("key_act"); ---> var  <--- obj_mt=document.getElementsByName("key_mt");var 

[WARNING] Try to use a single 'var' statement per scope.
obj_mt=document.getElementsByName("key_mt"); ---> var  <--- arr_tmp=new Array();for(i

[WARNING] Try to use a single 'var' statement per scope.
var obj=document.fAdd.services; ---> var  <--- objActions=document.fAdd.actions;var d

[WARNING] Try to use a single 'var' statement per scope.
var objActions=document.fAdd.actions; ---> var  <--- d=document.getElementById("services_list");var 

[WARNING] Try to use a single 'var' statement per scope.
d=document.getElementById("services_list"); ---> var  <--- mt="";var msg=new drxMessage(

[WARNING] Try to use a single 'var' statement per scope.
("services_list");var mt=""; ---> var  <--- msg=new drxMessage();if(objActions

[WARNING] Try to use a single 'var' statement per scope.
d=document.getElementById("services_list"); ---> var  <--- obj_html=document.getElementById(service);var 

[WARNING] Try to use a single 'var' statement per scope.
obj_html=document.getElementById(service); ---> var  <--- serviceArr=service.split(";;");for

[WARNING] Try to use a single 'var' statement per scope.
;}d.removeChild(obj_html); ---> var  <--- elOptNew=document.createElement("option");elOptNew

[WARNING] Try to use a single 'var' statement per scope.
1];elOptNew.value=service; ---> var  <--- elSel=$("services_option");try{elSel

[WARNING] Try to use a single 'var' statement per scope.
var ml=document.forms.fDelete; ---> var  <--- len=ml.elements.length;var ret

[WARNING] Try to use a single 'var' statement per scope.
var len=ml.elements.length; ---> var  <--- ret=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
ret=new Array();for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- e=ml.elements[i];var 

[WARNING] Try to use a single 'var' statement per scope.
e=ml.elements[i]; ---> var  <--- gtri=e.name.split("_")

[WARNING] Try to use a single 'var' statement per scope.
id:"historyPanel"}));}} ---> var  <--- displayList_callback=functiondisplayList_callback(result){};

[WARNING] The function displayList_callback has already been declared in the same scope...
));}}var displayList_callback=function ---> displayList_callback <--- (result){};functionswitchPanel(panel

[WARNING] Try to use a single 'var' statement per scope.
display=display;}});} ---> var  <--- post_log_list_order="DESC";var post_log_list_orderby="DATE_ACTION";function

[WARNING] Try to use a single 'var' statement per scope.
});}var post_log_list_order="DESC"; ---> var  <--- post_log_list_orderby="DATE_ACTION";functioncs_displayLogList_sort(sortby,sort

[WARNING] Try to use a single 'var' statement per scope.
var obj=document.add.services; ---> var  <--- tempServiceArr=new Array();var tempServiceValue=

[WARNING] Try to use a single 'var' statement per scope.
;var tempServiceArr=new Array(); ---> var  <--- tempServiceValue=new Array();arrayService=new 

[WARNING] Try to use a single 'var' statement per scope.
var obj=document.add.services; ---> var  <--- objActions=document.add.actions;var d

[WARNING] Try to use a single 'var' statement per scope.
var objActions=document.add.actions; ---> var  <--- d=document.getElementById("services_list");var 

[WARNING] Try to use a single 'var' statement per scope.
d=document.getElementById("services_list"); ---> var  <--- iFlag=true;var msg=new drxMessage(

[WARNING] Try to use a single 'var' statement per scope.
("services_list");var iFlag=true; ---> var  <--- msg=new drxMessage();for(i

[WARNING] Try to use a single 'var' statement per scope.
{showMessage(msg_invalid_notification_type);return;} ---> var  <--- arr_data=getArrayService_Action("Mod");callAjaxJquery("ReportTypeMod"

[WARNING] Try to use a single 'var' statement per scope.
{showMessage(msg_invalid_notification_type);return;} ---> var  <--- arr_data=getArrayService_Action("mod");service_str=arr_data

[WARNING] Try to use a single 'var' statement per scope.
ml=document.forms["delete"]; ---> var  <--- len=ml.elements.length;var ret

[WARNING] Try to use a single 'var' statement per scope.
var len=ml.elements.length; ---> var  <--- ret=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
ret=new Array();for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- e=ml.elements[i];var 

[WARNING] Try to use a single 'var' statement per scope.
e=ml.elements[i]; ---> var  <--- gtri=e.name.split("_")

[WARNING] Try to use a single 'var' statement per scope.
$j("#recommended_action").val(); ---> var  <--- result=false;$j("#selected_services option").each

[WARNING] Try to use a single 'var' statement per scope.
serviceMinMt=0;var getFirstMax=true; ---> var  <--- id_service;var MIN_MT;var MAX_MT;var isTPA

[WARNING] Try to use a single 'var' statement per scope.
;var getFirstMax=true;var id_service; ---> var  <--- MIN_MT;var MAX_MT;var isTPA=0;

[WARNING] Try to use a single 'var' statement per scope.
=true;var id_service;var MIN_MT; ---> var  <--- MAX_MT;var isTPA=0;jQuery("#selected_services option"

[WARNING] Try to use a single 'var' statement per scope.
var id_service;var MIN_MT;var MAX_MT; ---> var  <--- isTPA=0;jQuery("#selected_services option").each


-------------------------------------- Minify E:/www/2.7/public/js/marketing_pop_message.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var searchLog_form_cache=null; ---> var  <--- searchList_form_cache="";var ajax_flag=new Array(

[WARNING] Try to use a single 'var' statement per scope.
searchLog_form_cache=null;var searchList_form_cache=""; ---> var  <--- ajax_flag=new Array();var number_of_ajaxcall=

[WARNING] Try to use a single 'var' statement per scope.
;var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var pageLog=0;var 

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- pageLog=0;var edit_check=0;var 

[WARNING] Try to use a single 'var' statement per scope.
number_of_ajaxcall=0;var pageLog=0; ---> var  <--- edit_check=0;var order_by="NICKNAME";var 

[WARNING] Try to use a single 'var' statement per scope.
pageLog=0;var edit_check=0; ---> var  <--- order_by="NICKNAME";var order_type="ASC";var 

[WARNING] Try to use a single 'var' statement per scope.
edit_check=0;var order_by="NICKNAME"; ---> var  <--- order_type="ASC";var pageList=0;var 

[WARNING] Try to use a single 'var' statement per scope.
order_by="NICKNAME";var order_type="ASC"; ---> var  <--- pageList=0;var log_order_by="DATE_ACTION";var 

[WARNING] Try to use a single 'var' statement per scope.
order_type="ASC";var pageList=0; ---> var  <--- log_order_by="DATE_ACTION";var log_order_type="DESC";var 

[WARNING] Try to use a single 'var' statement per scope.
pageList=0;var log_order_by="DATE_ACTION"; ---> var  <--- log_order_type="DESC";var exportExcelFunction="";function

[WARNING] Try to use a single 'var' statement per scope.
log_order_by="DATE_ACTION";var log_order_type="DESC"; ---> var  <--- exportExcelFunction="";functionabortAjaxCalls(){for

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
returnfalse;}displaySearchVpPop();} ---> eval <--- (startup_function);}Event.observe(window

[WARNING] Try to use a single 'var' statement per scope.
:using_session}),searchVpPop_callback);} ---> var  <--- searchVpPop_callback=functionsearchVpPop_callback(result){if(

[WARNING] The function searchVpPop_callback has already been declared in the same scope...
,searchVpPop_callback);}var searchVpPop_callback=function ---> searchVpPop_callback <--- (result){if(result==false)

[WARNING] Try to use a single 'var' statement per scope.
(e){var ob=this; ---> var  <--- maxChar=$j(this).attr("maxlength"

[WARNING] Try to use a single 'var' statement per scope.
),updatePopCallBack);returnfalse;} ---> var  <--- updatePopCallBack=functionupdatePopCallBack(result){displayVpPop(

[WARNING] The function updatePopCallBack has already been declared in the same scope...
;returnfalse;}var updatePopCallBack=function ---> updatePopCallBack <--- (result){displayVpPop();if(

[WARNING] Try to use a single 'var' statement per scope.
:searchList_form_cache}),displayVpPop_callback);} ---> var  <--- displayVpPop_callback=functiondisplayVpPop_callback(result){if(

[WARNING] The function displayVpPop_callback has already been declared in the same scope...
,displayVpPop_callback);}var displayVpPop_callback=function ---> displayVpPop_callback <--- (result){if(_window!="")

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("page"+id+" = window.open(URL, popup_name, 'toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=286,height=310,left = 362,top = 234');");}function

[WARNING] Try to use a single 'var' statement per scope.
"frmPopLogSearch");pagingLogAjax(0);} ---> var  <--- searchLog_callback=functionsearchLog_callback(result){if(

[WARNING] The function searchLog_callback has already been declared in the same scope...
(0);}var searchLog_callback=function ---> searchLog_callback <--- (result){if(result!=true)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(exportExcelFunction==""){return;} ---> eval <--- (exportExcelFunction);returntrue;}functionreloadRelatedElements

[WARNING] Try to use a single 'var' statement per scope.
).val();}else{ ---> var  <--- idService=id_service;}callAjaxJquery("VpPopMessage","reloadRelatedElements"

[WARNING] The variable idService has already been declared in the same scope...
.val();}else{var  ---> idService <--- =id_service;}callAjaxJquery("VpPopMessage","reloadRelatedElements",


-------------------------------------- Minify E:/www/2.7/public/js/marketing_quality.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var search_form_cache=""; ---> var  <--- searchLog_form_cache=null;var ajax_flag=new Array(

[WARNING] Try to use a single 'var' statement per scope.
search_form_cache="";var searchLog_form_cache=null; ---> var  <--- ajax_flag=new Array();var number_of_ajaxcall=

[WARNING] Try to use a single 'var' statement per scope.
;var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var pageLog=0;var 

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- pageLog=0;var pageList=0;function

[WARNING] Try to use a single 'var' statement per scope.
number_of_ajaxcall=0;var pageLog=0; ---> var  <--- pageList=0;functionloadAJAX(){StartClock

[WARNING] Try to use a single 'var' statement per scope.
"frmQualityLogSearch");pagingLogAjax(0);} ---> var  <--- searchLog_callback=functionsearchLog_callback(result){if(

[WARNING] The function searchLog_callback has already been declared in the same scope...
(0);}var searchLog_callback=function ---> searchLog_callback <--- (result){if(result!=true)

[WARNING] Try to use a single 'var' statement per scope.
,pos:pos});}} ---> var  <--- displayQuality_callback=functiondisplayQuality_callback(result){if(

[WARNING] The function displayQuality_callback has already been declared in the same scope...
});}}var displayQuality_callback=function ---> displayQuality_callback <--- (result){if(_window!="")

[WARNING] Try to use a single 'var' statement per scope.
(theForm){var tmpstr=""; ---> var  <--- z=0;for(z=0;

[WARNING] Try to use a single 'var' statement per scope.
quality_post=$("quality_add_quality").value; ---> var  <--- description_post=$("quality_add_description").value;var 

[WARNING] Try to use a single 'var' statement per scope.
description_post=$("quality_add_description").value; ---> var  <--- service=$("quality_service");var service_post=

[WARNING] Try to use a single 'var' statement per scope.
;var service=$("quality_service"); ---> var  <--- service_post=service.options[service.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
options[service.selectedIndex].value; ---> var  <--- maxOrder=0;if(service_post==-1

[WARNING] Try to use a single 'var' statement per scope.
{var datefrom=$("txtLogDateFrom"); ---> var  <--- dateto=$("txtLogDateTo");var account=

[WARNING] Try to use a single 'var' statement per scope.
;var dateto=$("txtLogDateTo"); ---> var  <--- account=$("txtLogAccount");var action=

[WARNING] Try to use a single 'var' statement per scope.
;var account=$("txtLogAccount"); ---> var  <--- action=$("txtLogAction");datefrom.value

[WARNING] The function clear_form_add has already been declared in the same scope...
0].selected=true;}function ---> clear_form_add <--- (){$("message").hide(

[WARNING] Try to use a single 'var' statement per scope.
name_update=$("quality_update_name").value; ---> var  <--- description_update=$("quality_update_description").value;var 

[WARNING] Try to use a single 'var' statement per scope.
description_update=$("quality_update_description").value; ---> var  <--- old_qualityID_update=$("quality_update_qualityID").value;var 

[WARNING] Try to use a single 'var' statement per scope.
old_qualityID_update=$("quality_update_qualityID").value; ---> var  <--- ordre_update=$("quality_update_ordre").value;var 

[WARNING] Try to use a single 'var' statement per scope.
ordre_update=$("quality_update_ordre").value; ---> var  <--- service_update=$("quality_update_service").value;var 

[WARNING] Try to use a single 'var' statement per scope.
service_update=$("quality_update_service").value; ---> var  <--- old_service=$("old_service").value;if

[WARNING] Try to use a single 'var' statement per scope.
{var service=$("quality_service"); ---> var  <--- service_post=service.options[service.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
options[service.selectedIndex].value; ---> var  <--- qualityOrdreString=qualityOrdreString;var myInt=0;if

[WARNING] The variable qualityOrdreString has already been declared in the same scope...
[service.selectedIndex].value;var  ---> qualityOrdreString <--- =qualityOrdreString;var myInt=0;if(

[WARNING] Try to use a single 'var' statement per scope.
].value;var qualityOrdreString=qualityOrdreString; ---> var  <--- myInt=0;if(service==-1

[WARNING] The symbol defaultService is declared but is apparently never used.
This code can probably be written in a more compact way.
loadAJAX(){StartClock();var  ---> defaultService <--- ="default";displayHistoryList();if(toolbox_quality_log_right

[WARNING] The symbol $H is declared but is apparently never used.
This code can probably be written in a more compact way.
(){callAJAX("report","getReportTypeList", ---> $H <--- ({id:"center_list",pagingPanel:"panel_pagination",


-------------------------------------- Minify E:/www/2.7/public/js/marketing_seniority.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var search_form_cache=null; ---> var  <--- searchLog_form_cache="";var ajax_flag=new Array(

[WARNING] Try to use a single 'var' statement per scope.
search_form_cache=null;var searchLog_form_cache=""; ---> var  <--- ajax_flag=new Array();var number_of_ajaxcall=

[WARNING] Try to use a single 'var' statement per scope.
;var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var pageLog=0;var 

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- pageLog=0;var pageList=0;function

[WARNING] Try to use a single 'var' statement per scope.
number_of_ajaxcall=0;var pageLog=0; ---> var  <--- pageList=0;functionabortAjaxCalls(){for

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
seniority_list_action){switchSearchPanel("divSearchSeniority");} ---> eval <--- (startup_function);displayHistoryList();}Event

[WARNING] Try to use a single 'var' statement per scope.
(theForm){var tmpstr=""; ---> var  <--- z=0;for(z=0;

[WARNING] Try to use a single 'var' statement per scope.
name_post=$("seniority_add_name").value; ---> var  <--- description_post=$("seniority_add_description").value;var 

[WARNING] Try to use a single 'var' statement per scope.
description_post=$("seniority_add_description").value; ---> var  <--- month_post=$("seniority_add_month").value;var 

[WARNING] Try to use a single 'var' statement per scope.
month_post=$("seniority_add_month").value; ---> var  <--- service=$("seniority_service");var service_post=

[WARNING] Try to use a single 'var' statement per scope.
;var service=$("seniority_service"); ---> var  <--- service_post=service.options[service.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
{var datefrom=$("txtLogDateFrom"); ---> var  <--- dateto=$("txtLogDateTo");var account=

[WARNING] Try to use a single 'var' statement per scope.
;var dateto=$("txtLogDateTo"); ---> var  <--- account=$("txtLogAccount");var action=

[WARNING] Try to use a single 'var' statement per scope.
;var account=$("txtLogAccount"); ---> var  <--- action=$("txtLogAction");datefrom.value

[WARNING] Try to use a single 'var' statement per scope.
name_update=$("seniority_update_name").value; ---> var  <--- description_update=$("seniority_update_description").value;var 

[WARNING] Try to use a single 'var' statement per scope.
description_update=$("seniority_update_description").value; ---> var  <--- old_seniorityID_update=$("seniority_update_seniorityID").value;var 

[WARNING] Try to use a single 'var' statement per scope.
old_seniorityID_update=$("seniority_update_seniorityID").value; ---> var  <--- month_update=$("seniority_update_month").value;var 

[WARNING] Try to use a single 'var' statement per scope.
month_update=$("seniority_update_month").value; ---> var  <--- service_update=$("seniority_update_service").value;var 

[WARNING] Try to use a single 'var' statement per scope.
service_update=$("seniority_update_service").value; ---> var  <--- old_service=$("old_service").value;if

[WARNING] Try to use a single 'var' statement per scope.
hdr_log_list);pageLogAjax(pageLog);} ---> var  <--- displaySeniority_callback=functiondisplaySeniority_callback(result){if(

[WARNING] The function displaySeniority_callback has already been declared in the same scope...
(pageLog);}var displaySeniority_callback=function ---> displaySeniority_callback <--- (result){if(_window!="")

[WARNING] Try to use a single 'var' statement per scope.
="DATE_ACTION";pageLogAjax(0);} ---> var  <--- searchLog_callback=functionsearchLog_callback(result){if(

[WARNING] The function searchLog_callback has already been declared in the same scope...
(0);}var searchLog_callback=function ---> searchLog_callback <--- (result){if(result!=true)


-------------------------------------- Minify E:/www/2.7/public/js/marketing_severity.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var frm_log;var pageList=

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- frm_log;var pageList=0;var pageLog=

[WARNING] Try to use a single 'var' statement per scope.
;var number_of_ajaxcall=0;var frm_log; ---> var  <--- pageList=0;var pageLog=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frm_log;var pageList=0; ---> var  <--- pageLog=0;var order_by="SEVERITY";var 

[WARNING] Try to use a single 'var' statement per scope.
pageList=0;var pageLog=0; ---> var  <--- order_by="SEVERITY";var order_type="ASC";function

[WARNING] Try to use a single 'var' statement per scope.
pageLog=0;var order_by="SEVERITY"; ---> var  <--- order_type="ASC";functionabortAjaxCalls(){for

[WARNING] Try to use a single 'var' statement per scope.
severity_update=$("severity_update_severity").value; ---> var  <--- description_update=$("severity_update_description").value;var 

[WARNING] Try to use a single 'var' statement per scope.
description_update=$("severity_update_description").value; ---> var  <--- old_severity_update=$("severity_update_old_severity").value;callAjaxJquery


-------------------------------------- Minify E:/www/2.7/public/js/marketing_speed.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var searchProfile_service_cache=""; ---> var  <--- searchLog_form_cache=null;var ajax_flag=new Array(

[WARNING] Try to use a single 'var' statement per scope.
searchProfile_service_cache="";var searchLog_form_cache=null; ---> var  <--- ajax_flag=new Array();var number_of_ajaxcall=

[WARNING] Try to use a single 'var' statement per scope.
;var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var pageLog=0;var 

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- pageLog=0;var pageList=0;function

[WARNING] Try to use a single 'var' statement per scope.
number_of_ajaxcall=0;var pageLog=0; ---> var  <--- pageList=0;functionloadAJAX(){StartClock

[WARNING] Try to use a single 'var' statement per scope.
"frmSpeedLogSearch");pagingLogAjax(0);} ---> var  <--- searchLog_callback=functionsearchLog_callback(result){if(

[WARNING] The function searchLog_callback has already been declared in the same scope...
(0);}var searchLog_callback=function ---> searchLog_callback <--- (result){if(result!=true)

[WARNING] Try to use a single 'var' statement per scope.
speed_post=$("speed_add_speed").value; ---> var  <--- name_post=$("speed_add_name").value;var 

[WARNING] Try to use a single 'var' statement per scope.
name_post=$("speed_add_name").value; ---> var  <--- description_post=$("speed_add_description").value;var 

[WARNING] Try to use a single 'var' statement per scope.
description_post=$("speed_add_description").value; ---> var  <--- service=$("speed_service");var service_post=

[WARNING] Try to use a single 'var' statement per scope.
;var service=$("speed_service"); ---> var  <--- service_post=service.options[service.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
options[service.selectedIndex].value; ---> var  <--- maxOrder=0;if(service_post==-1

[WARNING] Try to use a single 'var' statement per scope.
name_update=$("speed_update_name").value; ---> var  <--- description_update=$("speed_update_description").value;var 

[WARNING] Try to use a single 'var' statement per scope.
description_update=$("speed_update_description").value; ---> var  <--- old_speedID_update=$("speed_update_speedID").value;var 

[WARNING] Try to use a single 'var' statement per scope.
old_speedID_update=$("speed_update_speedID").value; ---> var  <--- ordre_update=$("speed_update_ordre").value;var 

[WARNING] Try to use a single 'var' statement per scope.
ordre_update=$("speed_update_ordre").value; ---> var  <--- service_update=$("speed_update_service").value;var 

[WARNING] Try to use a single 'var' statement per scope.
service_update=$("speed_update_service").value; ---> var  <--- speed_update=$("speed_update_speed").value;var 

[WARNING] Try to use a single 'var' statement per scope.
speed_update=$("speed_update_speed").value; ---> var  <--- old_service=$("old_service").value;$

[WARNING] Try to use a single 'var' statement per scope.
display=display;}});} ---> var  <--- displaySearchSpeed_callback=functiondisplaySearchSpeed_callback(result){if(

[WARNING] The function displaySearchSpeed_callback has already been declared in the same scope...
}});}var displaySearchSpeed_callback=function ---> displaySearchSpeed_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
{var service=$("speed_service"); ---> var  <--- service_post=service.options[service.selectedIndex]

[WARNING] Try to use a single 'var' statement per scope.
options[service.selectedIndex].value; ---> var  <--- speedOrdreString=speedOrdreString;var myInt=0;if

[WARNING] The variable speedOrdreString has already been declared in the same scope...
[service.selectedIndex].value;var  ---> speedOrdreString <--- =speedOrdreString;var myInt=0;if(

[WARNING] Try to use a single 'var' statement per scope.
].value;var speedOrdreString=speedOrdreString; ---> var  <--- myInt=0;if(service==-1


-------------------------------------- Minify E:/www/2.7/public/js/marketing_tag.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var AJX_tag,AJX_log; ---> var  <--- logPage=0;var sortField,sortType,frmLog

[WARNING] Try to use a single 'var' statement per scope.
AJX_tag,AJX_log;var logPage=0; ---> var  <--- sortField,sortType,frmLog;functiondisplayTagList()

[WARNING] Try to use a single 'var' statement per scope.
else{switchHistoryPanel("historyList");}} ---> var  <--- formBackup;var assignTagListJs=function(result){

[WARNING] Try to use a single 'var' statement per scope.
("historyList");}}var formBackup; ---> var  <--- assignTagListJs=function(result){if(!

[WARNING] Try to use a single 'var' statement per scope.
{var arrSubmit=new Array(); ---> var  <--- arrContentUnique=new Array();var nbEmptyElement=

[WARNING] Try to use a single 'var' statement per scope.
;var arrContentUnique=new Array(); ---> var  <--- nbEmptyElement=0;var nbDuplicateContent=0;$j

[WARNING] Try to use a single 'var' statement per scope.
Array();var nbEmptyElement=0; ---> var  <--- nbDuplicateContent=0;$j("#availableTag div.blurry_line").each

[WARNING] Try to use a single 'var' statement per scope.
$j(this).children(); ---> var  <--- content=trimAll(div.eq(0)

[WARNING] Try to use a single 'var' statement per scope.
(".field").val()); ---> var  <--- tag=trimAll(div.eq(1)

[WARNING] Try to use a single 'var' statement per scope.
tag:tag});}); ---> var  <--- sms=new drxMessage();if(nbDuplicateContent

[WARNING] Try to use a single 'var' statement per scope.
},submitCallBack);returntrue;} ---> var  <--- submitCallBack=function(result){if(result

[WARNING] Try to use a single 'var' statement per scope.
,{id:"historyPanel"});} ---> var  <--- list_tag_log;functiondisplayLogList(){changeNavigation(hdr_log_list


-------------------------------------- Minify E:/www/2.7/public/js/moderation.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
currentClass=="btn_selected"?"btn":"btn_selected"); ---> var  <--- exclusiveId=elm.attr("id");if


-------------------------------------- Minify E:/www/2.7/public/js/popup.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var _window_pop_up=""; ---> var  <--- popup_name="";var viewStyle=0;var 

[WARNING] Try to use a single 'var' statement per scope.
_window_pop_up="";var popup_name=""; ---> var  <--- viewStyle=0;var currentPage="";function

[WARNING] Try to use a single 'var' statement per scope.
popup_name="";var viewStyle=0; ---> var  <--- currentPage="";functionswitchPanel(panel){

[WARNING] Try to use a single 'var' statement per scope.
service_id:service_id},displayDetailVpPop_callback);} ---> var  <--- displayDetailVpPop_callback=functiondisplayDetailVpPop_callback(result){if(

[WARNING] The function displayDetailVpPop_callback has already been declared in the same scope...
,displayDetailVpPop_callback);}var displayDetailVpPop_callback=function ---> displayDetailVpPop_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
,"popMaxSize","txtCharLeft");}}; ---> var  <--- serviceMaxMtPopup=160;functioncheckPopMaxSize(text_id,max_id

[WARNING] Try to use a single 'var' statement per scope.
("frmVpPop")},submitVpPop_callback);} ---> var  <--- submitVpPop_callback=functionsubmitVpPop_callback(result){if(

[WARNING] The function submitVpPop_callback has already been declared in the same scope...
,submitVpPop_callback);}var submitVpPop_callback=function ---> submitVpPop_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
:event_id}),displayMessageMO_callback);} ---> var  <--- displayMessage_callback=functiondisplayMessage_callback(result){if(

[WARNING] The function displayMessage_callback has already been declared in the same scope...
,displayMessageMO_callback);}var displayMessage_callback=function ---> displayMessage_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
:1}),displayAlertAllocate_callback);} ---> var  <--- displayAlertAllocate_callback=functiondisplayAlertAllocate_callback(result){arr_account_allocate=

[WARNING] The function displayAlertAllocate_callback has already been declared in the same scope...
,displayAlertAllocate_callback);}var displayAlertAllocate_callback=function ---> displayAlertAllocate_callback <--- (result){arr_account_allocate=result;$j(

[WARNING] Try to use a single 'var' statement per scope.
:event_id}),displayMessageMO_callback);} ---> var  <--- displayMessageMO_callback=functiondisplayMessageMO_callback(result){checkLen(

[WARNING] The function displayMessageMO_callback has already been declared in the same scope...
,displayMessageMO_callback);}var displayMessageMO_callback=function ---> displayMessageMO_callback <--- (result){checkLen($("txtAlertMessage")

[WARNING] Try to use a single 'var' statement per scope.
:id_center}),loadAllocatedAccount_callback);} ---> var  <--- loadAllocatedAccount_callback=functionloadAllocatedAccount_callback(result){$j(

[WARNING] The function loadAllocatedAccount_callback has already been declared in the same scope...
,loadAllocatedAccount_callback);}var loadAllocatedAccount_callback=function ---> loadAllocatedAccount_callback <--- (result){$j("SELECT").selectBox

[WARNING] Try to use a single 'var' statement per scope.
"",["account_SelectBox"]);}; ---> var  <--- loadDialogAllocation_callback=functionloadDialogAllocation_callback(result){$j(

[WARNING] The function loadDialogAllocation_callback has already been declared in the same scope...
]);};var loadDialogAllocation_callback=function ---> loadDialogAllocation_callback <--- (result){$j("SELECT").selectBox

[WARNING] Try to use a single 'var' statement per scope.
comment}),deleteComment_callback);}} ---> var  <--- deleteComment_callback=functiondeleteComment_callback(result){if(

[WARNING] The function deleteComment_callback has already been declared in the same scope...
deleteComment_callback);}}var deleteComment_callback=function ---> deleteComment_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
:id_dialog}),displayCommentHistory_callback);} ---> var  <--- displayCommentHistory_callback=functiondisplayCommentHistory_callback(){if(_window_pop_up

[WARNING] The function displayCommentHistory_callback has already been declared in the same scope...
,displayCommentHistory_callback);}var displayCommentHistory_callback=function ---> displayCommentHistory_callback <--- (){if(_window_pop_up!=null&&_window_pop_up

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
){popup_name="remote_"+id;} ---> eval <--- ("page"+id+" = window.open(URL, popup_name, 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=0,width=300,height=308,left = 362,top = 234');");}function

[WARNING] Try to use a single 'var' statement per scope.
1}),displayPanelVPInfo_callback);}} ---> var  <--- displayPanelVPInfo_callback=functiondisplayPanelVPInfo_callback(result){if(

[WARNING] The function displayPanelVPInfo_callback has already been declared in the same scope...
displayPanelVPInfo_callback);}}var displayPanelVPInfo_callback=function ---> displayPanelVPInfo_callback <--- (result){if(_window_pop_up!=null&&

[WARNING] Try to use a single 'var' statement per scope.
1}),displayPanelRealProfileInfo_callback);}} ---> var  <--- displayPanelRealProfileInfo_callback=functiondisplayPanelRealProfileInfo(result){if(

[WARNING] The function displayPanelRealProfileInfo has already been declared in the same scope...
displayPanelRealProfileInfo_callback);}}var displayPanelRealProfileInfo_callback=function ---> displayPanelRealProfileInfo <--- (result){if(_window_pop_up!=null&&


-------------------------------------- Minify E:/www/2.7/public/js/rotateImage - Copy.js-------------------------------------- 


Usage: java -jar yuicompressor-x.y.z.jar [options] [input file]

Global Options
  -h, --help                Displays this information
  --type <js|css>           Specifies the type of the input file
  --charset <charset>       Read the input file using <charset>
  --line-break <column>     Insert a line break after the specified column number
  -v, --verbose             Display informational messages and warnings
  -o <file>                 Place the output into <file>. Defaults to stdout.
                            Multiple files can be processed using the following syntax:
                            java -jar yuicompressor.jar -o '.css$:-min.css' *.css
                            java -jar yuicompressor.jar -o '.js$:-min.js' *.js

JavaScript Options
  --nomunge                 Minify only, do not obfuscate
  --preserve-semi           Preserve all semicolons
  --disable-optimizations   Disable all micro optimizations

If no input file is specified, it defaults to stdin. In this case, the 'type'
option is required. Otherwise, the 'type' option is required only if the input
file extension is neither 'js' nor 'css'.


-------------------------------------- Minify E:/www/2.7/public/js/rotateImage.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
,rotationAngle);}}var canvas; ---> var  <--- zoomLevel;var gkhead;var imageWidth,imageHeight;

[WARNING] Try to use a single 'var' statement per scope.
;}}var canvas;var zoomLevel; ---> var  <--- gkhead;var imageWidth,imageHeight;var ctx;

[WARNING] Try to use a single 'var' statement per scope.
var canvas;var zoomLevel;var gkhead; ---> var  <--- imageWidth,imageHeight;var ctx;var lastX,

[WARNING] Try to use a single 'var' statement per scope.
;var gkhead;var imageWidth,imageHeight; ---> var  <--- ctx;var lastX,lastY;var dragStart,

[WARNING] Try to use a single 'var' statement per scope.
;var imageWidth,imageHeight;var ctx; ---> var  <--- lastX,lastY;var dragStart,dragged;var 

[WARNING] Try to use a single 'var' statement per scope.
;var ctx;var lastX,lastY; ---> var  <--- dragStart,dragged;var scaleFactor=1.1;var 

[WARNING] Try to use a single 'var' statement per scope.
lastX,lastY;var dragStart,dragged; ---> var  <--- scaleFactor=1.1;var imageLoaded=false;var 

[WARNING] Try to use a single 'var' statement per scope.
dragStart,dragged;var scaleFactor=1.1; ---> var  <--- imageLoaded=false;var initStopped=false;function

[WARNING] Try to use a single 'var' statement per scope.
scaleFactor=1.1;var imageLoaded=false; ---> var  <--- initStopped=false;functionredraw(){var 

[WARNING] Try to use a single 'var' statement per scope.
transformedPoint(-1,-1); ---> var  <--- p2=ctx.transformedPoint(canvas.width,

[WARNING] Try to use a single 'var' statement per scope.
p2.y-p1.y); ---> var  <--- defaultLeft=(canvas.width/2-imageWidth

[WARNING] Try to use a single 'var' statement per scope.
width/2-imageWidth/2); ---> var  <--- defaultTop=(canvas.height/2-imageHeight

[WARNING] Try to use a single 'var' statement per scope.
("#imgViewImage").attr("alt"); ---> var  <--- adjustHeight=imageHeight;var adjustWidth=imageWidth;if

[WARNING] Try to use a single 'var' statement per scope.
("alt");var adjustHeight=imageHeight; ---> var  <--- adjustWidth=imageWidth;if(angle/90==

[WARNING] Try to use a single 'var' statement per scope.
?screen.availWidth:screen.width; ---> var  <--- scH=screen.availHeight?screen.availHeight:

[WARNING] Try to use a single 'var' statement per scope.
/180);redraw();} ---> var  <--- zoom=function(clicks){zoomLevel+=clicks

[WARNING] Try to use a single 'var' statement per scope.
pt.x,pt.y); ---> var  <--- factor=Math.pow(scaleFactor,clicks)

[WARNING] Try to use a single 'var' statement per scope.
y);redraw();}; ---> var  <--- handleScroll=function(evt){var delta=

[WARNING] Try to use a single 'var' statement per scope.
}else{initStopped=true;}} ---> var  <--- originWidth;var originHeight;functioninitZoom(){

[WARNING] Try to use a single 'var' statement per scope.
initStopped=true;}}var originWidth; ---> var  <--- originHeight;functioninitZoom(){$j("#tinyLoadingImg"

[WARNING] Try to use a single 'var' statement per scope.
("#imgViewImage").attr("alt"); ---> var  <--- adjustHeight=imageHeight;var adjustWidth=imageWidth;if

[WARNING] Try to use a single 'var' statement per scope.
("alt");var adjustHeight=imageHeight; ---> var  <--- adjustWidth=imageWidth;if(angle/90==

[WARNING] Try to use a single 'var' statement per scope.
?screen.availWidth:screen.width; ---> var  <--- scH=screen.availHeight?screen.availHeight:

[WARNING] Try to use a single 'var' statement per scope.
,speedup){var defaultStart=start; ---> var  <--- t;var repeat=function(){action

[WARNING] Try to use a single 'var' statement per scope.
{var defaultStart=start;var t; ---> var  <--- repeat=function(){action();

[WARNING] Try to use a single 'var' statement per scope.
document.createElementNS("http://www.w3.org/2000/svg","svg"); ---> var  <--- xform=svg.createSVGMatrix();ctx.

[WARNING] Try to use a single 'var' statement per scope.
function(){returnxform;}; ---> var  <--- savedTransforms=[];var save=ctx.

[WARNING] Try to use a single 'var' statement per scope.
;};var savedTransforms=[]; ---> var  <--- save=ctx.save;ctx.save=

[WARNING] Try to use a single 'var' statement per scope.
save.call(ctx);}; ---> var  <--- restore=ctx.restore;ctx.restore=

[WARNING] Try to use a single 'var' statement per scope.
restore.call(ctx);}; ---> var  <--- scale=ctx.scale;ctx.scale=

[WARNING] Try to use a single 'var' statement per scope.
ctx,sx,sy);}; ---> var  <--- rotate=ctx.rotate;ctx.rotate=

[WARNING] Try to use a single 'var' statement per scope.
call(ctx,radians);}; ---> var  <--- translate=ctx.translate;ctx.translate=

[WARNING] Try to use a single 'var' statement per scope.
ctx,dx,dy);}; ---> var  <--- transform=ctx.transform;ctx.transform=

[WARNING] Try to use a single 'var' statement per scope.
d,e,f);}; ---> var  <--- setTransform=ctx.setTransform;ctx.setTransform=

[WARNING] Try to use a single 'var' statement per scope.
d,e,f);}; ---> var  <--- pt=svg.createSVGPoint();ctx.


-------------------------------------- Minify E:/www/2.7/public/js/statistic.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] The function displayLevelList_callback has already been declared in the same scope...
displayLevelList_callback);}}var displayLevelList_callback=function ---> displayLevelList_callback <--- (result){if(result!=true)


-------------------------------------- Minify E:/www/2.7/public/js/statistic_moderation_kpi.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var arrFr=new Array(9); ---> var  <--- arrUs=new Array(9);var nbFr

[WARNING] Try to use a single 'var' statement per scope.
var arrUs=new Array(9); ---> var  <--- nbFr=0;var nbUs=0;visibleDiv

[WARNING] Try to use a single 'var' statement per scope.
(9);var nbFr=0; ---> var  <--- nbUs=0;visibleDiv("divStatKpiService","")

[WARNING] The function searchStat has already been declared in the same scope...
}}}}}var searchStat=function ---> searchStat <--- (result){if(result!=true)

[WARNING] Try to use a single 'var' statement per scope.
){hideEmptyObject();}}; ---> var  <--- searchLBStat_callback=functionsearchLBStat_callback(result){if(

[WARNING] The function searchLBStat_callback has already been declared in the same scope...
);}};var searchLBStat_callback=function ---> searchLBStat_callback <--- (result){if(result!=true)

[WARNING] Try to use a single 'var' statement per scope.
);showMessage(smarty_const_STAT_SEARCH_FIRST);}} ---> var  <--- displayStatVpKpi_callback=functiondisplayStatVpKpi_callback(result){if(

[WARNING] The function displayStatVpKpi_callback has already been declared in the same scope...
smarty_const_STAT_SEARCH_FIRST);}}var displayStatVpKpi_callback=function ---> displayStatVpKpi_callback <--- (result){if(result!=true)

[WARNING] Try to use a single 'var' statement per scope.
"frmSearchModeration")}),callbackModFunction);} ---> var  <--- callbackModFunction=functioncallbackModFunction(result){selectedTag=

[WARNING] The function callbackModFunction has already been declared in the same scope...
,callbackModFunction);}var callbackModFunction=function ---> callbackModFunction <--- (result){selectedTag=countSelectedTag();

[WARNING] Try to use a single 'var' statement per scope.
"frmSearchModeration")}),callbackModFunction);} ---> var  <--- defaultMainWidth=0;var defaultRightWidth=0;function

[WARNING] Try to use a single 'var' statement per scope.
callbackModFunction);}var defaultMainWidth=0; ---> var  <--- defaultRightWidth=0;functionadjustScreen(){numberOfTags

[WARNING] The symbol arrFr is declared but is apparently never used.
This code can probably be written in a more compact way.
{AJX_loading_service.abort();}var  ---> arrFr <--- =new Array(9);var arrUs=

[WARNING] The symbol arrUs is declared but is apparently never used.
This code can probably be written in a more compact way.
arrFr=new Array(9);var  ---> arrUs <--- =new Array(9);var nbFr=

[WARNING] The symbol nbFr is declared but is apparently never used.
This code can probably be written in a more compact way.
arrUs=new Array(9);var  ---> nbFr <--- =0;var nbUs=0;visibleDiv(

[WARNING] The symbol nbUs is declared but is apparently never used.
This code can probably be written in a more compact way.
9);var nbFr=0;var  ---> nbUs <--- =0;visibleDiv("divStatKpiService","");


-------------------------------------- Minify E:/www/2.7/public/js/statistic_total_ani_kpi.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] The function callbackFunction has already been declared in the same scope...
}});}var callbackFunction=function ---> callbackFunction <--- (result){arrFr=new Array(10

[WARNING] Try to use a single 'var' statement per scope.
(arrIdCenters,0);}}; ---> var  <--- callbackFunction_displayEventAniKpi=functioncallbackFunction_displayEventAniKpi(result){if(

[WARNING] The function callbackFunction_displayEventAniKpi has already been declared in the same scope...
);}};var callbackFunction_displayEventAniKpi=function ---> callbackFunction_displayEventAniKpi <--- (result){if(result!=true)

[WARNING] Try to use a single 'var' statement per scope.
);}hideEmptyObject();}; ---> var  <--- hideEmptyContainer=functionhideEmptyContainer(result){hideMessage(

[WARNING] The function hideEmptyContainer has already been declared in the same scope...
();};var hideEmptyContainer=function ---> hideEmptyContainer <--- (result){hideMessage();objContainer=

[WARNING] Try to use a single 'var' statement per scope.
}var MO=arrValue[0]; ---> var  <--- MT=arrValue[1];var MT_PER_TO=

[WARNING] Try to use a single 'var' statement per scope.
;var MT=arrValue[1]; ---> var  <--- MT_PER_TO=MT/MO;var CONVERTED_HO=arrValue

[WARNING] Try to use a single 'var' statement per scope.
];var MT_PER_TO=MT/MO; ---> var  <--- CONVERTED_HO=arrValue[3];var PERCENT_CONVERTED_HO=

[WARNING] Try to use a single 'var' statement per scope.
;var CONVERTED_HO=arrValue[3]; ---> var  <--- PERCENT_CONVERTED_HO=arrValue[4];var DIALOG=

[WARNING] Try to use a single 'var' statement per scope.
;var PERCENT_CONVERTED_HO=arrValue[4]; ---> var  <--- DIALOG=arrValue[5];var MO_PER_DIALOG=

[WARNING] Try to use a single 'var' statement per scope.
;var DIALOG=arrValue[5]; ---> var  <--- MO_PER_DIALOG=MO/DIALOG;var TIME_ANIM=convertSecondToTime

[WARNING] Try to use a single 'var' statement per scope.
];var MO_PER_DIALOG=MO/DIALOG; ---> var  <--- TIME_ANIM=convertSecondToTime(arrValue[7]/devidedValue

[WARNING] Try to use a single 'var' statement per scope.
(arrValue[7]/devidedValue); ---> var  <--- TIME_WAIT=convertSecondToTime(arrValue[8]/devidedValue

[WARNING] Try to use a single 'var' statement per scope.
(arrValue[8]/devidedValue); ---> var  <--- TOTAL_HO=parseInt(arrValue[9]);

[WARNING] Try to use a single 'var' statement per scope.
);if(MT==0){ ---> var  <--- PERCENT_CONVERTED_HO=0;}else{var PERCENT_CONVERTED_HO=

[WARNING] The variable PERCENT_CONVERTED_HO has already been declared in the same scope...
;if(MT==0){var  ---> PERCENT_CONVERTED_HO <--- =0;}else{var PERCENT_CONVERTED_HO=(

[WARNING] Try to use a single 'var' statement per scope.
{var PERCENT_CONVERTED_HO=0;}else{ ---> var  <--- PERCENT_CONVERTED_HO=(CONVERTED_HO*100)/MT;

[WARNING] The variable PERCENT_CONVERTED_HO has already been declared in the same scope...
var PERCENT_CONVERTED_HO=0;}else{var  ---> PERCENT_CONVERTED_HO <--- =(CONVERTED_HO*100)/MT;}

[WARNING] Try to use a single 'var' statement per scope.
}var EVENT=arrValue[0]; ---> var  <--- MO=parseInt(arrValue[1]);

[WARNING] Try to use a single 'var' statement per scope.
=parseInt(arrValue[1]); ---> var  <--- MT=parseInt(arrValue[2]);

[WARNING] Try to use a single 'var' statement per scope.
=parseInt(arrValue[2]); ---> var  <--- FAILED_MT=arrValue[4];var DIALOG=

[WARNING] Try to use a single 'var' statement per scope.
;var FAILED_MT=arrValue[4]; ---> var  <--- DIALOG=arrValue[7];var MO_PER_DIALOG=

[WARNING] Try to use a single 'var' statement per scope.
;var DIALOG=arrValue[7]; ---> var  <--- MO_PER_DIALOG=MO/DIALOG;var MT_PER_TO=MT

[WARNING] Try to use a single 'var' statement per scope.
];var MO_PER_DIALOG=MO/DIALOG; ---> var  <--- MT_PER_TO=MT/MO;var TIME_ANIM=convertSecondToTime

[WARNING] Try to use a single 'var' statement per scope.
DIALOG;var MT_PER_TO=MT/MO; ---> var  <--- TIME_ANIM=convertSecondToTime(arrValue[9]/devidedValue

[WARNING] Try to use a single 'var' statement per scope.
(arrValue[9]/devidedValue); ---> var  <--- TIME_WAIT=convertSecondToTime(arrValue[10]/devidedValue

[WARNING] Try to use a single 'var' statement per scope.
(arrValue[10]/devidedValue); ---> var  <--- CONVERTED_HO=arrValue[5];var PERCENT_CONVERTED_HO=

[WARNING] Try to use a single 'var' statement per scope.
;var CONVERTED_HO=arrValue[5]; ---> var  <--- PERCENT_CONVERTED_HO=arrValue[6];var TOTAL_HO=

[WARNING] Try to use a single 'var' statement per scope.
;var PERCENT_CONVERTED_HO=arrValue[6]; ---> var  <--- TOTAL_HO=parseInt(arrValue[11]);

[WARNING] Try to use a single 'var' statement per scope.
);if(MT==0){ ---> var  <--- PERCENT_CONVERTED_HO=0;}else{var PERCENT_CONVERTED_HO=

[WARNING] The variable PERCENT_CONVERTED_HO has already been declared in the same scope...
;if(MT==0){var  ---> PERCENT_CONVERTED_HO <--- =0;}else{var PERCENT_CONVERTED_HO=(

[WARNING] Try to use a single 'var' statement per scope.
{var PERCENT_CONVERTED_HO=0;}else{ ---> var  <--- PERCENT_CONVERTED_HO=(CONVERTED_HO*100)/MT;

[WARNING] The variable PERCENT_CONVERTED_HO has already been declared in the same scope...
var PERCENT_CONVERTED_HO=0;}else{var  ---> PERCENT_CONVERTED_HO <--- =(CONVERTED_HO*100)/MT;}

[WARNING] Try to use a single 'var' statement per scope.
.value,"totalLableRegion","cbRegion");} ---> var  <--- exportInterval;functionpopupExport(url){$(

[WARNING] Try to use a single 'var' statement per scope.
"frmSearchTotalKpi")}),callbackAuditKpiFunction);} ---> var  <--- callbackAuditKpiFunction=functioncallbackFunction(){arrFr=new 

[WARNING] The function callbackFunction has already been declared in the same scope...
,callbackAuditKpiFunction);}var callbackAuditKpiFunction=function ---> callbackFunction <--- (){arrFr=new Array(0,

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
||idService==""){return;} ---> eval <--- ("var m = "+$j("#vpServiceData").html(

[WARNING] Try to use a single 'var' statement per scope.
]["R"])!="undefined"){ ---> var  <--- room=m[idService]["R"];

[WARNING] Try to use a single 'var' statement per scope.
"frmSearchVpKpi")}),loadAllServiceVpKpi);} ---> var  <--- loadAllServiceVpKpi=functioncallBackVpKpi(){var arrIdServices=

[WARNING] The symbol TOTAL_HO is declared but is apparently never used.
This code can probably be written in a more compact way.
arrValue[8]/devidedValue);var  ---> TOTAL_HO <--- =parseInt(arrValue[9]);if

[WARNING] The symbol TOTAL_HO is declared but is apparently never used.
This code can probably be written in a more compact way.
var PERCENT_CONVERTED_HO=arrValue[6];var  ---> TOTAL_HO <--- =parseInt(arrValue[11]);if


-------------------------------------- Minify E:/www/2.7/public/js/super_account_audit.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
,AJX_loglist,AJX_logdetail,AJAX_auditlist,AJX_showhistory; ---> var  <--- frm_log=null;var frm_account_audit=null;var 

[WARNING] Try to use a single 'var' statement per scope.
AJAX_auditlist,AJX_showhistory;var frm_log=null; ---> var  <--- frm_account_audit=null;var logPage,accountAuditPage=0

[WARNING] Try to use a single 'var' statement per scope.
frm_log=null;var frm_account_audit=null; ---> var  <--- logPage,accountAuditPage=0;var accountCategoryIds;var 

[WARNING] Try to use a single 'var' statement per scope.
null;var logPage,accountAuditPage=0; ---> var  <--- accountCategoryIds;var origin_accountCategoryIds;var historyPage;var id_account_history

[WARNING] Try to use a single 'var' statement per scope.
logPage,accountAuditPage=0;var accountCategoryIds; ---> var  <--- origin_accountCategoryIds;var historyPage;var id_account_history,id_service_history;

[WARNING] Try to use a single 'var' statement per scope.
=0;var accountCategoryIds;var origin_accountCategoryIds; ---> var  <--- historyPage;var id_account_history,id_service_history;var frm_dialog_list=

[WARNING] Try to use a single 'var' statement per scope.
var accountCategoryIds;var origin_accountCategoryIds;var historyPage; ---> var  <--- id_account_history,id_service_history;var frm_dialog_list=null;var 

[WARNING] Try to use a single 'var' statement per scope.
;var historyPage;var id_account_history,id_service_history; ---> var  <--- frm_dialog_list=null;var dialog_page;functiondisplayAccountAuditList(

[WARNING] Try to use a single 'var' statement per scope.
id_account_history,id_service_history;var frm_dialog_list=null; ---> var  <--- dialog_page;functiondisplayAccountAuditList(){$j(".paging_excel"

[WARNING] Try to use a single 'var' statement per scope.
grade_from=$("last_audit_grade_less_equal").value; ---> var  <--- grade_to=$("last_audit_grade_greater_equal").value;if

[WARNING] Try to use a single 'var' statement per scope.
;returnfalse;}returntrue;} ---> var  <--- displayList_callback=functiondisplayList_callback(result){};

[WARNING] The function displayList_callback has already been declared in the same scope...
}returntrue;}var displayList_callback=function ---> displayList_callback <--- (result){};functionsortAccAudit(order_by

[WARNING] Try to use a single 'var' statement per scope.
display=display;}});} ---> var  <--- reLoadList=functionreLoadList(result){if(

[WARNING] The function reLoadList has already been declared in the same scope...
}});}var reLoadList=function ---> reLoadList <--- (result){if(result){showMessage

[WARNING] Try to use a single 'var' statement per scope.
id_service=$("id_service_edit").value; ---> var  <--- id_account=$("id_account_edit").value;if

[WARNING] Try to use a single 'var' statement per scope.
{var numberRpMsg=$("txtNbRpMsg"); ---> var  <--- numberVpMsg=$("txtNbVpMsg");var ratioVpRp=

[WARNING] Try to use a single 'var' statement per scope.
;var numberVpMsg=$("txtNbVpMsg"); ---> var  <--- ratioVpRp=$("txtRatioVpRp");var numberEvent=

[WARNING] Try to use a single 'var' statement per scope.
;var ratioVpRp=$("txtRatioVpRp"); ---> var  <--- numberEvent=$("txtNbOfEvent");var numberPop=

[WARNING] Try to use a single 'var' statement per scope.
;var numberEvent=$("txtNbOfEvent"); ---> var  <--- numberPop=$("txtNbOfPop");returnvalidate(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
screen.width-popupWidth)/2; ---> eval <--- ("windowPopup = window.open(URL, popup_name, 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width= "+popupWidth+" ,height = "+popupHeight+" ,left = "

[WARNING] Try to use a single 'var' statement per scope.
("coef_"+id).innerHTML); ---> var  <--- grade=parseFloat($("grade_"+id)

[WARNING] Try to use a single 'var' statement per scope.
.options.selectedIndex].value); ---> var  <--- old_value=parseFloat($("final_"+id)

[WARNING] Try to use a single 'var' statement per scope.
("final_"+id).innerHTML); ---> var  <--- finalValue=(coef*grade);$(

[WARNING] Try to use a single 'var' statement per scope.
"final_"+id).innerHTML=finalValue; ---> var  <--- totalFinal=parseFloat($("backup_totalFinal").value

[WARNING] Try to use a single 'var' statement per scope.
$("totalFinal").innerHTML=totalFinal; ---> var  <--- totalCoef=parseFloat($("ogirin_totalCoef").value

[WARNING] Try to use a single 'var' statement per scope.
($("ogirin_totalCoef").value); ---> var  <--- percentGrade=parseFloat((totalFinal*100)/

[WARNING] Try to use a single 'var' statement per scope.
[i].innerHTML=backup_value;} ---> var  <--- totalCoef=parseFloat($("ogirin_totalCoef").value

[WARNING] Try to use a single 'var' statement per scope.
($("ogirin_totalCoef").value); ---> var  <--- percentGrade=parseFloat((totalFinal*100)/

[WARNING] Try to use a single 'var' statement per scope.
var arrComment=new Array("&raquo;"); ---> var  <--- safeHTML=function(S){returnS.

[WARNING] The symbol id_account is declared but is apparently never used.
This code can probably be written in a more compact way.
=$("id_service_edit").value;var  ---> id_account <--- =$("id_account_edit").value;if(

[WARNING] The symbol URL is declared but is apparently never used.
This code can probably be written in a more compact way.
==""){message_type="none";} ---> URL <--- =URL_ROOT+"supervision/popupDialog/id/"+id_dialog+"/service/"+id_service


-------------------------------------- Minify E:/www/2.7/public/js/super_account_category.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var AJX_quickview,AJX_loglist,AJX_logdetail,AJX_rplist; ---> var  <--- frm_log,frm_account_category;var logPage,accountCategoryPage;var 

[WARNING] Try to use a single 'var' statement per scope.
AJX_logdetail,AJX_rplist;var frm_log,frm_account_category; ---> var  <--- logPage,accountCategoryPage;var accountCategoryIds;var origin_accountCategoryIds;

[WARNING] Try to use a single 'var' statement per scope.
frm_log,frm_account_category;var logPage,accountCategoryPage; ---> var  <--- accountCategoryIds;var origin_accountCategoryIds;functiondisplayAccountCategoryList(){

[WARNING] Try to use a single 'var' statement per scope.
;var logPage,accountCategoryPage;var accountCategoryIds; ---> var  <--- origin_accountCategoryIds;functiondisplayAccountCategoryList(){$("divActionLogList"

[WARNING] Try to use a single 'var' statement per scope.
:frm_account_category}),displayList_callback);} ---> var  <--- displayList_callback=functiondisplayList_callback(result){try{

[WARNING] The function displayList_callback has already been declared in the same scope...
,displayList_callback);}var displayList_callback=function ---> displayList_callback <--- (result){try{objContainer=$(

[WARNING] Try to use a single 'var' statement per scope.
{var objContainer=$("accountCategoryListContainer"); ---> var  <--- div_arr=objContainer.getElementsByClassName("field");var 

[WARNING] Try to use a single 'var' statement per scope.
div_arr=objContainer.getElementsByClassName("field"); ---> var  <--- gold_category_arr=objContainer.getElementsByClassName("gold_category_ckb");var 

[WARNING] Try to use a single 'var' statement per scope.
gold_category_arr=objContainer.getElementsByClassName("gold_category_ckb"); ---> var  <--- silver_category_arr=objContainer.getElementsByClassName("silver_category_ckb");var 

[WARNING] Try to use a single 'var' statement per scope.
silver_category_arr=objContainer.getElementsByClassName("silver_category_ckb"); ---> var  <--- bronze_category_arr=objContainer.getElementsByClassName("bronze_category_ckb");for

[WARNING] The function changeSituationCategoryOfAnAccountService has already been declared in the same scope...
).disabled=true;}}function ---> changeSituationCategoryOfAnAccountService <--- (id){id_name=id.id;

[WARNING] Try to use a single 'var' statement per scope.
origin_accountCategoryIds}),reLoadList);}} ---> var  <--- reLoadList=functionreLoadList(result){if(

[WARNING] The function reLoadList has already been declared in the same scope...
reLoadList);}}var reLoadList=function ---> reLoadList <--- (result){if(result){showMessage


-------------------------------------- Minify E:/www/2.7/public/js/super_moderation.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var AJX_list; ---> var  <--- AJX_log;var AJX_create;var frmSearch;var frmCommentSearch

[WARNING] Try to use a single 'var' statement per scope.
var AJX_list;var AJX_log; ---> var  <--- AJX_create;var frmSearch;var frmCommentSearch;var frmObjectSearch

[WARNING] Try to use a single 'var' statement per scope.
var AJX_list;var AJX_log;var AJX_create; ---> var  <--- frmSearch;var frmCommentSearch;var frmObjectSearch;var tagObject

[WARNING] Try to use a single 'var' statement per scope.
var AJX_log;var AJX_create;var frmSearch; ---> var  <--- frmCommentSearch;var frmObjectSearch;var tagObject="";

[WARNING] Try to use a single 'var' statement per scope.
var AJX_create;var frmSearch;var frmCommentSearch; ---> var  <--- frmObjectSearch;var tagObject="";var frm_log;

[WARNING] Try to use a single 'var' statement per scope.
var frmSearch;var frmCommentSearch;var frmObjectSearch; ---> var  <--- tagObject="";var frm_log;var edit_check=

[WARNING] Try to use a single 'var' statement per scope.
;var frmObjectSearch;var tagObject=""; ---> var  <--- frm_log;var edit_check=0;var pageMainList=

[WARNING] Try to use a single 'var' statement per scope.
;var tagObject="";var frm_log; ---> var  <--- edit_check=0;var pageMainList=0;var 

[WARNING] Try to use a single 'var' statement per scope.
;var frm_log;var edit_check=0; ---> var  <--- pageMainList=0;var logPage=0;var 

[WARNING] Try to use a single 'var' statement per scope.
edit_check=0;var pageMainList=0; ---> var  <--- logPage=0;var commentPage=0;var 

[WARNING] Try to use a single 'var' statement per scope.
pageMainList=0;var logPage=0; ---> var  <--- commentPage=0;var selectedTagRemoderate="";var 

[WARNING] Try to use a single 'var' statement per scope.
logPage=0;var commentPage=0; ---> var  <--- selectedTagRemoderate="";var selectedTagOld="";var 

[WARNING] Try to use a single 'var' statement per scope.
commentPage=0;var selectedTagRemoderate=""; ---> var  <--- selectedTagOld="";var selectedType=1;var 

[WARNING] Try to use a single 'var' statement per scope.
selectedTagRemoderate="";var selectedTagOld=""; ---> var  <--- selectedType=1;var selectedTag=1;var 

[WARNING] Try to use a single 'var' statement per scope.
selectedTagOld="";var selectedType=1; ---> var  <--- selectedTag=1;var modQueueId;var idService;

[WARNING] Try to use a single 'var' statement per scope.
selectedType=1;var selectedTag=1; ---> var  <--- modQueueId;var idService;searchObjectDivPanel=["divToolBox",

[WARNING] Try to use a single 'var' statement per scope.
;var selectedTag=1;var modQueueId; ---> var  <--- idService;searchObjectDivPanel=["divToolBox","divObjectSearch","divObjectSearchNotification"

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
list_right||delete_right||comment_search_right||object_search_right){ ---> eval <--- (startup_functions);}else{showMessage(no_right_to_access

[WARNING] Try to use a single 'var' statement per scope.
{sms.push(msg_invalid_range_content);} ---> var  <--- dateObj=new drxDateValidator();var dateFrom=

[WARNING] Try to use a single 'var' statement per scope.
}var dateObj=new drxDateValidator(); ---> var  <--- dateFrom=dateObj.isValid($j("#object_date_from")

[WARNING] Try to use a single 'var' statement per scope.
("#object_date_from").val()); ---> var  <--- dateTo=dateObj.isValid($j("#object_date_to")

[WARNING] Try to use a single 'var' statement per scope.
className=="btn_selected"?"btn":"btn_selected";} ---> var  <--- elm=$j(item);var exclusiveId=

[WARNING] Try to use a single 'var' statement per scope.
}var elm=$j(item); ---> var  <--- exclusiveId=elm.attr("id");if

[WARNING] Try to use a single 'var' statement per scope.
"btn_selected");selectedTagRemoderate="";for( ---> var  <--- i=0;i<objectSearchEdit.length;

[WARNING] Try to use a single 'var' statement per scope.
selectedTagNameArray=new Array();for( ---> var  <--- i=0;i<selectedTagName.length;

[WARNING] The variable i has already been declared in the same scope...
=new Array();for(var  ---> i <--- =0;i<selectedTagName.length;i

[WARNING] Try to use a single 'var' statement per scope.
}selectedTagNameArray.sort();for( ---> var  <--- i=0;i<selectedTagNameArray.length;

[WARNING] The variable i has already been declared in the same scope...
selectedTagNameArray.sort();for(var  ---> i <--- =0;i<selectedTagNameArray.length;i


-------------------------------------- Minify E:/www/2.7/public/js/super_vision_alert.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var frm_alert_log;var frm_alert_list;

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- frm_alert_log;var frm_alert_list;var frm_moderation_list;var pageModNoti

[WARNING] Try to use a single 'var' statement per scope.
;var number_of_ajaxcall=0;var frm_alert_log; ---> var  <--- frm_alert_list;var frm_moderation_list;var pageModNoti=0;

[WARNING] Try to use a single 'var' statement per scope.
=0;var frm_alert_log;var frm_alert_list; ---> var  <--- frm_moderation_list;var pageModNoti=0;var currentSortAlert=

[WARNING] Try to use a single 'var' statement per scope.
var frm_alert_log;var frm_alert_list;var frm_moderation_list; ---> var  <--- pageModNoti=0;var currentSortAlert=0;Event

[WARNING] Try to use a single 'var' statement per scope.
;var frm_moderation_list;var pageModNoti=0; ---> var  <--- currentSortAlert=0;Event.observe(window,

[WARNING] Try to use a single 'var' statement per scope.
observe(window,"load",loadAJAX); ---> var  <--- clickFromForm=0;var currentAccountStatistic=0;var 

[WARNING] Try to use a single 'var' statement per scope.
,loadAJAX);var clickFromForm=0; ---> var  <--- currentAccountStatistic=0;var actionValues=Array()

[WARNING] Try to use a single 'var' statement per scope.
clickFromForm=0;var currentAccountStatistic=0; ---> var  <--- actionValues=Array();var id_service;var 

[WARNING] Try to use a single 'var' statement per scope.
0;var actionValues=Array(); ---> var  <--- id_service;var id_dialog;var id_vp;var id_rp

[WARNING] Try to use a single 'var' statement per scope.
actionValues=Array();var id_service; ---> var  <--- id_dialog;var id_vp;var id_rp;var _window_pop_up

[WARNING] Try to use a single 'var' statement per scope.
();var id_service;var id_dialog; ---> var  <--- id_vp;var id_rp;var _window_pop_up="";

[WARNING] Try to use a single 'var' statement per scope.
var id_service;var id_dialog;var id_vp; ---> var  <--- id_rp;var _window_pop_up="";var order_log=

[WARNING] Try to use a single 'var' statement per scope.
var id_dialog;var id_vp;var id_rp; ---> var  <--- _window_pop_up="";var order_log="DESC";var 

[WARNING] Try to use a single 'var' statement per scope.
;var id_rp;var _window_pop_up=""; ---> var  <--- order_log="DESC";var order_by_log="DATE_ACTION";var 

[WARNING] Try to use a single 'var' statement per scope.
_window_pop_up="";var order_log="DESC"; ---> var  <--- order_by_log="DATE_ACTION";var viewStyle=0;var 

[WARNING] Try to use a single 'var' statement per scope.
order_log="DESC";var order_by_log="DATE_ACTION"; ---> var  <--- viewStyle=0;var currentPage="";var 

[WARNING] Try to use a single 'var' statement per scope.
order_by_log="DATE_ACTION";var viewStyle=0; ---> var  <--- currentPage="";var eventId="";var 

[WARNING] Try to use a single 'var' statement per scope.
viewStyle=0;var currentPage=""; ---> var  <--- eventId="";var viewStyleDetail=0;var 

[WARNING] Try to use a single 'var' statement per scope.
currentPage="";var eventId=""; ---> var  <--- viewStyleDetail=0;var currentPageDetail="";var 

[WARNING] Try to use a single 'var' statement per scope.
eventId="";var viewStyleDetail=0; ---> var  <--- currentPageDetail="";var alertRecordPosition=0;var 

[WARNING] Try to use a single 'var' statement per scope.
viewStyleDetail=0;var currentPageDetail=""; ---> var  <--- alertRecordPosition=0;var alertNextFlag=0;var 

[WARNING] Try to use a single 'var' statement per scope.
currentPageDetail="";var alertRecordPosition=0; ---> var  <--- alertNextFlag=0;var formView=false;var 

[WARNING] Try to use a single 'var' statement per scope.
alertRecordPosition=0;var alertNextFlag=0; ---> var  <--- formView=false;var hasPrevious=false;var 

[WARNING] Try to use a single 'var' statement per scope.
alertNextFlag=0;var formView=false; ---> var  <--- hasPrevious=false;var hasNext=false;var 

[WARNING] Try to use a single 'var' statement per scope.
formView=false;var hasPrevious=false; ---> var  <--- hasNext=false;var modEventId="";var 

[WARNING] Try to use a single 'var' statement per scope.
hasPrevious=false;var hasNext=false; ---> var  <--- modEventId="";var modAlertRecordPosition=0;var 

[WARNING] Try to use a single 'var' statement per scope.
hasNext=false;var modEventId=""; ---> var  <--- modAlertRecordPosition=0;var modAlertNextFlag=0;function

[WARNING] Try to use a single 'var' statement per scope.
modEventId="";var modAlertRecordPosition=0; ---> var  <--- modAlertNextFlag=0;functionloadAJAX(){if

[WARNING] Try to use a single 'var' statement per scope.
="DESC";pagingEventLog(0);} ---> var  <--- displayEventLogList_callback=functiondisplayEventLogList_callback(result){if(

[WARNING] The function displayEventLogList_callback has already been declared in the same scope...
(0);}var displayEventLogList_callback=function ---> displayEventLogList_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
}),displaySuperAlertList_callback);}}} ---> var  <--- displaySuperAlertList_callback=functiondisplaySuperAlertList_callback(result){if(

[WARNING] The function displaySuperAlertList_callback has already been declared in the same scope...
);}}}var displaySuperAlertList_callback=function ---> displaySuperAlertList_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
"divSearchAlertPanel"}),displayAlertSearch_callback);}} ---> var  <--- displayAlertSearch_callback=functiondisplayAlertSearch_callback(result){cboRecordType=

[WARNING] The function displayAlertSearch_callback has already been declared in the same scope...
displayAlertSearch_callback);}}var displayAlertSearch_callback=function ---> displayAlertSearch_callback <--- (result){cboRecordType=$("cboRecordType")

[WARNING] Try to use a single 'var' statement per scope.
event_id}),displayAlertDetail_callback);}} ---> var  <--- displayAlertDetail_callback=functiondisplayAlertDetail_callback(result){$j(

[WARNING] The function displayAlertDetail_callback has already been declared in the same scope...
displayAlertDetail_callback);}}var displayAlertDetail_callback=function ---> displayAlertDetail_callback <--- (result){$j(document).unbind

[WARNING] Try to use a single 'var' statement per scope.
("keyup",AlertDetailNavAssignJsHandler);}}; ---> var  <--- displayBoxesDetailRelation=functiondisplayBoxesDetailRelation(result){arrResult=

[WARNING] The function displayBoxesDetailRelation has already been declared in the same scope...
);}};var displayBoxesDetailRelation=function ---> displayBoxesDetailRelation <--- (result){arrResult=result.split(

[WARNING] Try to use a single 'var' statement per scope.
:event_id}),displayAlertReply_callback);} ---> var  <--- displayBoxesReplyRelation=functiondisplayBoxesReplyRelation(result){arrResult=

[WARNING] The function displayBoxesReplyRelation has already been declared in the same scope...
,displayAlertReply_callback);}var displayBoxesReplyRelation=function ---> displayBoxesReplyRelation <--- (result){arrResult=result.split(

[WARNING] Try to use a single 'var' statement per scope.
),displayAlertReply_callback);returnfalse;} ---> var  <--- displayAlertReply_callback=functiondisplayAlertReply_callback(result){$j(

[WARNING] The function displayAlertReply_callback has already been declared in the same scope...
;returnfalse;}var displayAlertReply_callback=function ---> displayAlertReply_callback <--- (result){$j(document).unbind

[WARNING] Try to use a single 'var' statement per scope.
"Mode to Cocoon with Msg","Mode to Mute with Msg","Mode to Real with Msg","Mode to Normal with Msg"]; ---> var  <--- arrChangeModeRight=new Array(_right_mode_to_ban,_right_mode_to_cocoon,_right_mode_to_mute

[WARNING] Try to use a single 'var' statement per scope.
replyAlert_callback);}}}}}} ---> var  <--- replyAlert_callback=functionreplyAlert_callback(result){if(

[WARNING] The function replyAlert_callback has already been declared in the same scope...
}}}}}var replyAlert_callback=function ---> replyAlert_callback <--- (result){if(result==true)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("windowMessageQueue = window.open(URL, popup_name, 'toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=286,height=170,left = 362,top = 234');");}functiondisplayPopupAllocate(event_id)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("windowMessageQueue = window.open(URL, popup_name, 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width=286,height=370,left = 362,top = 234');");}functiondisplayPopupVpGroupAllocate(event_id)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("windowMessageQueue = window.open(URL, popup_name, 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width=286,height=330,left = 362,top = 234');");}functiondisplayPopupMessageMO(event_id)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("windowMessageQueue = window.open(URL, popup_name, 'toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=286,height=170,left = 362,top = 234');");}functiondisplaySendMT(event_id)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("windowMessageQueue = window.open(URL, popup_name, 'toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=286,height=170,left = 362,top = 234');");}functiondisplayCancelRpWithMsg(event_id)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("windowMessageQueue = window.open(URL, popup_name, 'toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=286,height=170,left = 362,top = 234');");}functiondisplayChangeModeMsg(event_id)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("windowMessageQueue = window.open(URL, popup_name, 'toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=286,height=170,left = 362,top = 234');");}functionsendMessage_reply(message,

[WARNING] Try to use a single 'var' statement per scope.
show();}});} ---> var  <--- serviceMaxMt=0;var serviceMinMt=0;function

[WARNING] Try to use a single 'var' statement per scope.
});}var serviceMaxMt=0; ---> var  <--- serviceMinMt=0;functioncheckLenMt(Target){

[WARNING] Try to use a single 'var' statement per scope.
:id_dialog}),displayCommentHistory_callback);} ---> var  <--- displayCommentHistory_callback=functiondisplayCommentHistory_callback(){if(_window_pop_up

[WARNING] The function displayCommentHistory_callback has already been declared in the same scope...
,displayCommentHistory_callback);}var displayCommentHistory_callback=function ---> displayCommentHistory_callback <--- (){if(_window_pop_up!=null&&_window_pop_up

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("windowCommentHistory = window.open(URL, popup_name, 'toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=286,height=210,left = 362,top = 234');");}functionpopup_comment_close(_window)

[WARNING] Try to use a single 'var' statement per scope.
_window_pop_up=_window;displayCommentHistory();} ---> var  <--- deleteComment_callback=functiondeleteComment_callback(result){if(

[WARNING] The function deleteComment_callback has already been declared in the same scope...
displayCommentHistory();}var deleteComment_callback=function ---> deleteComment_callback <--- (result){if(result==true)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
){popup_name="remote_"+id;} ---> eval <--- ("page"+id+" = window.open(URL, popup_name, 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=0,width=300,height=308,left = 362,top = 234');");}function

[WARNING] Try to use a single 'var' statement per scope.
1}),displayPanelVPInfo_callback);}} ---> var  <--- displayPanelVPInfo_callback=functiondisplayPanelVPInfo_callback(result){if(

[WARNING] The function displayPanelVPInfo_callback has already been declared in the same scope...
displayPanelVPInfo_callback);}}var displayPanelVPInfo_callback=function ---> displayPanelVPInfo_callback <--- (result){if(_window_pop_up!=null&&

[WARNING] Try to use a single 'var' statement per scope.
1}),displayPanelRealProfileInfo_callback);}} ---> var  <--- displayPanelRealProfileInfo_callback=functiondisplayPanelRealProfileInfo(result){if(

[WARNING] The function displayPanelRealProfileInfo has already been declared in the same scope...
displayPanelRealProfileInfo_callback);}}var displayPanelRealProfileInfo_callback=function ---> displayPanelRealProfileInfo <--- (result){if(_window_pop_up!=null&&

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
==""){popup_name="remote";} ---> eval <--- ("windowCommentHistory = window.open(URL, popup_name, 'toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=286,height=210,left = 362,top = 234');");}functionnextAlert(){

[WARNING] Try to use a single 'var' statement per scope.
:eventId}),callBackNavigatorFunc);} ---> var  <--- callBackNavigatorFunc=functioncallBackNavigator(record){if(

[WARNING] Try to use a single 'var' statement per scope.
;alertRecordPosition--;replyAlert();} ---> var  <--- AlertNavAssignJsHandler=function(e){if(!

[WARNING] Try to use a single 'var' statement per scope.
:true}),callBackNavigatorFunc_Detail);} ---> var  <--- callBackNavigatorFunc_Detail=functioncallBackNavigatorDetail(record){if(

[WARNING] Try to use a single 'var' statement per scope.
);displayHistoryList();}}; ---> var  <--- AlertDetailNavAssignJsHandler=function(e){if(!

[WARNING] Try to use a single 'var' statement per scope.
:modEventId}),callBackNavigatorFuncMod);} ---> var  <--- callBackNavigatorFuncMod=functioncallBackNavigatorMod(record){if(

[WARNING] Try to use a single 'var' statement per scope.
);displayHistoryList();}}; ---> var  <--- ModAlertNavAssignJsHandler=function(e){if(!

[WARNING] Try to use a single 'var' statement per scope.
:true}),callBackNavigatorFuncMod_Detail);} ---> var  <--- callBackNavigatorFuncMod_Detail=functioncallBackNavigatorModDetail(record){if(

[WARNING] Try to use a single 'var' statement per scope.
);displayHistoryList();}}; ---> var  <--- ModAlertDetailNavAssignJsHandler=function(e){if(!


-------------------------------------- Minify E:/www/2.7/public/js/super_vp_allocation.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var ajax_flag=new Array(); ---> var  <--- number_of_ajaxcall=0;var frm_vp_list;var frm_vp_group;

[WARNING] Try to use a single 'var' statement per scope.
Array();var number_of_ajaxcall=0; ---> var  <--- frm_vp_list;var frm_vp_group;var frm_vp_log;var edit_check

[WARNING] Try to use a single 'var' statement per scope.
;var number_of_ajaxcall=0;var frm_vp_list; ---> var  <--- frm_vp_group;var frm_vp_log;var edit_check=0;

[WARNING] Try to use a single 'var' statement per scope.
=0;var frm_vp_list;var frm_vp_group; ---> var  <--- frm_vp_log;var edit_check=0;var error_infos=

[WARNING] Try to use a single 'var' statement per scope.
var frm_vp_list;var frm_vp_group;var frm_vp_log; ---> var  <--- edit_check=0;var error_infos="";var 

[WARNING] Try to use a single 'var' statement per scope.
;var frm_vp_log;var edit_check=0; ---> var  <--- error_infos="";var sortGroupField="";var 

[WARNING] Try to use a single 'var' statement per scope.
edit_check=0;var error_infos=""; ---> var  <--- sortGroupField="";var sortGroupType="";var 

[WARNING] Try to use a single 'var' statement per scope.
error_infos="";var sortGroupField=""; ---> var  <--- sortGroupType="";var idService="";function

[WARNING] Try to use a single 'var' statement per scope.
sortGroupField="";var sortGroupType=""; ---> var  <--- idService="";functionabortAjaxCalls(){for

[WARNING] Try to use a single 'var' statement per scope.
:vp_sort_type}),searchVp_callback);} ---> var  <--- searchVp_callback=functionsearchVp_callback(result){if(

[WARNING] The function searchVp_callback has already been declared in the same scope...
,searchVp_callback);}var searchVp_callback=function ---> searchVp_callback <--- (result){if(result==0)

[WARNING] Try to use a single 'var' statement per scope.
:pos}),displayVpDeAllocate_callback);} ---> var  <--- displayVpDeAllocate_callback=functiondisplayVpDeAllocate_callback(result){if(

[WARNING] The function displayVpDeAllocate_callback has already been declared in the same scope...
,displayVpDeAllocate_callback);}var displayVpDeAllocate_callback=function ---> displayVpDeAllocate_callback <--- (result){if(result==false)

[WARNING] Try to use a single 'var' statement per scope.
:is_lock}),lockVpAction_callback);} ---> var  <--- lockVpAction_callback=functionlockVpAction_callback(result){if(

[WARNING] The function lockVpAction_callback has already been declared in the same scope...
,lockVpAction_callback);}var lockVpAction_callback=function ---> lockVpAction_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
:center_id}),center_change_callback);} ---> var  <--- center_change_callback=functioncenter_change_callback(result){$(

[WARNING] The function center_change_callback has already been declared in the same scope...
,center_change_callback);}var center_change_callback=function ---> center_change_callback <--- (result){$("loadCenter").innerHTML

[WARNING] Try to use a single 'var' statement per scope.
:is_lock}),allocateVp_callback);} ---> var  <--- allocateVp_callback=function(result){if(result

[WARNING] Try to use a single 'var' statement per scope.
:old_account_name}),unlockVp_callback);} ---> var  <--- unlockVp_callback=functionunlockVp_callback(result){if(

[WARNING] The function unlockVp_callback has already been declared in the same scope...
,unlockVp_callback);}var unlockVp_callback=function ---> unlockVp_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
sortGroupType="";displayGroupAllocateSearch();} ---> var  <--- searchVpGroupAllocation_callback=functionsearchVpGroupAllocation_callback(result){if(

[WARNING] The function searchVpGroupAllocation_callback has already been declared in the same scope...
displayGroupAllocateSearch();}var searchVpGroupAllocation_callback=function ---> searchVpGroupAllocation_callback <--- (result){if(result==false)

[WARNING] Try to use a single 'var' statement per scope.
,"none");displayGroupAllocateSearch();} ---> var  <--- arrGroupAllocatedAction={};functionallocateVpGroup(){

[WARNING] Try to use a single 'var' statement per scope.
()}),callBackAddGroup);} ---> var  <--- callBackAddGroup=function(result){$j("#vpAjaxDiv"

[WARNING] Try to use a single 'var' statement per scope.
.parent().parent(); ---> var  <--- groupId=$j(div).attr("id"

[WARNING] Try to use a single 'var' statement per scope.
)]={type:"delete"}; ---> var  <--- html=$j(div).find(".groupName"

[WARNING] Try to use a single 'var' statement per scope.
}),saveAllocateVpGroup_callback);return;} ---> var  <--- saveAllocateVpGroup_callback=functionsaveAllocateVpGroup_callback(result){if(

[WARNING] The function saveAllocateVpGroup_callback has already been declared in the same scope...
);return;}var saveAllocateVpGroup_callback=function ---> saveAllocateVpGroup_callback <--- (result){if(result==true)

[WARNING] Try to use a single 'var' statement per scope.
="DATE_ACTION";pagingGaLog(0);} ---> var  <--- searchLog_callback=functionsearchLog_callback(result){if(

[WARNING] The function searchLog_callback has already been declared in the same scope...
(0);}var searchLog_callback=function ---> searchLog_callback <--- (result){if(result!=true)


-------------------------------------- Minify E:/www/2.7/public/js/widget_log.js-------------------------------------- 


[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
var wdTab; ---> var  <--- wdX;var wdY;var wdZ;var wdXLoad

[WARNING] Try to use a single 'var' statement per scope.
var wdTab;var wdX; ---> var  <--- wdY;var wdZ;var wdXLoad;var wdYLoad

[WARNING] Try to use a single 'var' statement per scope.
var wdTab;var wdX;var wdY; ---> var  <--- wdZ;var wdXLoad;var wdYLoad;var wdZLoad

[WARNING] Try to use a single 'var' statement per scope.
var wdX;var wdY;var wdZ; ---> var  <--- wdXLoad;var wdYLoad;var wdZLoad;functionerrorLoad

[WARNING] Try to use a single 'var' statement per scope.
var wdY;var wdZ;var wdXLoad; ---> var  <--- wdYLoad;var wdZLoad;functionerrorLoad(obj_id,

[WARNING] Try to use a single 'var' statement per scope.
var wdZ;var wdXLoad;var wdYLoad; ---> var  <--- wdZLoad;functionerrorLoad(obj_id,url,type

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
type=="anim"){removeWidgetLoading(); ---> eval <--- ("clearTimeout("+obj_id+"Load);");}}

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
+"')";executeFunction=obj_id+" = setTimeout(fun,WIDGET_LOADING_TIME)"; ---> eval <--- (executeFunction);if(type=="anim")

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
+"')";executeCheckingFunction=obj_id+"Load = setTimeout(funLoad,500)"; ---> eval <--- (executeCheckingFunction);}}functioncheckWidgetLoading(obj_id

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
+"')";executeCheckingFunction=obj_id+"Load = setTimeout(funLoad,500)"; ---> eval <--- (executeCheckingFunction);}else{removeWidgetLoading()

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
);}else{removeWidgetLoading(); ---> eval <--- ("clearTimeout("+obj_id+");");eval(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
eval("clearTimeout("+obj_id+");"); ---> eval <--- ("clearTimeout("+obj_id+"Load);");}}

[WARNING] The symbol $H is declared but is apparently never used.
This code can probably be written in a more compact way.
null){callAJAXnoIcon("widget","logWidgetPanel", ---> $H <--- ({type:obj_id,url:url}

[WARNING] The symbol fun is declared but is apparently never used.
This code can probably be written in a more compact way.
==null){type="tab";} ---> fun <--- ="errorLoad('"+obj_id+"','"+url+"','"
